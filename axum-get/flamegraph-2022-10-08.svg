<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2198" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2181.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="2181.00"> </text><svg id="frames" x="10" width="1180" total_samples="1378"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.07%)</title><rect x="0.0000%" y="2037" width="0.0726%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2047.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.15%)</title><rect x="0.0000%" y="2117" width="0.1451%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2127.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.15%)</title><rect x="0.0000%" y="2101" width="0.1451%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2111.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.15%)</title><rect x="0.0000%" y="2085" width="0.1451%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2095.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.15%)</title><rect x="0.0000%" y="2069" width="0.1451%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2079.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.15%)</title><rect x="0.0000%" y="2053" width="0.1451%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2063.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="2037" width="0.0726%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3226%" y="2047.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="2021" width="0.0726%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3226%" y="2031.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="2005" width="0.0726%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3226%" y="2015.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="1989" width="0.0726%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3226%" y="1999.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="1973" width="0.0726%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3226%" y="1983.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="1957" width="0.0726%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3226%" y="1967.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.0726%" y="1941" width="0.0726%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3226%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3 samples, 0.22%)</title><rect x="0.1451%" y="2069" width="0.2177%" height="15" fill="rgb(206,188,39)" fg:x="2" fg:w="3"/><text x="0.3951%" y="2079.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.15%)</title><rect x="0.2177%" y="2053" width="0.1451%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="2"/><text x="0.4677%" y="2063.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.15%)</title><rect x="0.2177%" y="2037" width="0.1451%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="2"/><text x="0.4677%" y="2047.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (2 samples, 0.15%)</title><rect x="0.2177%" y="2021" width="0.1451%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="2"/><text x="0.4677%" y="2031.50"></text></g><g><title>prctl (2 samples, 0.15%)</title><rect x="0.2177%" y="2005" width="0.1451%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="2"/><text x="0.4677%" y="2015.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2177%" y="1989" width="0.1451%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="2"/><text x="0.4677%" y="1999.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2177%" y="1973" width="0.1451%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="0.4677%" y="1983.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2177%" y="1957" width="0.1451%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="2"/><text x="0.4677%" y="1967.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2177%" y="1941" width="0.1451%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="2"/><text x="0.4677%" y="1951.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="0.2177%" y="1925" width="0.1451%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="0.4677%" y="1935.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.2903%" y="1909" width="0.0726%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="0.5403%" y="1919.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.2903%" y="1893" width="0.0726%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="1"/><text x="0.5403%" y="1903.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.2903%" y="1877" width="0.0726%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="0.5403%" y="1887.50"></text></g><g><title>sigaltstack (1 samples, 0.07%)</title><rect x="0.3628%" y="2037" width="0.0726%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="0.6128%" y="2047.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.3628%" y="2021" width="0.0726%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="1"/><text x="0.6128%" y="2031.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.3628%" y="2005" width="0.0726%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="0.6128%" y="2015.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.3628%" y="1989" width="0.0726%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.6128%" y="1999.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="0.3628%" y="1973" width="0.0726%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.6128%" y="1983.50"></text></g><g><title>__mmap (108 samples, 7.84%)</title><rect x="0.4354%" y="2005" width="7.8374%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="108"/><text x="0.6854%" y="2015.50">__mmap</text></g><g><title>[unknown] (108 samples, 7.84%)</title><rect x="0.4354%" y="1989" width="7.8374%" height="15" fill="rgb(213,181,19)" fg:x="6" fg:w="108"/><text x="0.6854%" y="1999.50">[unknown]</text></g><g><title>[unknown] (108 samples, 7.84%)</title><rect x="0.4354%" y="1973" width="7.8374%" height="15" fill="rgb(254,191,54)" fg:x="6" fg:w="108"/><text x="0.6854%" y="1983.50">[unknown]</text></g><g><title>[unknown] (108 samples, 7.84%)</title><rect x="0.4354%" y="1957" width="7.8374%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="108"/><text x="0.6854%" y="1967.50">[unknown]</text></g><g><title>[unknown] (108 samples, 7.84%)</title><rect x="0.4354%" y="1941" width="7.8374%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="108"/><text x="0.6854%" y="1951.50">[unknown]</text></g><g><title>[unknown] (107 samples, 7.76%)</title><rect x="0.5080%" y="1925" width="7.7649%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="107"/><text x="0.7580%" y="1935.50">[unknown]</text></g><g><title>[unknown] (105 samples, 7.62%)</title><rect x="0.6531%" y="1909" width="7.6197%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="105"/><text x="0.9031%" y="1919.50">[unknown]</text></g><g><title>[unknown] (105 samples, 7.62%)</title><rect x="0.6531%" y="1893" width="7.6197%" height="15" fill="rgb(238,167,29)" fg:x="9" fg:w="105"/><text x="0.9031%" y="1903.50">[unknown]</text></g><g><title>[unknown] (103 samples, 7.47%)</title><rect x="0.7983%" y="1877" width="7.4746%" height="15" fill="rgb(232,182,51)" fg:x="11" fg:w="103"/><text x="1.0483%" y="1887.50">[unknown]</text></g><g><title>[unknown] (102 samples, 7.40%)</title><rect x="0.8708%" y="1861" width="7.4020%" height="15" fill="rgb(231,60,39)" fg:x="12" fg:w="102"/><text x="1.1208%" y="1871.50">[unknown]</text></g><g><title>[unknown] (91 samples, 6.60%)</title><rect x="1.6691%" y="1845" width="6.6038%" height="15" fill="rgb(208,69,12)" fg:x="23" fg:w="91"/><text x="1.9191%" y="1855.50">[unknown]</text></g><g><title>[unknown] (84 samples, 6.10%)</title><rect x="2.1771%" y="1829" width="6.0958%" height="15" fill="rgb(235,93,37)" fg:x="30" fg:w="84"/><text x="2.4271%" y="1839.50">[unknown]</text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="7.9826%" y="1813" width="0.2903%" height="15" fill="rgb(213,116,39)" fg:x="110" fg:w="4"/><text x="8.2326%" y="1823.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="7.9826%" y="1797" width="0.2903%" height="15" fill="rgb(222,207,29)" fg:x="110" fg:w="4"/><text x="8.2326%" y="1807.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="8.1277%" y="1781" width="0.1451%" height="15" fill="rgb(206,96,30)" fg:x="112" fg:w="2"/><text x="8.3777%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="8.1277%" y="1765" width="0.1451%" height="15" fill="rgb(218,138,4)" fg:x="112" fg:w="2"/><text x="8.3777%" y="1775.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="8.1277%" y="1749" width="0.1451%" height="15" fill="rgb(250,191,14)" fg:x="112" fg:w="2"/><text x="8.3777%" y="1759.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="8.1277%" y="1733" width="0.1451%" height="15" fill="rgb(239,60,40)" fg:x="112" fg:w="2"/><text x="8.3777%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="8.2003%" y="1717" width="0.0726%" height="15" fill="rgb(206,27,48)" fg:x="113" fg:w="1"/><text x="8.4503%" y="1727.50"></text></g><g><title>[libc.so.6] (125 samples, 9.07%)</title><rect x="0.1451%" y="2101" width="9.0711%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="125"/><text x="0.3951%" y="2111.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (125 samples, 9.07%)</title><rect x="0.1451%" y="2085" width="9.0711%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="125"/><text x="0.3951%" y="2095.50">std::sys::uni..</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (122 samples, 8.85%)</title><rect x="0.3628%" y="2069" width="8.8534%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="122"/><text x="0.6128%" y="2079.50">std::sys::uni..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (122 samples, 8.85%)</title><rect x="0.3628%" y="2053" width="8.8534%" height="15" fill="rgb(231,138,38)" fg:x="5" fg:w="122"/><text x="0.6128%" y="2063.50">std::sys::uni..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (121 samples, 8.78%)</title><rect x="0.4354%" y="2037" width="8.7808%" height="15" fill="rgb(231,145,46)" fg:x="6" fg:w="121"/><text x="0.6854%" y="2047.50">std::sys::un..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (121 samples, 8.78%)</title><rect x="0.4354%" y="2021" width="8.7808%" height="15" fill="rgb(251,118,11)" fg:x="6" fg:w="121"/><text x="0.6854%" y="2031.50">std::sys::un..</text></g><g><title>mprotect (13 samples, 0.94%)</title><rect x="8.2729%" y="2005" width="0.9434%" height="15" fill="rgb(217,147,25)" fg:x="114" fg:w="13"/><text x="8.5229%" y="2015.50"></text></g><g><title>[unknown] (13 samples, 0.94%)</title><rect x="8.2729%" y="1989" width="0.9434%" height="15" fill="rgb(247,81,37)" fg:x="114" fg:w="13"/><text x="8.5229%" y="1999.50"></text></g><g><title>[unknown] (13 samples, 0.94%)</title><rect x="8.2729%" y="1973" width="0.9434%" height="15" fill="rgb(209,12,38)" fg:x="114" fg:w="13"/><text x="8.5229%" y="1983.50"></text></g><g><title>[unknown] (13 samples, 0.94%)</title><rect x="8.2729%" y="1957" width="0.9434%" height="15" fill="rgb(227,1,9)" fg:x="114" fg:w="13"/><text x="8.5229%" y="1967.50"></text></g><g><title>[unknown] (13 samples, 0.94%)</title><rect x="8.2729%" y="1941" width="0.9434%" height="15" fill="rgb(248,47,43)" fg:x="114" fg:w="13"/><text x="8.5229%" y="1951.50"></text></g><g><title>[unknown] (12 samples, 0.87%)</title><rect x="8.3454%" y="1925" width="0.8708%" height="15" fill="rgb(221,10,30)" fg:x="115" fg:w="12"/><text x="8.5954%" y="1935.50"></text></g><g><title>[unknown] (8 samples, 0.58%)</title><rect x="8.6357%" y="1909" width="0.5806%" height="15" fill="rgb(210,229,1)" fg:x="119" fg:w="8"/><text x="8.8857%" y="1919.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="8.9985%" y="1893" width="0.2177%" height="15" fill="rgb(222,148,37)" fg:x="124" fg:w="3"/><text x="9.2485%" y="1903.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="9.0711%" y="1877" width="0.1451%" height="15" fill="rgb(234,67,33)" fg:x="125" fg:w="2"/><text x="9.3211%" y="1887.50"></text></g><g><title>[libc.so.6] (150 samples, 10.89%)</title><rect x="0.1451%" y="2117" width="10.8853%" height="15" fill="rgb(247,98,35)" fg:x="2" fg:w="150"/><text x="0.3951%" y="2127.50">[libc.so.6]</text></g><g><title>[unknown] (25 samples, 1.81%)</title><rect x="9.2163%" y="2101" width="1.8142%" height="15" fill="rgb(247,138,52)" fg:x="127" fg:w="25"/><text x="9.4663%" y="2111.50">[..</text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2085" width="1.7417%" height="15" fill="rgb(213,79,30)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2095.50"></text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2069" width="1.7417%" height="15" fill="rgb(246,177,23)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2079.50"></text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2053" width="1.7417%" height="15" fill="rgb(230,62,27)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2063.50"></text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2037" width="1.7417%" height="15" fill="rgb(216,154,8)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2047.50"></text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2021" width="1.7417%" height="15" fill="rgb(244,35,45)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2031.50"></text></g><g><title>[unknown] (24 samples, 1.74%)</title><rect x="9.2888%" y="2005" width="1.7417%" height="15" fill="rgb(251,115,12)" fg:x="128" fg:w="24"/><text x="9.5388%" y="2015.50"></text></g><g><title>[unknown] (23 samples, 1.67%)</title><rect x="9.3614%" y="1989" width="1.6691%" height="15" fill="rgb(240,54,50)" fg:x="129" fg:w="23"/><text x="9.6114%" y="1999.50"></text></g><g><title>[unknown] (21 samples, 1.52%)</title><rect x="9.5065%" y="1973" width="1.5239%" height="15" fill="rgb(233,84,52)" fg:x="131" fg:w="21"/><text x="9.7565%" y="1983.50"></text></g><g><title>[unknown] (20 samples, 1.45%)</title><rect x="9.5791%" y="1957" width="1.4514%" height="15" fill="rgb(207,117,47)" fg:x="132" fg:w="20"/><text x="9.8291%" y="1967.50"></text></g><g><title>[unknown] (17 samples, 1.23%)</title><rect x="9.7968%" y="1941" width="1.2337%" height="15" fill="rgb(249,43,39)" fg:x="135" fg:w="17"/><text x="10.0468%" y="1951.50"></text></g><g><title>[unknown] (14 samples, 1.02%)</title><rect x="10.0145%" y="1925" width="1.0160%" height="15" fill="rgb(209,38,44)" fg:x="138" fg:w="14"/><text x="10.2645%" y="1935.50"></text></g><g><title>[unknown] (12 samples, 0.87%)</title><rect x="10.1597%" y="1909" width="0.8708%" height="15" fill="rgb(236,212,23)" fg:x="140" fg:w="12"/><text x="10.4097%" y="1919.50"></text></g><g><title>[unknown] (11 samples, 0.80%)</title><rect x="10.2322%" y="1893" width="0.7983%" height="15" fill="rgb(242,79,21)" fg:x="141" fg:w="11"/><text x="10.4822%" y="1903.50"></text></g><g><title>[unknown] (10 samples, 0.73%)</title><rect x="10.3048%" y="1877" width="0.7257%" height="15" fill="rgb(211,96,35)" fg:x="142" fg:w="10"/><text x="10.5548%" y="1887.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="10.3774%" y="1861" width="0.6531%" height="15" fill="rgb(253,215,40)" fg:x="143" fg:w="9"/><text x="10.6274%" y="1871.50"></text></g><g><title>[unknown] (6 samples, 0.44%)</title><rect x="10.5951%" y="1845" width="0.4354%" height="15" fill="rgb(211,81,21)" fg:x="146" fg:w="6"/><text x="10.8451%" y="1855.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="10.7402%" y="1829" width="0.2903%" height="15" fill="rgb(208,190,38)" fg:x="148" fg:w="4"/><text x="10.9902%" y="1839.50"></text></g><g><title>[unknown] (1,149 samples, 83.38%)</title><rect x="11.0305%" y="2117" width="83.3817%" height="15" fill="rgb(235,213,38)" fg:x="152" fg:w="1149"/><text x="11.2805%" y="2127.50">[unknown]</text></g><g><title>[unknown] (1,136 samples, 82.44%)</title><rect x="11.9739%" y="2101" width="82.4383%" height="15" fill="rgb(237,122,38)" fg:x="165" fg:w="1136"/><text x="12.2239%" y="2111.50">[unknown]</text></g><g><title>[unknown] (1,119 samples, 81.20%)</title><rect x="13.2075%" y="2085" width="81.2046%" height="15" fill="rgb(244,218,35)" fg:x="182" fg:w="1119"/><text x="13.4575%" y="2095.50">[unknown]</text></g><g><title>[unknown] (1,006 samples, 73.00%)</title><rect x="21.4078%" y="2069" width="73.0044%" height="15" fill="rgb(240,68,47)" fg:x="295" fg:w="1006"/><text x="21.6578%" y="2079.50">[unknown]</text></g><g><title>[unknown] (971 samples, 70.46%)</title><rect x="23.9478%" y="2053" width="70.4644%" height="15" fill="rgb(210,16,53)" fg:x="330" fg:w="971"/><text x="24.1978%" y="2063.50">[unknown]</text></g><g><title>[unknown] (952 samples, 69.09%)</title><rect x="25.3266%" y="2037" width="69.0856%" height="15" fill="rgb(235,124,12)" fg:x="349" fg:w="952"/><text x="25.5766%" y="2047.50">[unknown]</text></g><g><title>[unknown] (948 samples, 68.80%)</title><rect x="25.6168%" y="2021" width="68.7954%" height="15" fill="rgb(224,169,11)" fg:x="353" fg:w="948"/><text x="25.8668%" y="2031.50">[unknown]</text></g><g><title>[unknown] (43 samples, 3.12%)</title><rect x="91.2917%" y="2005" width="3.1205%" height="15" fill="rgb(250,166,2)" fg:x="1258" fg:w="43"/><text x="91.5417%" y="2015.50">[un..</text></g><g><title>[unknown] (41 samples, 2.98%)</title><rect x="91.4369%" y="1989" width="2.9753%" height="15" fill="rgb(242,216,29)" fg:x="1260" fg:w="41"/><text x="91.6869%" y="1999.50">[un..</text></g><g><title>[unknown] (40 samples, 2.90%)</title><rect x="91.5094%" y="1973" width="2.9028%" height="15" fill="rgb(230,116,27)" fg:x="1261" fg:w="40"/><text x="91.7594%" y="1983.50">[u..</text></g><g><title>[unknown] (36 samples, 2.61%)</title><rect x="91.7997%" y="1957" width="2.6125%" height="15" fill="rgb(228,99,48)" fg:x="1265" fg:w="36"/><text x="92.0497%" y="1967.50">[u..</text></g><g><title>[unknown] (36 samples, 2.61%)</title><rect x="91.7997%" y="1941" width="2.6125%" height="15" fill="rgb(253,11,6)" fg:x="1265" fg:w="36"/><text x="92.0497%" y="1951.50">[u..</text></g><g><title>[unknown] (30 samples, 2.18%)</title><rect x="92.2351%" y="1925" width="2.1771%" height="15" fill="rgb(247,143,39)" fg:x="1271" fg:w="30"/><text x="92.4851%" y="1935.50">[..</text></g><g><title>[unknown] (25 samples, 1.81%)</title><rect x="92.5980%" y="1909" width="1.8142%" height="15" fill="rgb(236,97,10)" fg:x="1276" fg:w="25"/><text x="92.8480%" y="1919.50">[..</text></g><g><title>[unknown] (21 samples, 1.52%)</title><rect x="92.8882%" y="1893" width="1.5239%" height="15" fill="rgb(233,208,19)" fg:x="1280" fg:w="21"/><text x="93.1382%" y="1903.50"></text></g><g><title>[unknown] (18 samples, 1.31%)</title><rect x="93.1060%" y="1877" width="1.3062%" height="15" fill="rgb(216,164,2)" fg:x="1283" fg:w="18"/><text x="93.3560%" y="1887.50"></text></g><g><title>[unknown] (16 samples, 1.16%)</title><rect x="93.2511%" y="1861" width="1.1611%" height="15" fill="rgb(220,129,5)" fg:x="1285" fg:w="16"/><text x="93.5011%" y="1871.50"></text></g><g><title>[unknown] (15 samples, 1.09%)</title><rect x="93.3237%" y="1845" width="1.0885%" height="15" fill="rgb(242,17,10)" fg:x="1286" fg:w="15"/><text x="93.5737%" y="1855.50"></text></g><g><title>[unknown] (14 samples, 1.02%)</title><rect x="93.3962%" y="1829" width="1.0160%" height="15" fill="rgb(242,107,0)" fg:x="1287" fg:w="14"/><text x="93.6462%" y="1839.50"></text></g><g><title>[unknown] (14 samples, 1.02%)</title><rect x="93.3962%" y="1813" width="1.0160%" height="15" fill="rgb(251,28,31)" fg:x="1287" fg:w="14"/><text x="93.6462%" y="1823.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="93.7591%" y="1797" width="0.6531%" height="15" fill="rgb(233,223,10)" fg:x="1292" fg:w="9"/><text x="94.0091%" y="1807.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="94.1219%" y="1781" width="0.2903%" height="15" fill="rgb(215,21,27)" fg:x="1297" fg:w="4"/><text x="94.3719%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.2671%" y="1765" width="0.1451%" height="15" fill="rgb(232,23,21)" fg:x="1299" fg:w="2"/><text x="94.5171%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::new (1 samples, 0.07%)</title><rect x="94.4122%" y="1813" width="0.0726%" height="15" fill="rgb(244,5,23)" fg:x="1301" fg:w="1"/><text x="94.6622%" y="1823.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::create (1 samples, 0.07%)</title><rect x="94.4122%" y="1797" width="0.0726%" height="15" fill="rgb(226,81,46)" fg:x="1301" fg:w="1"/><text x="94.6622%" y="1807.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::local (1 samples, 0.07%)</title><rect x="94.4122%" y="1781" width="0.0726%" height="15" fill="rgb(247,70,30)" fg:x="1301" fg:w="1"/><text x="94.6622%" y="1791.50"></text></g><g><title>__mmap (1 samples, 0.07%)</title><rect x="94.4848%" y="1621" width="0.0726%" height="15" fill="rgb(212,68,19)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1631.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1605" width="0.0726%" height="15" fill="rgb(240,187,13)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1615.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1589" width="0.0726%" height="15" fill="rgb(223,113,26)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1599.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1573" width="0.0726%" height="15" fill="rgb(206,192,2)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1583.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1557" width="0.0726%" height="15" fill="rgb(241,108,4)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1567.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1541" width="0.0726%" height="15" fill="rgb(247,173,49)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1551.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1525" width="0.0726%" height="15" fill="rgb(224,114,35)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1535.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1509" width="0.0726%" height="15" fill="rgb(245,159,27)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1519.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.4848%" y="1493" width="0.0726%" height="15" fill="rgb(245,172,44)" fg:x="1302" fg:w="1"/><text x="94.7348%" y="1503.50"></text></g><g><title>_dl_allocate_tls (1 samples, 0.07%)</title><rect x="94.5573%" y="1621" width="0.0726%" height="15" fill="rgb(236,23,11)" fg:x="1303" fg:w="1"/><text x="94.8073%" y="1631.50"></text></g><g><title>__libc_calloc (1 samples, 0.07%)</title><rect x="94.5573%" y="1605" width="0.0726%" height="15" fill="rgb(205,117,38)" fg:x="1303" fg:w="1"/><text x="94.8073%" y="1615.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="94.5573%" y="1589" width="0.0726%" height="15" fill="rgb(237,72,25)" fg:x="1303" fg:w="1"/><text x="94.8073%" y="1599.50"></text></g><g><title>axum-get (1,306 samples, 94.78%)</title><rect x="0.0000%" y="2133" width="94.7750%" height="15" fill="rgb(244,70,9)" fg:x="0" fg:w="1306"/><text x="0.2500%" y="2143.50">axum-get</text></g><g><title>_start (5 samples, 0.36%)</title><rect x="94.4122%" y="2117" width="0.3628%" height="15" fill="rgb(217,125,39)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2127.50"></text></g><g><title>__libc_start_main (5 samples, 0.36%)</title><rect x="94.4122%" y="2101" width="0.3628%" height="15" fill="rgb(235,36,10)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2111.50"></text></g><g><title>[libc.so.6] (5 samples, 0.36%)</title><rect x="94.4122%" y="2085" width="0.3628%" height="15" fill="rgb(251,123,47)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2095.50"></text></g><g><title>main (5 samples, 0.36%)</title><rect x="94.4122%" y="2069" width="0.3628%" height="15" fill="rgb(221,13,13)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2079.50"></text></g><g><title>std::rt::lang_start_internal (5 samples, 0.36%)</title><rect x="94.4122%" y="2053" width="0.3628%" height="15" fill="rgb(238,131,9)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="94.4122%" y="2037" width="0.3628%" height="15" fill="rgb(211,50,8)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2047.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="94.4122%" y="2021" width="0.3628%" height="15" fill="rgb(245,182,24)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="94.4122%" y="2005" width="0.3628%" height="15" fill="rgb(242,14,37)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="2015.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (5 samples, 0.36%)</title><rect x="94.4122%" y="1989" width="0.3628%" height="15" fill="rgb(246,228,12)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.36%)</title><rect x="94.4122%" y="1973" width="0.3628%" height="15" fill="rgb(213,55,15)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1983.50"></text></g><g><title>std::panicking::try (5 samples, 0.36%)</title><rect x="94.4122%" y="1957" width="0.3628%" height="15" fill="rgb(209,9,3)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.36%)</title><rect x="94.4122%" y="1941" width="0.3628%" height="15" fill="rgb(230,59,30)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5 samples, 0.36%)</title><rect x="94.4122%" y="1925" width="0.3628%" height="15" fill="rgb(209,121,21)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1935.50"></text></g><g><title>std::rt::lang_start::{{closure}} (5 samples, 0.36%)</title><rect x="94.4122%" y="1909" width="0.3628%" height="15" fill="rgb(220,109,13)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1919.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.36%)</title><rect x="94.4122%" y="1893" width="0.3628%" height="15" fill="rgb(232,18,1)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1903.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.36%)</title><rect x="94.4122%" y="1877" width="0.3628%" height="15" fill="rgb(215,41,42)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1887.50"></text></g><g><title>axum_get::main (5 samples, 0.36%)</title><rect x="94.4122%" y="1861" width="0.3628%" height="15" fill="rgb(224,123,36)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1871.50"></text></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.36%)</title><rect x="94.4122%" y="1845" width="0.3628%" height="15" fill="rgb(240,125,3)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1855.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (5 samples, 0.36%)</title><rect x="94.4122%" y="1829" width="0.3628%" height="15" fill="rgb(205,98,50)" fg:x="1301" fg:w="5"/><text x="94.6622%" y="1839.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (4 samples, 0.29%)</title><rect x="94.4848%" y="1813" width="0.2903%" height="15" fill="rgb(205,185,37)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1823.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (4 samples, 0.29%)</title><rect x="94.4848%" y="1797" width="0.2903%" height="15" fill="rgb(238,207,15)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1807.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (4 samples, 0.29%)</title><rect x="94.4848%" y="1781" width="0.2903%" height="15" fill="rgb(213,199,42)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1791.50"></text></g><g><title>tokio::runtime::handle::HandleInner::spawn_blocking (4 samples, 0.29%)</title><rect x="94.4848%" y="1765" width="0.2903%" height="15" fill="rgb(235,201,11)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1775.50"></text></g><g><title>tokio::runtime::handle::HandleInner::spawn_blocking_inner (4 samples, 0.29%)</title><rect x="94.4848%" y="1749" width="0.2903%" height="15" fill="rgb(207,46,11)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1759.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (4 samples, 0.29%)</title><rect x="94.4848%" y="1733" width="0.2903%" height="15" fill="rgb(241,35,35)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1743.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (4 samples, 0.29%)</title><rect x="94.4848%" y="1717" width="0.2903%" height="15" fill="rgb(243,32,47)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1727.50"></text></g><g><title>std::thread::Builder::spawn (4 samples, 0.29%)</title><rect x="94.4848%" y="1701" width="0.2903%" height="15" fill="rgb(247,202,23)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1711.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (4 samples, 0.29%)</title><rect x="94.4848%" y="1685" width="0.2903%" height="15" fill="rgb(219,102,11)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1695.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_ (4 samples, 0.29%)</title><rect x="94.4848%" y="1669" width="0.2903%" height="15" fill="rgb(243,110,44)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1679.50"></text></g><g><title>std::sys::unix::thread::Thread::new (4 samples, 0.29%)</title><rect x="94.4848%" y="1653" width="0.2903%" height="15" fill="rgb(222,74,54)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1663.50"></text></g><g><title>pthread_create (4 samples, 0.29%)</title><rect x="94.4848%" y="1637" width="0.2903%" height="15" fill="rgb(216,99,12)" fg:x="1302" fg:w="4"/><text x="94.7348%" y="1647.50"></text></g><g><title>mprotect (2 samples, 0.15%)</title><rect x="94.6299%" y="1621" width="0.1451%" height="15" fill="rgb(226,22,26)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1631.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1605" width="0.1451%" height="15" fill="rgb(217,163,10)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1615.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1589" width="0.1451%" height="15" fill="rgb(213,25,53)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1599.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1573" width="0.1451%" height="15" fill="rgb(252,105,26)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1583.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1557" width="0.1451%" height="15" fill="rgb(220,39,43)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1567.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1541" width="0.1451%" height="15" fill="rgb(229,68,48)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1551.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1525" width="0.1451%" height="15" fill="rgb(252,8,32)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1535.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1509" width="0.1451%" height="15" fill="rgb(223,20,43)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="94.6299%" y="1493" width="0.1451%" height="15" fill="rgb(229,81,49)" fg:x="1304" fg:w="2"/><text x="94.8799%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.7025%" y="1477" width="0.0726%" height="15" fill="rgb(236,28,36)" fg:x="1305" fg:w="1"/><text x="94.9525%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.7025%" y="1461" width="0.0726%" height="15" fill="rgb(249,185,26)" fg:x="1305" fg:w="1"/><text x="94.9525%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.7025%" y="1445" width="0.0726%" height="15" fill="rgb(249,174,33)" fg:x="1305" fg:w="1"/><text x="94.9525%" y="1455.50"></text></g><g><title>perf-exec (9 samples, 0.65%)</title><rect x="94.7750%" y="2133" width="0.6531%" height="15" fill="rgb(233,201,37)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2143.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2117" width="0.6531%" height="15" fill="rgb(221,78,26)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2127.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2101" width="0.6531%" height="15" fill="rgb(250,127,30)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2111.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2085" width="0.6531%" height="15" fill="rgb(230,49,44)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2095.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2069" width="0.6531%" height="15" fill="rgb(229,67,23)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2079.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2053" width="0.6531%" height="15" fill="rgb(249,83,47)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2063.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2037" width="0.6531%" height="15" fill="rgb(215,43,3)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2047.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2021" width="0.6531%" height="15" fill="rgb(238,154,13)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2031.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="2005" width="0.6531%" height="15" fill="rgb(219,56,2)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="2015.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="1989" width="0.6531%" height="15" fill="rgb(233,0,4)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="1999.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="1973" width="0.6531%" height="15" fill="rgb(235,30,7)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="1983.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="94.7750%" y="1957" width="0.6531%" height="15" fill="rgb(250,79,13)" fg:x="1306" fg:w="9"/><text x="95.0250%" y="1967.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="94.9202%" y="1941" width="0.5080%" height="15" fill="rgb(211,146,34)" fg:x="1308" fg:w="7"/><text x="95.1702%" y="1951.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="94.9202%" y="1925" width="0.5080%" height="15" fill="rgb(228,22,38)" fg:x="1308" fg:w="7"/><text x="95.1702%" y="1935.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="94.9202%" y="1909" width="0.5080%" height="15" fill="rgb(235,168,5)" fg:x="1308" fg:w="7"/><text x="95.1702%" y="1919.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="94.9202%" y="1893" width="0.5080%" height="15" fill="rgb(221,155,16)" fg:x="1308" fg:w="7"/><text x="95.1702%" y="1903.50"></text></g><g><title>core::mem::drop (1 samples, 0.07%)</title><rect x="95.4282%" y="1877" width="0.0726%" height="15" fill="rgb(215,215,53)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.07%)</title><rect x="95.4282%" y="1861" width="0.0726%" height="15" fill="rgb(223,4,10)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.07%)</title><rect x="95.4282%" y="1845" width="0.0726%" height="15" fill="rgb(234,103,6)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1855.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="95.4282%" y="1829" width="0.0726%" height="15" fill="rgb(227,97,0)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1839.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.07%)</title><rect x="95.4282%" y="1813" width="0.0726%" height="15" fill="rgb(234,150,53)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1823.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="95.4282%" y="1797" width="0.0726%" height="15" fill="rgb(228,201,54)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1781" width="0.0726%" height="15" fill="rgb(222,22,37)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1765" width="0.0726%" height="15" fill="rgb(237,53,32)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1749" width="0.0726%" height="15" fill="rgb(233,25,53)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1733" width="0.0726%" height="15" fill="rgb(210,40,34)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1717" width="0.0726%" height="15" fill="rgb(241,220,44)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="95.4282%" y="1701" width="0.0726%" height="15" fill="rgb(235,28,35)" fg:x="1315" fg:w="1"/><text x="95.6782%" y="1711.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (38 samples, 2.76%)</title><rect x="95.5007%" y="1877" width="2.7576%" height="15" fill="rgb(210,56,17)" fg:x="1316" fg:w="38"/><text x="95.7507%" y="1887.50">to..</text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (38 samples, 2.76%)</title><rect x="95.5007%" y="1861" width="2.7576%" height="15" fill="rgb(224,130,29)" fg:x="1316" fg:w="38"/><text x="95.7507%" y="1871.50">lo..</text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (38 samples, 2.76%)</title><rect x="95.5007%" y="1845" width="2.7576%" height="15" fill="rgb(235,212,8)" fg:x="1316" fg:w="38"/><text x="95.7507%" y="1855.50">&lt;p..</text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (38 samples, 2.76%)</title><rect x="95.5007%" y="1829" width="2.7576%" height="15" fill="rgb(223,33,50)" fg:x="1316" fg:w="38"/><text x="95.7507%" y="1839.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park (37 samples, 2.69%)</title><rect x="95.5733%" y="1813" width="2.6851%" height="15" fill="rgb(219,149,13)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1823.50">pa..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (37 samples, 2.69%)</title><rect x="95.5733%" y="1797" width="2.6851%" height="15" fill="rgb(250,156,29)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1807.50">pa..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (37 samples, 2.69%)</title><rect x="95.5733%" y="1781" width="2.6851%" height="15" fill="rgb(216,193,19)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1791.50">pa..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (37 samples, 2.69%)</title><rect x="95.5733%" y="1765" width="2.6851%" height="15" fill="rgb(216,135,14)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1775.50">&lt;p..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (37 samples, 2.69%)</title><rect x="95.5733%" y="1749" width="2.6851%" height="15" fill="rgb(241,47,5)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1759.50">pa..</text></g><g><title>syscall (37 samples, 2.69%)</title><rect x="95.5733%" y="1733" width="2.6851%" height="15" fill="rgb(233,42,35)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1743.50">sy..</text></g><g><title>[unknown] (37 samples, 2.69%)</title><rect x="95.5733%" y="1717" width="2.6851%" height="15" fill="rgb(231,13,6)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1727.50">[u..</text></g><g><title>[unknown] (37 samples, 2.69%)</title><rect x="95.5733%" y="1701" width="2.6851%" height="15" fill="rgb(207,181,40)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1711.50">[u..</text></g><g><title>[unknown] (37 samples, 2.69%)</title><rect x="95.5733%" y="1685" width="2.6851%" height="15" fill="rgb(254,173,49)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1695.50">[u..</text></g><g><title>[unknown] (37 samples, 2.69%)</title><rect x="95.5733%" y="1669" width="2.6851%" height="15" fill="rgb(221,1,38)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1679.50">[u..</text></g><g><title>[unknown] (37 samples, 2.69%)</title><rect x="95.5733%" y="1653" width="2.6851%" height="15" fill="rgb(206,124,46)" fg:x="1317" fg:w="37"/><text x="95.8233%" y="1663.50">[u..</text></g><g><title>[unknown] (36 samples, 2.61%)</title><rect x="95.6459%" y="1637" width="2.6125%" height="15" fill="rgb(249,21,11)" fg:x="1318" fg:w="36"/><text x="95.8959%" y="1647.50">[u..</text></g><g><title>[unknown] (35 samples, 2.54%)</title><rect x="95.7184%" y="1621" width="2.5399%" height="15" fill="rgb(222,201,40)" fg:x="1319" fg:w="35"/><text x="95.9684%" y="1631.50">[u..</text></g><g><title>[unknown] (35 samples, 2.54%)</title><rect x="95.7184%" y="1605" width="2.5399%" height="15" fill="rgb(235,61,29)" fg:x="1319" fg:w="35"/><text x="95.9684%" y="1615.50">[u..</text></g><g><title>[unknown] (35 samples, 2.54%)</title><rect x="95.7184%" y="1589" width="2.5399%" height="15" fill="rgb(219,207,3)" fg:x="1319" fg:w="35"/><text x="95.9684%" y="1599.50">[u..</text></g><g><title>[unknown] (31 samples, 2.25%)</title><rect x="96.0087%" y="1573" width="2.2496%" height="15" fill="rgb(222,56,46)" fg:x="1323" fg:w="31"/><text x="96.2587%" y="1583.50">[..</text></g><g><title>[unknown] (30 samples, 2.18%)</title><rect x="96.0813%" y="1557" width="2.1771%" height="15" fill="rgb(239,76,54)" fg:x="1324" fg:w="30"/><text x="96.3313%" y="1567.50">[..</text></g><g><title>[unknown] (30 samples, 2.18%)</title><rect x="96.0813%" y="1541" width="2.1771%" height="15" fill="rgb(231,124,27)" fg:x="1324" fg:w="30"/><text x="96.3313%" y="1551.50">[..</text></g><g><title>[unknown] (30 samples, 2.18%)</title><rect x="96.0813%" y="1525" width="2.1771%" height="15" fill="rgb(249,195,6)" fg:x="1324" fg:w="30"/><text x="96.3313%" y="1535.50">[..</text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1132%" y="1509" width="0.1451%" height="15" fill="rgb(237,174,47)" fg:x="1352" fg:w="2"/><text x="98.3632%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="98.1132%" y="1493" width="0.1451%" height="15" fill="rgb(206,201,31)" fg:x="1352" fg:w="2"/><text x="98.3632%" y="1503.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1477" width="0.0726%" height="15" fill="rgb(231,57,52)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1461" width="0.0726%" height="15" fill="rgb(248,177,22)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1445" width="0.0726%" height="15" fill="rgb(215,211,37)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1429" width="0.0726%" height="15" fill="rgb(241,128,51)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1413" width="0.0726%" height="15" fill="rgb(227,165,31)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1397" width="0.0726%" height="15" fill="rgb(228,167,24)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1381" width="0.0726%" height="15" fill="rgb(228,143,12)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1365" width="0.0726%" height="15" fill="rgb(249,149,8)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.1858%" y="1349" width="0.0726%" height="15" fill="rgb(243,35,44)" fg:x="1353" fg:w="1"/><text x="98.4358%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (9 samples, 0.65%)</title><rect x="98.3309%" y="1493" width="0.6531%" height="15" fill="rgb(246,89,9)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1503.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (9 samples, 0.65%)</title><rect x="98.3309%" y="1477" width="0.6531%" height="15" fill="rgb(233,213,13)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1487.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (9 samples, 0.65%)</title><rect x="98.3309%" y="1461" width="0.6531%" height="15" fill="rgb(233,141,41)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1471.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (9 samples, 0.65%)</title><rect x="98.3309%" y="1445" width="0.6531%" height="15" fill="rgb(239,167,4)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1455.50"></text></g><g><title>parking_lot_core::parking_lot::park (9 samples, 0.65%)</title><rect x="98.3309%" y="1429" width="0.6531%" height="15" fill="rgb(209,217,16)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1439.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (9 samples, 0.65%)</title><rect x="98.3309%" y="1413" width="0.6531%" height="15" fill="rgb(219,88,35)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1423.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (9 samples, 0.65%)</title><rect x="98.3309%" y="1397" width="0.6531%" height="15" fill="rgb(220,193,23)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1407.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (9 samples, 0.65%)</title><rect x="98.3309%" y="1381" width="0.6531%" height="15" fill="rgb(230,90,52)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1391.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (9 samples, 0.65%)</title><rect x="98.3309%" y="1365" width="0.6531%" height="15" fill="rgb(252,106,19)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1375.50"></text></g><g><title>syscall (9 samples, 0.65%)</title><rect x="98.3309%" y="1349" width="0.6531%" height="15" fill="rgb(206,74,20)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1359.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1333" width="0.6531%" height="15" fill="rgb(230,138,44)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1343.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1317" width="0.6531%" height="15" fill="rgb(235,182,43)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1327.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1301" width="0.6531%" height="15" fill="rgb(242,16,51)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1311.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1285" width="0.6531%" height="15" fill="rgb(248,9,4)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1295.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1269" width="0.6531%" height="15" fill="rgb(210,31,22)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1279.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1253" width="0.6531%" height="15" fill="rgb(239,54,39)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1263.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1237" width="0.6531%" height="15" fill="rgb(230,99,41)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1247.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1221" width="0.6531%" height="15" fill="rgb(253,106,12)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1231.50"></text></g><g><title>[unknown] (9 samples, 0.65%)</title><rect x="98.3309%" y="1205" width="0.6531%" height="15" fill="rgb(213,46,41)" fg:x="1355" fg:w="9"/><text x="98.5809%" y="1215.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="98.4761%" y="1189" width="0.5080%" height="15" fill="rgb(215,133,35)" fg:x="1357" fg:w="7"/><text x="98.7261%" y="1199.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="98.4761%" y="1173" width="0.5080%" height="15" fill="rgb(213,28,5)" fg:x="1357" fg:w="7"/><text x="98.7261%" y="1183.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="98.4761%" y="1157" width="0.5080%" height="15" fill="rgb(215,77,49)" fg:x="1357" fg:w="7"/><text x="98.7261%" y="1167.50"></text></g><g><title>[unknown] (7 samples, 0.51%)</title><rect x="98.4761%" y="1141" width="0.5080%" height="15" fill="rgb(248,100,22)" fg:x="1357" fg:w="7"/><text x="98.7261%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (11 samples, 0.80%)</title><rect x="98.2583%" y="1557" width="0.7983%" height="15" fill="rgb(208,67,9)" fg:x="1354" fg:w="11"/><text x="98.5083%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (11 samples, 0.80%)</title><rect x="98.2583%" y="1541" width="0.7983%" height="15" fill="rgb(219,133,21)" fg:x="1354" fg:w="11"/><text x="98.5083%" y="1551.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::park::Parker as tokio::park::Park&gt;::park (11 samples, 0.80%)</title><rect x="98.2583%" y="1525" width="0.7983%" height="15" fill="rgb(246,46,29)" fg:x="1354" fg:w="11"/><text x="98.5083%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (10 samples, 0.73%)</title><rect x="98.3309%" y="1509" width="0.7257%" height="15" fill="rgb(246,185,52)" fg:x="1355" fg:w="10"/><text x="98.5809%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (1 samples, 0.07%)</title><rect x="98.9840%" y="1493" width="0.0726%" height="15" fill="rgb(252,136,11)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1503.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (1 samples, 0.07%)</title><rect x="98.9840%" y="1477" width="0.0726%" height="15" fill="rgb(219,138,53)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1487.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (1 samples, 0.07%)</title><rect x="98.9840%" y="1461" width="0.0726%" height="15" fill="rgb(211,51,23)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1471.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (1 samples, 0.07%)</title><rect x="98.9840%" y="1445" width="0.0726%" height="15" fill="rgb(247,221,28)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1455.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (1 samples, 0.07%)</title><rect x="98.9840%" y="1429" width="0.0726%" height="15" fill="rgb(251,222,45)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1439.50"></text></g><g><title>tokio::runtime::io::Driver::turn (1 samples, 0.07%)</title><rect x="98.9840%" y="1413" width="0.0726%" height="15" fill="rgb(217,162,53)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1423.50"></text></g><g><title>tokio::runtime::io::Driver::dispatch (1 samples, 0.07%)</title><rect x="98.9840%" y="1397" width="0.0726%" height="15" fill="rgb(229,93,14)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1407.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1 samples, 0.07%)</title><rect x="98.9840%" y="1381" width="0.0726%" height="15" fill="rgb(209,67,49)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1391.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (1 samples, 0.07%)</title><rect x="98.9840%" y="1365" width="0.0726%" height="15" fill="rgb(213,87,29)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1375.50"></text></g><g><title>core::mem::drop (1 samples, 0.07%)</title><rect x="98.9840%" y="1349" width="0.0726%" height="15" fill="rgb(205,151,52)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.07%)</title><rect x="98.9840%" y="1333" width="0.0726%" height="15" fill="rgb(253,215,39)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.07%)</title><rect x="98.9840%" y="1317" width="0.0726%" height="15" fill="rgb(221,220,41)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1327.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="98.9840%" y="1301" width="0.0726%" height="15" fill="rgb(218,133,21)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.07%)</title><rect x="98.9840%" y="1285" width="0.0726%" height="15" fill="rgb(221,193,43)" fg:x="1364" fg:w="1"/><text x="99.2340%" y="1295.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (1 samples, 0.07%)</title><rect x="99.0566%" y="1125" width="0.0726%" height="15" fill="rgb(240,128,52)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1135.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (1 samples, 0.07%)</title><rect x="99.0566%" y="1109" width="0.0726%" height="15" fill="rgb(253,114,12)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1119.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (1 samples, 0.07%)</title><rect x="99.0566%" y="1093" width="0.0726%" height="15" fill="rgb(215,223,47)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1103.50"></text></g><g><title>&lt;hyper::server::tcp::addr_stream::AddrStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1 samples, 0.07%)</title><rect x="99.0566%" y="1077" width="0.0726%" height="15" fill="rgb(248,225,23)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1087.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1 samples, 0.07%)</title><rect x="99.0566%" y="1061" width="0.0726%" height="15" fill="rgb(250,108,0)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1071.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1 samples, 0.07%)</title><rect x="99.0566%" y="1045" width="0.0726%" height="15" fill="rgb(228,208,7)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1055.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (1 samples, 0.07%)</title><rect x="99.0566%" y="1029" width="0.0726%" height="15" fill="rgb(244,45,10)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1039.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (1 samples, 0.07%)</title><rect x="99.0566%" y="1013" width="0.0726%" height="15" fill="rgb(207,125,25)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1023.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (1 samples, 0.07%)</title><rect x="99.0566%" y="997" width="0.0726%" height="15" fill="rgb(210,195,18)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="1007.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (1 samples, 0.07%)</title><rect x="99.0566%" y="981" width="0.0726%" height="15" fill="rgb(249,80,12)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="991.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1 samples, 0.07%)</title><rect x="99.0566%" y="965" width="0.0726%" height="15" fill="rgb(221,65,9)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="975.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.07%)</title><rect x="99.0566%" y="949" width="0.0726%" height="15" fill="rgb(235,49,36)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="959.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.07%)</title><rect x="99.0566%" y="933" width="0.0726%" height="15" fill="rgb(225,32,20)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="943.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (1 samples, 0.07%)</title><rect x="99.0566%" y="917" width="0.0726%" height="15" fill="rgb(215,141,46)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="927.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (1 samples, 0.07%)</title><rect x="99.0566%" y="901" width="0.0726%" height="15" fill="rgb(250,160,47)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="911.50"></text></g><g><title>writev (1 samples, 0.07%)</title><rect x="99.0566%" y="885" width="0.0726%" height="15" fill="rgb(216,222,40)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="869" width="0.0726%" height="15" fill="rgb(234,217,39)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="853" width="0.0726%" height="15" fill="rgb(207,178,40)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="837" width="0.0726%" height="15" fill="rgb(221,136,13)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="821" width="0.0726%" height="15" fill="rgb(249,199,10)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="805" width="0.0726%" height="15" fill="rgb(249,222,13)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="789" width="0.0726%" height="15" fill="rgb(244,185,38)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="773" width="0.0726%" height="15" fill="rgb(236,202,9)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="757" width="0.0726%" height="15" fill="rgb(250,229,37)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="741" width="0.0726%" height="15" fill="rgb(206,174,23)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="725" width="0.0726%" height="15" fill="rgb(211,33,43)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="709" width="0.0726%" height="15" fill="rgb(245,58,50)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="693" width="0.0726%" height="15" fill="rgb(244,68,36)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="677" width="0.0726%" height="15" fill="rgb(232,229,15)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="661" width="0.0726%" height="15" fill="rgb(254,30,23)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="645" width="0.0726%" height="15" fill="rgb(235,160,14)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="629" width="0.0726%" height="15" fill="rgb(212,155,44)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="613" width="0.0726%" height="15" fill="rgb(226,2,50)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="597" width="0.0726%" height="15" fill="rgb(234,177,6)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="581" width="0.0726%" height="15" fill="rgb(217,24,9)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="565" width="0.0726%" height="15" fill="rgb(220,13,46)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="549" width="0.0726%" height="15" fill="rgb(239,221,27)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="533" width="0.0726%" height="15" fill="rgb(222,198,25)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="517" width="0.0726%" height="15" fill="rgb(211,99,13)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="501" width="0.0726%" height="15" fill="rgb(232,111,31)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="485" width="0.0726%" height="15" fill="rgb(245,82,37)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="469" width="0.0726%" height="15" fill="rgb(227,149,46)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="453" width="0.0726%" height="15" fill="rgb(218,36,50)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="437" width="0.0726%" height="15" fill="rgb(226,80,48)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="421" width="0.0726%" height="15" fill="rgb(238,224,15)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="405" width="0.0726%" height="15" fill="rgb(241,136,10)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="389" width="0.0726%" height="15" fill="rgb(208,32,45)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="373" width="0.0726%" height="15" fill="rgb(207,135,9)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="357" width="0.0726%" height="15" fill="rgb(206,86,44)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="341" width="0.0726%" height="15" fill="rgb(245,177,15)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="325" width="0.0726%" height="15" fill="rgb(206,64,50)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="309" width="0.0726%" height="15" fill="rgb(234,36,40)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="293" width="0.0726%" height="15" fill="rgb(213,64,8)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="277" width="0.0726%" height="15" fill="rgb(210,75,36)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="261" width="0.0726%" height="15" fill="rgb(229,88,21)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="245" width="0.0726%" height="15" fill="rgb(252,204,47)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="229" width="0.0726%" height="15" fill="rgb(208,77,27)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="213" width="0.0726%" height="15" fill="rgb(221,76,26)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="197" width="0.0726%" height="15" fill="rgb(225,139,18)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="181" width="0.0726%" height="15" fill="rgb(230,137,11)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="165" width="0.0726%" height="15" fill="rgb(212,28,1)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="149" width="0.0726%" height="15" fill="rgb(248,164,17)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="133" width="0.0726%" height="15" fill="rgb(222,171,42)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="117" width="0.0726%" height="15" fill="rgb(243,84,45)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="101" width="0.0726%" height="15" fill="rgb(252,49,23)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="85" width="0.0726%" height="15" fill="rgb(215,19,7)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="69" width="0.0726%" height="15" fill="rgb(238,81,41)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="53" width="0.0726%" height="15" fill="rgb(210,199,37)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.0566%" y="37" width="0.0726%" height="15" fill="rgb(244,192,49)" fg:x="1365" fg:w="1"/><text x="99.3066%" y="47.50"></text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (2 samples, 0.15%)</title><rect x="99.0566%" y="1221" width="0.1451%" height="15" fill="rgb(226,211,11)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1231.50"></text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll (2 samples, 0.15%)</title><rect x="99.0566%" y="1205" width="0.1451%" height="15" fill="rgb(236,162,54)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1215.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.15%)</title><rect x="99.0566%" y="1189" width="0.1451%" height="15" fill="rgb(220,229,9)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1199.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (2 samples, 0.15%)</title><rect x="99.0566%" y="1173" width="0.1451%" height="15" fill="rgb(250,87,22)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1183.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (2 samples, 0.15%)</title><rect x="99.0566%" y="1157" width="0.1451%" height="15" fill="rgb(239,43,17)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1167.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (2 samples, 0.15%)</title><rect x="99.0566%" y="1141" width="0.1451%" height="15" fill="rgb(231,177,25)" fg:x="1365" fg:w="2"/><text x="99.3066%" y="1151.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (1 samples, 0.07%)</title><rect x="99.1292%" y="1125" width="0.0726%" height="15" fill="rgb(219,179,1)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1135.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (1 samples, 0.07%)</title><rect x="99.1292%" y="1109" width="0.0726%" height="15" fill="rgb(238,219,53)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1119.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (1 samples, 0.07%)</title><rect x="99.1292%" y="1093" width="0.0726%" height="15" fill="rgb(232,167,36)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1103.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (1 samples, 0.07%)</title><rect x="99.1292%" y="1077" width="0.0726%" height="15" fill="rgb(244,19,51)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1087.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1 samples, 0.07%)</title><rect x="99.1292%" y="1061" width="0.0726%" height="15" fill="rgb(224,6,22)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1071.50"></text></g><g><title>&lt;hyper::server::tcp::addr_stream::AddrStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1 samples, 0.07%)</title><rect x="99.1292%" y="1045" width="0.0726%" height="15" fill="rgb(224,145,5)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1055.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1 samples, 0.07%)</title><rect x="99.1292%" y="1029" width="0.0726%" height="15" fill="rgb(234,130,49)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1039.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (1 samples, 0.07%)</title><rect x="99.1292%" y="1013" width="0.0726%" height="15" fill="rgb(254,6,2)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1023.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1 samples, 0.07%)</title><rect x="99.1292%" y="997" width="0.0726%" height="15" fill="rgb(208,96,46)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="1007.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (1 samples, 0.07%)</title><rect x="99.1292%" y="981" width="0.0726%" height="15" fill="rgb(239,3,39)" fg:x="1366" fg:w="1"/><text x="99.3792%" y="991.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.22%)</title><rect x="99.0566%" y="1541" width="0.2177%" height="15" fill="rgb(233,210,1)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1551.50"></text></g><g><title>tokio::coop::with_budget (3 samples, 0.22%)</title><rect x="99.0566%" y="1525" width="0.2177%" height="15" fill="rgb(244,137,37)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1535.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.22%)</title><rect x="99.0566%" y="1509" width="0.2177%" height="15" fill="rgb(240,136,2)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.22%)</title><rect x="99.0566%" y="1493" width="0.2177%" height="15" fill="rgb(239,18,37)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1503.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.22%)</title><rect x="99.0566%" y="1477" width="0.2177%" height="15" fill="rgb(218,185,22)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1487.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (3 samples, 0.22%)</title><rect x="99.0566%" y="1461" width="0.2177%" height="15" fill="rgb(225,218,4)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1471.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (3 samples, 0.22%)</title><rect x="99.0566%" y="1445" width="0.2177%" height="15" fill="rgb(230,182,32)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1455.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3 samples, 0.22%)</title><rect x="99.0566%" y="1429" width="0.2177%" height="15" fill="rgb(242,56,43)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1439.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.22%)</title><rect x="99.0566%" y="1413" width="0.2177%" height="15" fill="rgb(233,99,24)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1423.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.22%)</title><rect x="99.0566%" y="1397" width="0.2177%" height="15" fill="rgb(234,209,42)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1407.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.22%)</title><rect x="99.0566%" y="1381" width="0.2177%" height="15" fill="rgb(227,7,12)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.22%)</title><rect x="99.0566%" y="1365" width="0.2177%" height="15" fill="rgb(245,203,43)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1375.50"></text></g><g><title>std::panicking::try (3 samples, 0.22%)</title><rect x="99.0566%" y="1349" width="0.2177%" height="15" fill="rgb(238,205,33)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.22%)</title><rect x="99.0566%" y="1333" width="0.2177%" height="15" fill="rgb(231,56,7)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1343.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.22%)</title><rect x="99.0566%" y="1317" width="0.2177%" height="15" fill="rgb(244,186,29)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.22%)</title><rect x="99.0566%" y="1301" width="0.2177%" height="15" fill="rgb(234,111,31)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.22%)</title><rect x="99.0566%" y="1285" width="0.2177%" height="15" fill="rgb(241,149,10)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.22%)</title><rect x="99.0566%" y="1269" width="0.2177%" height="15" fill="rgb(249,206,44)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3 samples, 0.22%)</title><rect x="99.0566%" y="1253" width="0.2177%" height="15" fill="rgb(251,153,30)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1263.50"></text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (3 samples, 0.22%)</title><rect x="99.0566%" y="1237" width="0.2177%" height="15" fill="rgb(239,152,38)" fg:x="1365" fg:w="3"/><text x="99.3066%" y="1247.50"></text></g><g><title>&lt;hyper::server::server::Connecting&lt;I,F,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.07%)</title><rect x="99.2017%" y="1221" width="0.0726%" height="15" fill="rgb(249,139,47)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1231.50"></text></g><g><title>hyper::server::conn::Http&lt;E&gt;::serve_connection (1 samples, 0.07%)</title><rect x="99.2017%" y="1205" width="0.0726%" height="15" fill="rgb(244,64,35)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1215.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::new (1 samples, 0.07%)</title><rect x="99.2017%" y="1189" width="0.0726%" height="15" fill="rgb(216,46,15)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1199.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::new (1 samples, 0.07%)</title><rect x="99.2017%" y="1173" width="0.0726%" height="15" fill="rgb(250,74,19)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1183.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::new (1 samples, 0.07%)</title><rect x="99.2017%" y="1157" width="0.0726%" height="15" fill="rgb(249,42,33)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="99.2017%" y="1141" width="0.0726%" height="15" fill="rgb(242,149,17)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="99.2017%" y="1125" width="0.0726%" height="15" fill="rgb(244,29,21)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="99.2017%" y="1109" width="0.0726%" height="15" fill="rgb(220,130,37)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="99.2017%" y="1093" width="0.0726%" height="15" fill="rgb(211,67,2)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="99.2017%" y="1077" width="0.0726%" height="15" fill="rgb(235,68,52)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="99.2017%" y="1061" width="0.0726%" height="15" fill="rgb(246,142,3)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="99.2017%" y="1045" width="0.0726%" height="15" fill="rgb(241,25,7)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1055.50"></text></g><g><title>malloc (1 samples, 0.07%)</title><rect x="99.2017%" y="1029" width="0.0726%" height="15" fill="rgb(242,119,39)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="99.2017%" y="1013" width="0.0726%" height="15" fill="rgb(241,98,45)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1023.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="99.2017%" y="997" width="0.0726%" height="15" fill="rgb(254,28,30)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="1007.50"></text></g><g><title>mprotect (1 samples, 0.07%)</title><rect x="99.2017%" y="981" width="0.0726%" height="15" fill="rgb(241,142,54)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="965" width="0.0726%" height="15" fill="rgb(222,85,15)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="949" width="0.0726%" height="15" fill="rgb(210,85,47)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="933" width="0.0726%" height="15" fill="rgb(224,206,25)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="917" width="0.0726%" height="15" fill="rgb(243,201,19)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="901" width="0.0726%" height="15" fill="rgb(236,59,4)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="885" width="0.0726%" height="15" fill="rgb(254,179,45)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2017%" y="869" width="0.0726%" height="15" fill="rgb(226,14,10)" fg:x="1367" fg:w="1"/><text x="99.4517%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (4 samples, 0.29%)</title><rect x="99.0566%" y="1557" width="0.2903%" height="15" fill="rgb(244,27,41)" fg:x="1365" fg:w="4"/><text x="99.3066%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1 samples, 0.07%)</title><rect x="99.2743%" y="1541" width="0.0726%" height="15" fill="rgb(235,35,32)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1551.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::transition_worker_from_searching (1 samples, 0.07%)</title><rect x="99.2743%" y="1525" width="0.0726%" height="15" fill="rgb(218,68,31)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1535.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.07%)</title><rect x="99.2743%" y="1509" width="0.0726%" height="15" fill="rgb(207,120,37)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1519.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.07%)</title><rect x="99.2743%" y="1493" width="0.0726%" height="15" fill="rgb(227,98,0)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1503.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.07%)</title><rect x="99.2743%" y="1477" width="0.0726%" height="15" fill="rgb(207,7,3)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1487.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="99.2743%" y="1461" width="0.0726%" height="15" fill="rgb(206,98,19)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1471.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1445" width="0.0726%" height="15" fill="rgb(217,5,26)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1455.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1429" width="0.0726%" height="15" fill="rgb(235,190,38)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1439.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1413" width="0.0726%" height="15" fill="rgb(247,86,24)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1423.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1397" width="0.0726%" height="15" fill="rgb(205,101,16)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1407.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1381" width="0.0726%" height="15" fill="rgb(246,168,33)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1391.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1365" width="0.0726%" height="15" fill="rgb(231,114,1)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1375.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1349" width="0.0726%" height="15" fill="rgb(207,184,53)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1333" width="0.0726%" height="15" fill="rgb(224,95,51)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1317" width="0.0726%" height="15" fill="rgb(212,188,45)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1301" width="0.0726%" height="15" fill="rgb(223,154,38)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.2743%" y="1285" width="0.0726%" height="15" fill="rgb(251,22,52)" fg:x="1368" fg:w="1"/><text x="99.5243%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (55 samples, 3.99%)</title><rect x="95.4282%" y="2005" width="3.9913%" height="15" fill="rgb(229,209,22)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="2015.50">std:..</text></g><g><title>std::panicking::try (55 samples, 3.99%)</title><rect x="95.4282%" y="1989" width="3.9913%" height="15" fill="rgb(234,138,34)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1999.50">std:..</text></g><g><title>std::panicking::try::do_call (55 samples, 3.99%)</title><rect x="95.4282%" y="1973" width="3.9913%" height="15" fill="rgb(212,95,11)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1983.50">std:..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55 samples, 3.99%)</title><rect x="95.4282%" y="1957" width="3.9913%" height="15" fill="rgb(240,179,47)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1967.50">&lt;cor..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (55 samples, 3.99%)</title><rect x="95.4282%" y="1941" width="3.9913%" height="15" fill="rgb(240,163,11)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1951.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (55 samples, 3.99%)</title><rect x="95.4282%" y="1925" width="3.9913%" height="15" fill="rgb(236,37,12)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1935.50">std:..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (55 samples, 3.99%)</title><rect x="95.4282%" y="1909" width="3.9913%" height="15" fill="rgb(232,164,16)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1919.50">toki..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (55 samples, 3.99%)</title><rect x="95.4282%" y="1893" width="3.9913%" height="15" fill="rgb(244,205,15)" fg:x="1315" fg:w="55"/><text x="95.6782%" y="1903.50">toki..</text></g><g><title>tokio::runtime::blocking::pool::Task::run (16 samples, 1.16%)</title><rect x="98.2583%" y="1877" width="1.1611%" height="15" fill="rgb(223,117,47)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1887.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (16 samples, 1.16%)</title><rect x="98.2583%" y="1861" width="1.1611%" height="15" fill="rgb(244,107,35)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1871.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (16 samples, 1.16%)</title><rect x="98.2583%" y="1845" width="1.1611%" height="15" fill="rgb(205,140,8)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1855.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (16 samples, 1.16%)</title><rect x="98.2583%" y="1829" width="1.1611%" height="15" fill="rgb(228,84,46)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1839.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (16 samples, 1.16%)</title><rect x="98.2583%" y="1813" width="1.1611%" height="15" fill="rgb(254,188,9)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1823.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (16 samples, 1.16%)</title><rect x="98.2583%" y="1797" width="1.1611%" height="15" fill="rgb(206,112,54)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1807.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 1.16%)</title><rect x="98.2583%" y="1781" width="1.1611%" height="15" fill="rgb(216,84,49)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1791.50"></text></g><g><title>std::panicking::try (16 samples, 1.16%)</title><rect x="98.2583%" y="1765" width="1.1611%" height="15" fill="rgb(214,194,35)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1775.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 1.16%)</title><rect x="98.2583%" y="1749" width="1.1611%" height="15" fill="rgb(249,28,3)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1759.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 1.16%)</title><rect x="98.2583%" y="1733" width="1.1611%" height="15" fill="rgb(222,56,52)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1743.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (16 samples, 1.16%)</title><rect x="98.2583%" y="1717" width="1.1611%" height="15" fill="rgb(245,217,50)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1727.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (16 samples, 1.16%)</title><rect x="98.2583%" y="1701" width="1.1611%" height="15" fill="rgb(213,201,24)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1711.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 1.16%)</title><rect x="98.2583%" y="1685" width="1.1611%" height="15" fill="rgb(248,116,28)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1695.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (16 samples, 1.16%)</title><rect x="98.2583%" y="1669" width="1.1611%" height="15" fill="rgb(219,72,43)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1679.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 1.16%)</title><rect x="98.2583%" y="1653" width="1.1611%" height="15" fill="rgb(209,138,14)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1663.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (16 samples, 1.16%)</title><rect x="98.2583%" y="1637" width="1.1611%" height="15" fill="rgb(222,18,33)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (16 samples, 1.16%)</title><rect x="98.2583%" y="1621" width="1.1611%" height="15" fill="rgb(213,199,7)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1631.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (16 samples, 1.16%)</title><rect x="98.2583%" y="1605" width="1.1611%" height="15" fill="rgb(250,110,10)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (16 samples, 1.16%)</title><rect x="98.2583%" y="1589" width="1.1611%" height="15" fill="rgb(248,123,6)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (16 samples, 1.16%)</title><rect x="98.2583%" y="1573" width="1.1611%" height="15" fill="rgb(206,91,31)" fg:x="1354" fg:w="16"/><text x="98.5083%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (1 samples, 0.07%)</title><rect x="99.3469%" y="1557" width="0.0726%" height="15" fill="rgb(211,154,13)" fg:x="1369" fg:w="1"/><text x="99.5969%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1 samples, 0.07%)</title><rect x="99.3469%" y="1541" width="0.0726%" height="15" fill="rgb(225,148,7)" fg:x="1369" fg:w="1"/><text x="99.5969%" y="1551.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1 samples, 0.07%)</title><rect x="99.3469%" y="1525" width="0.0726%" height="15" fill="rgb(220,160,43)" fg:x="1369" fg:w="1"/><text x="99.5969%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (1 samples, 0.07%)</title><rect x="99.3469%" y="1509" width="0.0726%" height="15" fill="rgb(213,52,39)" fg:x="1369" fg:w="1"/><text x="99.5969%" y="1519.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1909" width="0.1451%" height="15" fill="rgb(243,137,7)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1919.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1893" width="0.1451%" height="15" fill="rgb(230,79,13)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1903.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1877" width="0.1451%" height="15" fill="rgb(247,105,23)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1887.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1861" width="0.1451%" height="15" fill="rgb(223,179,41)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1871.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1845" width="0.1451%" height="15" fill="rgb(218,9,34)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1855.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1829" width="0.1451%" height="15" fill="rgb(222,106,8)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1839.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1813" width="0.1451%" height="15" fill="rgb(211,220,0)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1823.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1797" width="0.1451%" height="15" fill="rgb(229,52,16)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1807.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1781" width="0.1451%" height="15" fill="rgb(212,155,18)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.4920%" y="1765" width="0.1451%" height="15" fill="rgb(242,21,14)" fg:x="1371" fg:w="2"/><text x="99.7420%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5646%" y="1749" width="0.0726%" height="15" fill="rgb(222,19,48)" fg:x="1372" fg:w="1"/><text x="99.8146%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5646%" y="1733" width="0.0726%" height="15" fill="rgb(232,45,27)" fg:x="1372" fg:w="1"/><text x="99.8146%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5646%" y="1717" width="0.0726%" height="15" fill="rgb(249,103,42)" fg:x="1372" fg:w="1"/><text x="99.8146%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.5646%" y="1701" width="0.0726%" height="15" fill="rgb(246,81,33)" fg:x="1372" fg:w="1"/><text x="99.8146%" y="1711.50"></text></g><g><title>mprotect (3 samples, 0.22%)</title><rect x="99.6372%" y="1909" width="0.2177%" height="15" fill="rgb(252,33,42)" fg:x="1373" fg:w="3"/><text x="99.8872%" y="1919.50"></text></g><g><title>[unknown] (3 samples, 0.22%)</title><rect x="99.6372%" y="1893" width="0.2177%" height="15" fill="rgb(209,212,41)" fg:x="1373" fg:w="3"/><text x="99.8872%" y="1903.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1877" width="0.1451%" height="15" fill="rgb(207,154,6)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1887.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1861" width="0.1451%" height="15" fill="rgb(223,64,47)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1871.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1845" width="0.1451%" height="15" fill="rgb(211,161,38)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1855.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1829" width="0.1451%" height="15" fill="rgb(219,138,40)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1839.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1813" width="0.1451%" height="15" fill="rgb(241,228,46)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1823.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1797" width="0.1451%" height="15" fill="rgb(223,209,38)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1807.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1781" width="0.1451%" height="15" fill="rgb(236,164,45)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1791.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.7097%" y="1765" width="0.1451%" height="15" fill="rgb(231,15,5)" fg:x="1374" fg:w="2"/><text x="99.9597%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7823%" y="1749" width="0.0726%" height="15" fill="rgb(252,35,15)" fg:x="1375" fg:w="1"/><text x="100.0323%" y="1759.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.7823%" y="1733" width="0.0726%" height="15" fill="rgb(248,181,18)" fg:x="1375" fg:w="1"/><text x="100.0323%" y="1743.50"></text></g><g><title>all (1,378 samples, 100%)</title><rect x="0.0000%" y="2149" width="100.0000%" height="15" fill="rgb(233,39,42)" fg:x="0" fg:w="1378"/><text x="0.2500%" y="2159.50"></text></g><g><title>tokio-runtime-w (63 samples, 4.57%)</title><rect x="95.4282%" y="2133" width="4.5718%" height="15" fill="rgb(238,110,33)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2143.50">tokio..</text></g><g><title>[libc.so.6] (63 samples, 4.57%)</title><rect x="95.4282%" y="2117" width="4.5718%" height="15" fill="rgb(233,195,10)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2127.50">[libc..</text></g><g><title>[libc.so.6] (63 samples, 4.57%)</title><rect x="95.4282%" y="2101" width="4.5718%" height="15" fill="rgb(254,105,3)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2111.50">[libc..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (63 samples, 4.57%)</title><rect x="95.4282%" y="2085" width="4.5718%" height="15" fill="rgb(221,225,9)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2095.50">std::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 4.57%)</title><rect x="95.4282%" y="2069" width="4.5718%" height="15" fill="rgb(224,227,45)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2079.50">&lt;allo..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 4.57%)</title><rect x="95.4282%" y="2053" width="4.5718%" height="15" fill="rgb(229,198,43)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2063.50">&lt;allo..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (63 samples, 4.57%)</title><rect x="95.4282%" y="2037" width="4.5718%" height="15" fill="rgb(206,209,35)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2047.50">core:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (63 samples, 4.57%)</title><rect x="95.4282%" y="2021" width="4.5718%" height="15" fill="rgb(245,195,53)" fg:x="1315" fg:w="63"/><text x="95.6782%" y="2031.50">std::..</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 0.58%)</title><rect x="99.4194%" y="2005" width="0.5806%" height="15" fill="rgb(240,92,26)" fg:x="1370" fg:w="8"/><text x="99.6694%" y="2015.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.58%)</title><rect x="99.4194%" y="1989" width="0.5806%" height="15" fill="rgb(207,40,23)" fg:x="1370" fg:w="8"/><text x="99.6694%" y="1999.50"></text></g><g><title>malloc (8 samples, 0.58%)</title><rect x="99.4194%" y="1973" width="0.5806%" height="15" fill="rgb(223,111,35)" fg:x="1370" fg:w="8"/><text x="99.6694%" y="1983.50"></text></g><g><title>[libc.so.6] (8 samples, 0.58%)</title><rect x="99.4194%" y="1957" width="0.5806%" height="15" fill="rgb(229,147,28)" fg:x="1370" fg:w="8"/><text x="99.6694%" y="1967.50"></text></g><g><title>[libc.so.6] (8 samples, 0.58%)</title><rect x="99.4194%" y="1941" width="0.5806%" height="15" fill="rgb(211,29,28)" fg:x="1370" fg:w="8"/><text x="99.6694%" y="1951.50"></text></g><g><title>[libc.so.6] (7 samples, 0.51%)</title><rect x="99.4920%" y="1925" width="0.5080%" height="15" fill="rgb(228,72,33)" fg:x="1371" fg:w="7"/><text x="99.7420%" y="1935.50"></text></g><g><title>munmap (2 samples, 0.15%)</title><rect x="99.8549%" y="1909" width="0.1451%" height="15" fill="rgb(205,214,31)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1919.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1893" width="0.1451%" height="15" fill="rgb(224,111,15)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1903.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1877" width="0.1451%" height="15" fill="rgb(253,21,26)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1887.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1861" width="0.1451%" height="15" fill="rgb(245,139,43)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1871.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1845" width="0.1451%" height="15" fill="rgb(252,170,7)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1855.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1829" width="0.1451%" height="15" fill="rgb(231,118,14)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1839.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1813" width="0.1451%" height="15" fill="rgb(238,83,0)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1823.50"></text></g><g><title>[unknown] (2 samples, 0.15%)</title><rect x="99.8549%" y="1797" width="0.1451%" height="15" fill="rgb(221,39,39)" fg:x="1376" fg:w="2"/><text x="100.1049%" y="1807.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="99.9274%" y="1781" width="0.0726%" height="15" fill="rgb(222,119,46)" fg:x="1377" fg:w="1"/><text x="100.1774%" y="1791.50"></text></g></svg></svg>