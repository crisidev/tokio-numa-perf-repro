<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2118" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2101.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="2101.00"> </text><svg id="frames" x="10" width="1180" total_samples="1002"><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="0.0000%" y="2037" width="0.0998%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2047.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="0.0000%" y="2021" width="0.0998%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2031.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="0.0000%" y="2005" width="0.0998%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="2015.50"></text></g><g><title>__x64_sys_clone3 (1 samples, 0.10%)</title><rect x="0.0000%" y="1989" width="0.0998%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1999.50"></text></g><g><title>__do_sys_clone3 (1 samples, 0.10%)</title><rect x="0.0000%" y="1973" width="0.0998%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1983.50"></text></g><g><title>kernel_clone (1 samples, 0.10%)</title><rect x="0.0000%" y="1957" width="0.0998%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1967.50"></text></g><g><title>wake_up_new_task (1 samples, 0.10%)</title><rect x="0.0000%" y="1941" width="0.0998%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1951.50"></text></g><g><title>__lock_text_start (1 samples, 0.10%)</title><rect x="0.0000%" y="1925" width="0.0998%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1935.50"></text></g><g><title>axum-get (2 samples, 0.20%)</title><rect x="0.0000%" y="2053" width="0.1996%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="2"/><text x="0.2500%" y="2063.50"></text></g><g><title>_start (1 samples, 0.10%)</title><rect x="0.0998%" y="2037" width="0.0998%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3498%" y="2047.50"></text></g><g><title>__libc_start_main (1 samples, 0.10%)</title><rect x="0.0998%" y="2021" width="0.0998%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3498%" y="2031.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="0.0998%" y="2005" width="0.0998%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3498%" y="2015.50"></text></g><g><title>main (1 samples, 0.10%)</title><rect x="0.0998%" y="1989" width="0.0998%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1999.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.10%)</title><rect x="0.0998%" y="1973" width="0.0998%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1983.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.0998%" y="1957" width="0.0998%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1967.50"></text></g><g><title>std::panicking::try (1 samples, 0.10%)</title><rect x="0.0998%" y="1941" width="0.0998%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1951.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.0998%" y="1925" width="0.0998%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1935.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.10%)</title><rect x="0.0998%" y="1909" width="0.0998%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.10%)</title><rect x="0.0998%" y="1893" width="0.0998%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1903.50"></text></g><g><title>std::panicking::try (1 samples, 0.10%)</title><rect x="0.0998%" y="1877" width="0.0998%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.10%)</title><rect x="0.0998%" y="1861" width="0.0998%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1871.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.10%)</title><rect x="0.0998%" y="1845" width="0.0998%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1855.50"></text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 0.10%)</title><rect x="0.0998%" y="1829" width="0.0998%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1839.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.10%)</title><rect x="0.0998%" y="1813" width="0.0998%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1823.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.10%)</title><rect x="0.0998%" y="1797" width="0.0998%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1807.50"></text></g><g><title>axum_get::main (1 samples, 0.10%)</title><rect x="0.0998%" y="1781" width="0.0998%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1791.50"></text></g><g><title>tokio::runtime::Runtime::block_on (1 samples, 0.10%)</title><rect x="0.0998%" y="1765" width="0.0998%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (1 samples, 0.10%)</title><rect x="0.0998%" y="1749" width="0.0998%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1759.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (1 samples, 0.10%)</title><rect x="0.0998%" y="1733" width="0.0998%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1743.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (1 samples, 0.10%)</title><rect x="0.0998%" y="1717" width="0.0998%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1727.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.10%)</title><rect x="0.0998%" y="1701" width="0.0998%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1711.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.10%)</title><rect x="0.0998%" y="1685" width="0.0998%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="0.0998%" y="1669" width="0.0998%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="0.0998%" y="1653" width="0.0998%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1663.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.10%)</title><rect x="0.0998%" y="1637" width="0.0998%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1647.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (1 samples, 0.10%)</title><rect x="0.0998%" y="1621" width="0.0998%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1631.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.0998%" y="1605" width="0.0998%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1615.50"></text></g><g><title>axum_get::main::{{closure}} (1 samples, 0.10%)</title><rect x="0.0998%" y="1589" width="0.0998%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1599.50"></text></g><g><title>&lt;hyper::server::server::Server&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (1 samples, 0.10%)</title><rect x="0.0998%" y="1573" width="0.0998%" height="15" fill="rgb(238,167,29)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1583.50"></text></g><g><title>hyper::server::server::Server&lt;I,S,E&gt;::poll_watch (1 samples, 0.10%)</title><rect x="0.0998%" y="1557" width="0.0998%" height="15" fill="rgb(232,182,51)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1567.50"></text></g><g><title>hyper::server::server::Server&lt;I,S,E&gt;::poll_next_ (1 samples, 0.10%)</title><rect x="0.0998%" y="1541" width="0.0998%" height="15" fill="rgb(231,60,39)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1551.50"></text></g><g><title>&lt;hyper::server::tcp::AddrIncoming as hyper::server::accept::Accept&gt;::poll_accept (1 samples, 0.10%)</title><rect x="0.0998%" y="1525" width="0.0998%" height="15" fill="rgb(208,69,12)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1535.50"></text></g><g><title>hyper::server::tcp::AddrIncoming::poll_next_ (1 samples, 0.10%)</title><rect x="0.0998%" y="1509" width="0.0998%" height="15" fill="rgb(235,93,37)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1519.50"></text></g><g><title>tokio::net::tcp::listener::TcpListener::poll_accept (1 samples, 0.10%)</title><rect x="0.0998%" y="1493" width="0.0998%" height="15" fill="rgb(213,116,39)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1503.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::new (1 samples, 0.10%)</title><rect x="0.0998%" y="1477" width="0.0998%" height="15" fill="rgb(222,207,29)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1487.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new (1 samples, 0.10%)</title><rect x="0.0998%" y="1461" width="0.0998%" height="15" fill="rgb(206,96,30)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1471.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest (1 samples, 0.10%)</title><rect x="0.0998%" y="1445" width="0.0998%" height="15" fill="rgb(218,138,4)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1455.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::new_with_interest_and_handle (1 samples, 0.10%)</title><rect x="0.0998%" y="1429" width="0.0998%" height="15" fill="rgb(250,191,14)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1439.50"></text></g><g><title>tokio::runtime::io::registration::Registration::new_with_interest_and_handle (1 samples, 0.10%)</title><rect x="0.0998%" y="1413" width="0.0998%" height="15" fill="rgb(239,60,40)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1423.50"></text></g><g><title>tokio::runtime::io::Inner::add_source (1 samples, 0.10%)</title><rect x="0.0998%" y="1397" width="0.0998%" height="15" fill="rgb(206,27,48)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1407.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::generation (1 samples, 0.10%)</title><rect x="0.0998%" y="1381" width="0.0998%" height="15" fill="rgb(225,35,8)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1391.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="0.0998%" y="1365" width="0.0998%" height="15" fill="rgb(250,213,24)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1375.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="0.0998%" y="1349" width="0.0998%" height="15" fill="rgb(247,123,22)" fg:x="1" fg:w="1"/><text x="0.3498%" y="1359.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (1 samples, 0.10%)</title><rect x="0.1996%" y="2037" width="0.0998%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="1"/><text x="0.4496%" y="2047.50"></text></g><g><title>axum::routing::route::Route&lt;B,E&gt;::oneshot_inner (1 samples, 0.10%)</title><rect x="0.1996%" y="2021" width="0.0998%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="1"/><text x="0.4496%" y="2031.50"></text></g><g><title>&lt;tower::util::boxed_clone::BoxCloneService&lt;T,U,E&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="0.1996%" y="2005" width="0.0998%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="1"/><text x="0.4496%" y="2015.50"></text></g><g><title>&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (1 samples, 0.10%)</title><rect x="0.1996%" y="1989" width="0.0998%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="1"/><text x="0.4496%" y="1999.50"></text></g><g><title>mio::poll::Poll::poll (10 samples, 1.00%)</title><rect x="0.6986%" y="1349" width="0.9980%" height="15" fill="rgb(247,81,37)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1359.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (10 samples, 1.00%)</title><rect x="0.6986%" y="1333" width="0.9980%" height="15" fill="rgb(209,12,38)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1343.50"></text></g><g><title>epoll_wait (10 samples, 1.00%)</title><rect x="0.6986%" y="1317" width="0.9980%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1327.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 1.00%)</title><rect x="0.6986%" y="1301" width="0.9980%" height="15" fill="rgb(248,47,43)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1311.50"></text></g><g><title>do_syscall_64 (10 samples, 1.00%)</title><rect x="0.6986%" y="1285" width="0.9980%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1295.50"></text></g><g><title>__x64_sys_epoll_wait (10 samples, 1.00%)</title><rect x="0.6986%" y="1269" width="0.9980%" height="15" fill="rgb(210,229,1)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1279.50"></text></g><g><title>do_epoll_wait (10 samples, 1.00%)</title><rect x="0.6986%" y="1253" width="0.9980%" height="15" fill="rgb(222,148,37)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1263.50"></text></g><g><title>ep_poll (10 samples, 1.00%)</title><rect x="0.6986%" y="1237" width="0.9980%" height="15" fill="rgb(234,67,33)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1247.50"></text></g><g><title>ep_send_events (10 samples, 1.00%)</title><rect x="0.6986%" y="1221" width="0.9980%" height="15" fill="rgb(247,98,35)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1231.50"></text></g><g><title>ep_item_poll.isra.0 (10 samples, 1.00%)</title><rect x="0.6986%" y="1205" width="0.9980%" height="15" fill="rgb(247,138,52)" fg:x="7" fg:w="10"/><text x="0.9486%" y="1215.50"></text></g><g><title>sock_poll (4 samples, 0.40%)</title><rect x="1.2974%" y="1189" width="0.3992%" height="15" fill="rgb(213,79,30)" fg:x="13" fg:w="4"/><text x="1.5474%" y="1199.50"></text></g><g><title>tcp_poll (1 samples, 0.10%)</title><rect x="1.5968%" y="1173" width="0.0998%" height="15" fill="rgb(246,177,23)" fg:x="16" fg:w="1"/><text x="1.8468%" y="1183.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (3 samples, 0.30%)</title><rect x="1.6966%" y="1333" width="0.2994%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="3"/><text x="1.9466%" y="1343.50"></text></g><g><title>core::mem::drop (1 samples, 0.10%)</title><rect x="1.9960%" y="1301" width="0.0998%" height="15" fill="rgb(216,154,8)" fg:x="20" fg:w="1"/><text x="2.2460%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.10%)</title><rect x="1.9960%" y="1285" width="0.0998%" height="15" fill="rgb(244,35,45)" fg:x="20" fg:w="1"/><text x="2.2460%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (1 samples, 0.10%)</title><rect x="1.9960%" y="1269" width="0.0998%" height="15" fill="rgb(251,115,12)" fg:x="20" fg:w="1"/><text x="2.2460%" y="1279.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="1.9960%" y="1253" width="0.0998%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="1"/><text x="2.2460%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.10%)</title><rect x="1.9960%" y="1237" width="0.0998%" height="15" fill="rgb(233,84,52)" fg:x="20" fg:w="1"/><text x="2.2460%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::worker::Shared&gt;&gt;::schedule (1 samples, 0.10%)</title><rect x="2.0958%" y="1237" width="0.0998%" height="15" fill="rgb(207,117,47)" fg:x="21" fg:w="1"/><text x="2.3458%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::schedule (1 samples, 0.10%)</title><rect x="2.0958%" y="1221" width="0.0998%" height="15" fill="rgb(249,43,39)" fg:x="21" fg:w="1"/><text x="2.3458%" y="1231.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="2.0958%" y="1205" width="0.0998%" height="15" fill="rgb(209,38,44)" fg:x="21" fg:w="1"/><text x="2.3458%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::schedule::{{closure}} (1 samples, 0.10%)</title><rect x="2.0958%" y="1189" width="0.0998%" height="15" fill="rgb(236,212,23)" fg:x="21" fg:w="1"/><text x="2.3458%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (19 samples, 1.90%)</title><rect x="0.4990%" y="1477" width="1.8962%" height="15" fill="rgb(242,79,21)" fg:x="5" fg:w="19"/><text x="0.7490%" y="1487.50">t..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (17 samples, 1.70%)</title><rect x="0.6986%" y="1461" width="1.6966%" height="15" fill="rgb(211,96,35)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1471.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::park::Parker as tokio::park::Park&gt;::park_timeout (17 samples, 1.70%)</title><rect x="0.6986%" y="1445" width="1.6966%" height="15" fill="rgb(253,215,40)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1455.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park_timeout (17 samples, 1.70%)</title><rect x="0.6986%" y="1429" width="1.6966%" height="15" fill="rgb(211,81,21)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1439.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (17 samples, 1.70%)</title><rect x="0.6986%" y="1413" width="1.6966%" height="15" fill="rgb(208,190,38)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1423.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park_timeout (17 samples, 1.70%)</title><rect x="0.6986%" y="1397" width="1.6966%" height="15" fill="rgb(235,213,38)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1407.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (17 samples, 1.70%)</title><rect x="0.6986%" y="1381" width="1.6966%" height="15" fill="rgb(237,122,38)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1391.50"></text></g><g><title>tokio::runtime::io::Driver::turn (17 samples, 1.70%)</title><rect x="0.6986%" y="1365" width="1.6966%" height="15" fill="rgb(244,218,35)" fg:x="7" fg:w="17"/><text x="0.9486%" y="1375.50"></text></g><g><title>tokio::runtime::io::Driver::dispatch (7 samples, 0.70%)</title><rect x="1.6966%" y="1349" width="0.6986%" height="15" fill="rgb(240,68,47)" fg:x="17" fg:w="7"/><text x="1.9466%" y="1359.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (4 samples, 0.40%)</title><rect x="1.9960%" y="1333" width="0.3992%" height="15" fill="rgb(210,16,53)" fg:x="20" fg:w="4"/><text x="2.2460%" y="1343.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (4 samples, 0.40%)</title><rect x="1.9960%" y="1317" width="0.3992%" height="15" fill="rgb(235,124,12)" fg:x="20" fg:w="4"/><text x="2.2460%" y="1327.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (3 samples, 0.30%)</title><rect x="2.0958%" y="1301" width="0.2994%" height="15" fill="rgb(224,169,11)" fg:x="21" fg:w="3"/><text x="2.3458%" y="1311.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.30%)</title><rect x="2.0958%" y="1285" width="0.2994%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="3"/><text x="2.3458%" y="1295.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.30%)</title><rect x="2.0958%" y="1269" width="0.2994%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="3"/><text x="2.3458%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.30%)</title><rect x="2.0958%" y="1253" width="0.2994%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="3"/><text x="2.3458%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (2 samples, 0.20%)</title><rect x="2.1956%" y="1237" width="0.1996%" height="15" fill="rgb(228,99,48)" fg:x="22" fg:w="2"/><text x="2.4456%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.20%)</title><rect x="2.1956%" y="1221" width="0.1996%" height="15" fill="rgb(253,11,6)" fg:x="22" fg:w="2"/><text x="2.4456%" y="1231.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.10%)</title><rect x="2.2954%" y="1205" width="0.0998%" height="15" fill="rgb(247,143,39)" fg:x="23" fg:w="1"/><text x="2.5454%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="2.2954%" y="1189" width="0.0998%" height="15" fill="rgb(236,97,10)" fg:x="23" fg:w="1"/><text x="2.5454%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="2.2954%" y="1173" width="0.0998%" height="15" fill="rgb(233,208,19)" fg:x="23" fg:w="1"/><text x="2.5454%" y="1183.50"></text></g><g><title>futex_wait_queue_me (12 samples, 1.20%)</title><rect x="3.0938%" y="1173" width="1.1976%" height="15" fill="rgb(216,164,2)" fg:x="31" fg:w="12"/><text x="3.3438%" y="1183.50"></text></g><g><title>schedule (12 samples, 1.20%)</title><rect x="3.0938%" y="1157" width="1.1976%" height="15" fill="rgb(220,129,5)" fg:x="31" fg:w="12"/><text x="3.3438%" y="1167.50"></text></g><g><title>__schedule (12 samples, 1.20%)</title><rect x="3.0938%" y="1141" width="1.1976%" height="15" fill="rgb(242,17,10)" fg:x="31" fg:w="12"/><text x="3.3438%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (12 samples, 1.20%)</title><rect x="3.0938%" y="1125" width="1.1976%" height="15" fill="rgb(242,107,0)" fg:x="31" fg:w="12"/><text x="3.3438%" y="1135.50"></text></g><g><title>futex_wait_setup (1 samples, 0.10%)</title><rect x="4.2914%" y="1173" width="0.0998%" height="15" fill="rgb(251,28,31)" fg:x="43" fg:w="1"/><text x="4.5414%" y="1183.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (18 samples, 1.80%)</title><rect x="2.6946%" y="1301" width="1.7964%" height="15" fill="rgb(233,223,10)" fg:x="27" fg:w="18"/><text x="2.9446%" y="1311.50">&lt;..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (17 samples, 1.70%)</title><rect x="2.7944%" y="1285" width="1.6966%" height="15" fill="rgb(215,21,27)" fg:x="28" fg:w="17"/><text x="3.0444%" y="1295.50"></text></g><g><title>syscall (17 samples, 1.70%)</title><rect x="2.7944%" y="1269" width="1.6966%" height="15" fill="rgb(232,23,21)" fg:x="28" fg:w="17"/><text x="3.0444%" y="1279.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (15 samples, 1.50%)</title><rect x="2.9940%" y="1253" width="1.4970%" height="15" fill="rgb(244,5,23)" fg:x="30" fg:w="15"/><text x="3.2440%" y="1263.50"></text></g><g><title>do_syscall_64 (15 samples, 1.50%)</title><rect x="2.9940%" y="1237" width="1.4970%" height="15" fill="rgb(226,81,46)" fg:x="30" fg:w="15"/><text x="3.2440%" y="1247.50"></text></g><g><title>__x64_sys_futex (14 samples, 1.40%)</title><rect x="3.0938%" y="1221" width="1.3972%" height="15" fill="rgb(247,70,30)" fg:x="31" fg:w="14"/><text x="3.3438%" y="1231.50"></text></g><g><title>do_futex (14 samples, 1.40%)</title><rect x="3.0938%" y="1205" width="1.3972%" height="15" fill="rgb(212,68,19)" fg:x="31" fg:w="14"/><text x="3.3438%" y="1215.50"></text></g><g><title>futex_wait (14 samples, 1.40%)</title><rect x="3.0938%" y="1189" width="1.3972%" height="15" fill="rgb(240,187,13)" fg:x="31" fg:w="14"/><text x="3.3438%" y="1199.50"></text></g><g><title>hash_futex (1 samples, 0.10%)</title><rect x="4.3912%" y="1173" width="0.0998%" height="15" fill="rgb(223,113,26)" fg:x="44" fg:w="1"/><text x="4.6412%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (1 samples, 0.10%)</title><rect x="4.4910%" y="1301" width="0.0998%" height="15" fill="rgb(206,192,2)" fg:x="45" fg:w="1"/><text x="4.7410%" y="1311.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (1 samples, 0.10%)</title><rect x="4.4910%" y="1285" width="0.0998%" height="15" fill="rgb(241,108,4)" fg:x="45" fg:w="1"/><text x="4.7410%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (21 samples, 2.10%)</title><rect x="2.5948%" y="1413" width="2.0958%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="21"/><text x="2.8448%" y="1423.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (20 samples, 2.00%)</title><rect x="2.6946%" y="1397" width="1.9960%" height="15" fill="rgb(224,114,35)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1407.50">t..</text></g><g><title>parking_lot::condvar::Condvar::wait (20 samples, 2.00%)</title><rect x="2.6946%" y="1381" width="1.9960%" height="15" fill="rgb(245,159,27)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1391.50">p..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (20 samples, 2.00%)</title><rect x="2.6946%" y="1365" width="1.9960%" height="15" fill="rgb(245,172,44)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1375.50">p..</text></g><g><title>parking_lot_core::parking_lot::park (20 samples, 2.00%)</title><rect x="2.6946%" y="1349" width="1.9960%" height="15" fill="rgb(236,23,11)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1359.50">p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (20 samples, 2.00%)</title><rect x="2.6946%" y="1333" width="1.9960%" height="15" fill="rgb(205,117,38)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1343.50">p..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (20 samples, 2.00%)</title><rect x="2.6946%" y="1317" width="1.9960%" height="15" fill="rgb(237,72,25)" fg:x="27" fg:w="20"/><text x="2.9446%" y="1327.50">p..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.10%)</title><rect x="4.5908%" y="1301" width="0.0998%" height="15" fill="rgb(244,70,9)" fg:x="46" fg:w="1"/><text x="4.8408%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.10%)</title><rect x="4.5908%" y="1285" width="0.0998%" height="15" fill="rgb(217,125,39)" fg:x="46" fg:w="1"/><text x="4.8408%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.10%)</title><rect x="4.5908%" y="1269" width="0.0998%" height="15" fill="rgb(235,36,10)" fg:x="46" fg:w="1"/><text x="4.8408%" y="1279.50"></text></g><g><title>ep_send_events (7 samples, 0.70%)</title><rect x="4.6906%" y="1189" width="0.6986%" height="15" fill="rgb(251,123,47)" fg:x="47" fg:w="7"/><text x="4.9406%" y="1199.50"></text></g><g><title>ep_item_poll.isra.0 (5 samples, 0.50%)</title><rect x="4.8902%" y="1173" width="0.4990%" height="15" fill="rgb(221,13,13)" fg:x="49" fg:w="5"/><text x="5.1402%" y="1183.50"></text></g><g><title>sock_poll (2 samples, 0.20%)</title><rect x="5.1896%" y="1157" width="0.1996%" height="15" fill="rgb(238,131,9)" fg:x="52" fg:w="2"/><text x="5.4396%" y="1167.50"></text></g><g><title>tcp_poll (1 samples, 0.10%)</title><rect x="5.2894%" y="1141" width="0.0998%" height="15" fill="rgb(211,50,8)" fg:x="53" fg:w="1"/><text x="5.5394%" y="1151.50"></text></g><g><title>mio::poll::Poll::poll (9 samples, 0.90%)</title><rect x="4.6906%" y="1317" width="0.8982%" height="15" fill="rgb(245,182,24)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1327.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (9 samples, 0.90%)</title><rect x="4.6906%" y="1301" width="0.8982%" height="15" fill="rgb(242,14,37)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1311.50"></text></g><g><title>epoll_wait (9 samples, 0.90%)</title><rect x="4.6906%" y="1285" width="0.8982%" height="15" fill="rgb(246,228,12)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1295.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (9 samples, 0.90%)</title><rect x="4.6906%" y="1269" width="0.8982%" height="15" fill="rgb(213,55,15)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1279.50"></text></g><g><title>do_syscall_64 (9 samples, 0.90%)</title><rect x="4.6906%" y="1253" width="0.8982%" height="15" fill="rgb(209,9,3)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1263.50"></text></g><g><title>__x64_sys_epoll_wait (9 samples, 0.90%)</title><rect x="4.6906%" y="1237" width="0.8982%" height="15" fill="rgb(230,59,30)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1247.50"></text></g><g><title>do_epoll_wait (9 samples, 0.90%)</title><rect x="4.6906%" y="1221" width="0.8982%" height="15" fill="rgb(209,121,21)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1231.50"></text></g><g><title>ep_poll (9 samples, 0.90%)</title><rect x="4.6906%" y="1205" width="0.8982%" height="15" fill="rgb(220,109,13)" fg:x="47" fg:w="9"/><text x="4.9406%" y="1215.50"></text></g><g><title>schedule_hrtimeout_range (2 samples, 0.20%)</title><rect x="5.3892%" y="1189" width="0.1996%" height="15" fill="rgb(232,18,1)" fg:x="54" fg:w="2"/><text x="5.6392%" y="1199.50"></text></g><g><title>schedule_hrtimeout_range_clock (2 samples, 0.20%)</title><rect x="5.3892%" y="1173" width="0.1996%" height="15" fill="rgb(215,41,42)" fg:x="54" fg:w="2"/><text x="5.6392%" y="1183.50"></text></g><g><title>schedule (2 samples, 0.20%)</title><rect x="5.3892%" y="1157" width="0.1996%" height="15" fill="rgb(224,123,36)" fg:x="54" fg:w="2"/><text x="5.6392%" y="1167.50"></text></g><g><title>__schedule (2 samples, 0.20%)</title><rect x="5.3892%" y="1141" width="0.1996%" height="15" fill="rgb(240,125,3)" fg:x="54" fg:w="2"/><text x="5.6392%" y="1151.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.20%)</title><rect x="5.3892%" y="1125" width="0.1996%" height="15" fill="rgb(205,98,50)" fg:x="54" fg:w="2"/><text x="5.6392%" y="1135.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (1 samples, 0.10%)</title><rect x="5.5888%" y="1317" width="0.0998%" height="15" fill="rgb(205,185,37)" fg:x="56" fg:w="1"/><text x="5.8388%" y="1327.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (2 samples, 0.20%)</title><rect x="5.6886%" y="1301" width="0.1996%" height="15" fill="rgb(238,207,15)" fg:x="57" fg:w="2"/><text x="5.9386%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="5.7884%" y="1285" width="0.0998%" height="15" fill="rgb(213,199,42)" fg:x="58" fg:w="1"/><text x="6.0384%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="5.7884%" y="1269" width="0.0998%" height="15" fill="rgb(235,201,11)" fg:x="58" fg:w="1"/><text x="6.0384%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="5.8882%" y="1157" width="0.0998%" height="15" fill="rgb(207,46,11)" fg:x="59" fg:w="1"/><text x="6.1382%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="5.8882%" y="1141" width="0.0998%" height="15" fill="rgb(241,35,35)" fg:x="59" fg:w="1"/><text x="6.1382%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::CURRENT::FOO::__getit (1 samples, 0.10%)</title><rect x="5.8882%" y="1125" width="0.0998%" height="15" fill="rgb(243,32,47)" fg:x="59" fg:w="1"/><text x="6.1382%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::worker::Shared&gt;&gt;::schedule (2 samples, 0.20%)</title><rect x="5.8882%" y="1205" width="0.1996%" height="15" fill="rgb(247,202,23)" fg:x="59" fg:w="2"/><text x="6.1382%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::schedule (2 samples, 0.20%)</title><rect x="5.8882%" y="1189" width="0.1996%" height="15" fill="rgb(219,102,11)" fg:x="59" fg:w="2"/><text x="6.1382%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.20%)</title><rect x="5.8882%" y="1173" width="0.1996%" height="15" fill="rgb(243,110,44)" fg:x="59" fg:w="2"/><text x="6.1382%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::schedule::{{closure}} (1 samples, 0.10%)</title><rect x="5.9880%" y="1157" width="0.0998%" height="15" fill="rgb(222,74,54)" fg:x="60" fg:w="1"/><text x="6.2380%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::schedule_local (1 samples, 0.10%)</title><rect x="5.9880%" y="1141" width="0.0998%" height="15" fill="rgb(216,99,12)" fg:x="60" fg:w="1"/><text x="6.2380%" y="1151.50"></text></g><g><title>tokio::runtime::io::Driver::turn (15 samples, 1.50%)</title><rect x="4.6906%" y="1333" width="1.4970%" height="15" fill="rgb(226,22,26)" fg:x="47" fg:w="15"/><text x="4.9406%" y="1343.50"></text></g><g><title>tokio::runtime::io::Driver::dispatch (5 samples, 0.50%)</title><rect x="5.6886%" y="1317" width="0.4990%" height="15" fill="rgb(217,163,10)" fg:x="57" fg:w="5"/><text x="5.9386%" y="1327.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (3 samples, 0.30%)</title><rect x="5.8882%" y="1301" width="0.2994%" height="15" fill="rgb(213,25,53)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1311.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake0 (3 samples, 0.30%)</title><rect x="5.8882%" y="1285" width="0.2994%" height="15" fill="rgb(252,105,26)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1295.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (3 samples, 0.30%)</title><rect x="5.8882%" y="1269" width="0.2994%" height="15" fill="rgb(220,39,43)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1279.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.30%)</title><rect x="5.8882%" y="1253" width="0.2994%" height="15" fill="rgb(229,68,48)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1263.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (3 samples, 0.30%)</title><rect x="5.8882%" y="1237" width="0.2994%" height="15" fill="rgb(252,8,32)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (3 samples, 0.30%)</title><rect x="5.8882%" y="1221" width="0.2994%" height="15" fill="rgb(223,20,43)" fg:x="59" fg:w="3"/><text x="6.1382%" y="1231.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (1 samples, 0.10%)</title><rect x="6.0878%" y="1205" width="0.0998%" height="15" fill="rgb(229,81,49)" fg:x="61" fg:w="1"/><text x="6.3378%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (1 samples, 0.10%)</title><rect x="6.0878%" y="1189" width="0.0998%" height="15" fill="rgb(236,28,36)" fg:x="61" fg:w="1"/><text x="6.3378%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.10%)</title><rect x="6.0878%" y="1173" width="0.0998%" height="15" fill="rgb(249,185,26)" fg:x="61" fg:w="1"/><text x="6.3378%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="6.0878%" y="1157" width="0.0998%" height="15" fill="rgb(249,174,33)" fg:x="61" fg:w="1"/><text x="6.3378%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="6.0878%" y="1141" width="0.0998%" height="15" fill="rgb(233,201,37)" fg:x="61" fg:w="1"/><text x="6.3378%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::park::Parker as tokio::park::Park&gt;::park (39 samples, 3.89%)</title><rect x="2.3952%" y="1445" width="3.8922%" height="15" fill="rgb(221,78,26)" fg:x="24" fg:w="39"/><text x="2.6452%" y="1455.50">&lt;tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (37 samples, 3.69%)</title><rect x="2.5948%" y="1429" width="3.6926%" height="15" fill="rgb(250,127,30)" fg:x="26" fg:w="37"/><text x="2.8448%" y="1439.50">toki..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (16 samples, 1.60%)</title><rect x="4.6906%" y="1413" width="1.5968%" height="15" fill="rgb(230,49,44)" fg:x="47" fg:w="16"/><text x="4.9406%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (16 samples, 1.60%)</title><rect x="4.6906%" y="1397" width="1.5968%" height="15" fill="rgb(229,67,23)" fg:x="47" fg:w="16"/><text x="4.9406%" y="1407.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (16 samples, 1.60%)</title><rect x="4.6906%" y="1381" width="1.5968%" height="15" fill="rgb(249,83,47)" fg:x="47" fg:w="16"/><text x="4.9406%" y="1391.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (16 samples, 1.60%)</title><rect x="4.6906%" y="1365" width="1.5968%" height="15" fill="rgb(215,43,3)" fg:x="47" fg:w="16"/><text x="4.9406%" y="1375.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (16 samples, 1.60%)</title><rect x="4.6906%" y="1349" width="1.5968%" height="15" fill="rgb(238,154,13)" fg:x="47" fg:w="16"/><text x="4.9406%" y="1359.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration_time (1 samples, 0.10%)</title><rect x="6.1876%" y="1333" width="0.0998%" height="15" fill="rgb(219,56,2)" fg:x="62" fg:w="1"/><text x="6.4376%" y="1343.50"></text></g><g><title>tokio::time::driver::wheel::Wheel::next_expiration (1 samples, 0.10%)</title><rect x="6.1876%" y="1317" width="0.0998%" height="15" fill="rgb(233,0,4)" fg:x="62" fg:w="1"/><text x="6.4376%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (1 samples, 0.10%)</title><rect x="6.2874%" y="1445" width="0.0998%" height="15" fill="rgb(235,30,7)" fg:x="63" fg:w="1"/><text x="6.5374%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (44 samples, 4.39%)</title><rect x="2.3952%" y="1461" width="4.3912%" height="15" fill="rgb(250,79,13)" fg:x="24" fg:w="44"/><text x="2.6452%" y="1471.50">tokio..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (4 samples, 0.40%)</title><rect x="6.3872%" y="1445" width="0.3992%" height="15" fill="rgb(211,146,34)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1455.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (4 samples, 0.40%)</title><rect x="6.3872%" y="1429" width="0.3992%" height="15" fill="rgb(228,22,38)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1439.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (4 samples, 0.40%)</title><rect x="6.3872%" y="1413" width="0.3992%" height="15" fill="rgb(235,168,5)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1423.50"></text></g><g><title>syscall (4 samples, 0.40%)</title><rect x="6.3872%" y="1397" width="0.3992%" height="15" fill="rgb(221,155,16)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1407.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4 samples, 0.40%)</title><rect x="6.3872%" y="1381" width="0.3992%" height="15" fill="rgb(215,215,53)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1391.50"></text></g><g><title>do_syscall_64 (4 samples, 0.40%)</title><rect x="6.3872%" y="1365" width="0.3992%" height="15" fill="rgb(223,4,10)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1375.50"></text></g><g><title>__x64_sys_futex (4 samples, 0.40%)</title><rect x="6.3872%" y="1349" width="0.3992%" height="15" fill="rgb(234,103,6)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1359.50"></text></g><g><title>do_futex (4 samples, 0.40%)</title><rect x="6.3872%" y="1333" width="0.3992%" height="15" fill="rgb(227,97,0)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1343.50"></text></g><g><title>futex_wake (4 samples, 0.40%)</title><rect x="6.3872%" y="1317" width="0.3992%" height="15" fill="rgb(234,150,53)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1327.50"></text></g><g><title>wake_up_q (4 samples, 0.40%)</title><rect x="6.3872%" y="1301" width="0.3992%" height="15" fill="rgb(228,201,54)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1311.50"></text></g><g><title>try_to_wake_up (4 samples, 0.40%)</title><rect x="6.3872%" y="1285" width="0.3992%" height="15" fill="rgb(222,22,37)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1295.50"></text></g><g><title>__lock_text_start (4 samples, 0.40%)</title><rect x="6.3872%" y="1269" width="0.3992%" height="15" fill="rgb(237,53,32)" fg:x="64" fg:w="4"/><text x="6.6372%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (1 samples, 0.10%)</title><rect x="6.7864%" y="1461" width="0.0998%" height="15" fill="rgb(233,25,53)" fg:x="68" fg:w="1"/><text x="7.0364%" y="1471.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_closed (1 samples, 0.10%)</title><rect x="6.7864%" y="1445" width="0.0998%" height="15" fill="rgb(210,40,34)" fg:x="68" fg:w="1"/><text x="7.0364%" y="1455.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.10%)</title><rect x="6.7864%" y="1429" width="0.0998%" height="15" fill="rgb(241,220,44)" fg:x="68" fg:w="1"/><text x="7.0364%" y="1439.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.10%)</title><rect x="6.7864%" y="1413" width="0.0998%" height="15" fill="rgb(235,28,35)" fg:x="68" fg:w="1"/><text x="7.0364%" y="1423.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.10%)</title><rect x="6.7864%" y="1397" width="0.0998%" height="15" fill="rgb(210,56,17)" fg:x="68" fg:w="1"/><text x="7.0364%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1 samples, 0.10%)</title><rect x="6.8862%" y="1461" width="0.0998%" height="15" fill="rgb(224,130,29)" fg:x="69" fg:w="1"/><text x="7.1362%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (1 samples, 0.10%)</title><rect x="6.8862%" y="1445" width="0.0998%" height="15" fill="rgb(235,212,8)" fg:x="69" fg:w="1"/><text x="7.1362%" y="1455.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.10%)</title><rect x="6.8862%" y="1429" width="0.0998%" height="15" fill="rgb(223,33,50)" fg:x="69" fg:w="1"/><text x="7.1362%" y="1439.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.10%)</title><rect x="6.8862%" y="1413" width="0.0998%" height="15" fill="rgb(219,149,13)" fg:x="69" fg:w="1"/><text x="7.1362%" y="1423.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.10%)</title><rect x="6.8862%" y="1397" width="0.0998%" height="15" fill="rgb(250,156,29)" fg:x="69" fg:w="1"/><text x="7.1362%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (47 samples, 4.69%)</title><rect x="2.3952%" y="1477" width="4.6906%" height="15" fill="rgb(216,193,19)" fg:x="24" fg:w="47"/><text x="2.6452%" y="1487.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (1 samples, 0.10%)</title><rect x="6.9860%" y="1461" width="0.0998%" height="15" fill="rgb(216,135,14)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (1 samples, 0.10%)</title><rect x="6.9860%" y="1445" width="0.0998%" height="15" fill="rgb(241,47,5)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="6.9860%" y="1429" width="0.0998%" height="15" fill="rgb(233,42,35)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="6.9860%" y="1413" width="0.0998%" height="15" fill="rgb(231,13,6)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1423.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="6.9860%" y="1397" width="0.0998%" height="15" fill="rgb(207,181,40)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1407.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.10%)</title><rect x="6.9860%" y="1381" width="0.0998%" height="15" fill="rgb(254,173,49)" fg:x="70" fg:w="1"/><text x="7.2360%" y="1391.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.30%)</title><rect x="7.2854%" y="1365" width="0.2994%" height="15" fill="rgb(221,1,38)" fg:x="73" fg:w="3"/><text x="7.5354%" y="1375.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.30%)</title><rect x="7.2854%" y="1349" width="0.2994%" height="15" fill="rgb(206,124,46)" fg:x="73" fg:w="3"/><text x="7.5354%" y="1359.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.30%)</title><rect x="7.2854%" y="1333" width="0.2994%" height="15" fill="rgb(249,21,11)" fg:x="73" fg:w="3"/><text x="7.5354%" y="1343.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (1 samples, 0.10%)</title><rect x="8.5828%" y="1029" width="0.0998%" height="15" fill="rgb(222,201,40)" fg:x="86" fg:w="1"/><text x="8.8328%" y="1039.50"></text></g><g><title>hyper::proto::h1::conn::KA::status (1 samples, 0.10%)</title><rect x="8.8822%" y="981" width="0.0998%" height="15" fill="rgb(235,61,29)" fg:x="89" fg:w="1"/><text x="9.1322%" y="991.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (3 samples, 0.30%)</title><rect x="8.7824%" y="1013" width="0.2994%" height="15" fill="rgb(219,207,3)" fg:x="88" fg:w="3"/><text x="9.0324%" y="1023.50"></text></g><g><title>hyper::proto::h1::conn::State::try_keep_alive (3 samples, 0.30%)</title><rect x="8.7824%" y="997" width="0.2994%" height="15" fill="rgb(222,56,46)" fg:x="88" fg:w="3"/><text x="9.0324%" y="1007.50"></text></g><g><title>hyper::proto::h1::conn::State::idle (1 samples, 0.10%)</title><rect x="8.9820%" y="981" width="0.0998%" height="15" fill="rgb(239,76,54)" fg:x="90" fg:w="1"/><text x="9.2320%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::method::Method&gt;&gt; (1 samples, 0.10%)</title><rect x="8.9820%" y="965" width="0.0998%" height="15" fill="rgb(231,124,27)" fg:x="90" fg:w="1"/><text x="9.2320%" y="975.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (2 samples, 0.20%)</title><rect x="9.5808%" y="965" width="0.1996%" height="15" fill="rgb(249,195,6)" fg:x="96" fg:w="2"/><text x="9.8308%" y="975.50"></text></g><g><title>&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (2 samples, 0.20%)</title><rect x="9.5808%" y="949" width="0.1996%" height="15" fill="rgb(237,174,47)" fg:x="96" fg:w="2"/><text x="9.8308%" y="959.50"></text></g><g><title>&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (1 samples, 0.10%)</title><rect x="9.7804%" y="965" width="0.0998%" height="15" fill="rgb(206,201,31)" fg:x="98" fg:w="1"/><text x="10.0304%" y="975.50"></text></g><g><title>&lt;bytes::bytes::Bytes as bytes::buf::buf_impl::Buf&gt;::advance (1 samples, 0.10%)</title><rect x="9.7804%" y="949" width="0.0998%" height="15" fill="rgb(231,57,52)" fg:x="98" fg:w="1"/><text x="10.0304%" y="959.50"></text></g><g><title>bytes::bytes::Bytes::inc_start (1 samples, 0.10%)</title><rect x="9.7804%" y="933" width="0.0998%" height="15" fill="rgb(248,177,22)" fg:x="98" fg:w="1"/><text x="10.0304%" y="943.50"></text></g><g><title>&lt;hyper::proto::h1::io::WriteBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.60%)</title><rect x="9.4810%" y="997" width="0.5988%" height="15" fill="rgb(215,211,37)" fg:x="95" fg:w="6"/><text x="9.7310%" y="1007.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::advance (5 samples, 0.50%)</title><rect x="9.5808%" y="981" width="0.4990%" height="15" fill="rgb(241,128,51)" fg:x="96" fg:w="5"/><text x="9.8308%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="9.8802%" y="965" width="0.1996%" height="15" fill="rgb(227,165,31)" fg:x="99" fg:w="2"/><text x="10.1302%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::EncodedBuf&lt;bytes::bytes::Bytes&gt;&gt; (1 samples, 0.10%)</title><rect x="9.9800%" y="949" width="0.0998%" height="15" fill="rgb(228,167,24)" fg:x="100" fg:w="1"/><text x="10.2300%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hyper::proto::h1::encode::BufKind&lt;bytes::bytes::Bytes&gt;&gt; (1 samples, 0.10%)</title><rect x="9.9800%" y="933" width="0.0998%" height="15" fill="rgb(228,143,12)" fg:x="100" fg:w="1"/><text x="10.2300%" y="943.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.10%)</title><rect x="10.4790%" y="757" width="0.0998%" height="15" fill="rgb(249,149,8)" fg:x="105" fg:w="1"/><text x="10.7290%" y="767.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.10%)</title><rect x="10.4790%" y="741" width="0.0998%" height="15" fill="rgb(243,35,44)" fg:x="105" fg:w="1"/><text x="10.7290%" y="751.50"></text></g><g><title>[libc.so.6] (3 samples, 0.30%)</title><rect x="10.8782%" y="741" width="0.2994%" height="15" fill="rgb(246,89,9)" fg:x="109" fg:w="3"/><text x="11.1282%" y="751.50"></text></g><g><title>__x64_sys_writev (1 samples, 0.10%)</title><rect x="11.1776%" y="725" width="0.0998%" height="15" fill="rgb(233,213,13)" fg:x="112" fg:w="1"/><text x="11.4276%" y="735.50"></text></g><g><title>__fdget_pos (2 samples, 0.20%)</title><rect x="11.6766%" y="677" width="0.1996%" height="15" fill="rgb(233,141,41)" fg:x="117" fg:w="2"/><text x="11.9266%" y="687.50"></text></g><g><title>__fget_light (2 samples, 0.20%)</title><rect x="11.6766%" y="661" width="0.1996%" height="15" fill="rgb(239,167,4)" fg:x="117" fg:w="2"/><text x="11.9266%" y="671.50"></text></g><g><title>__fget_files (2 samples, 0.20%)</title><rect x="11.6766%" y="645" width="0.1996%" height="15" fill="rgb(209,217,16)" fg:x="117" fg:w="2"/><text x="11.9266%" y="655.50"></text></g><g><title>__fget_light (1 samples, 0.10%)</title><rect x="11.8762%" y="677" width="0.0998%" height="15" fill="rgb(219,88,35)" fg:x="119" fg:w="1"/><text x="12.1262%" y="687.50"></text></g><g><title>do_iter_readv_writev (1 samples, 0.10%)</title><rect x="12.2754%" y="661" width="0.0998%" height="15" fill="rgb(220,193,23)" fg:x="123" fg:w="1"/><text x="12.5254%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="12.2754%" y="645" width="0.0998%" height="15" fill="rgb(230,90,52)" fg:x="123" fg:w="1"/><text x="12.5254%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.10%)</title><rect x="12.2754%" y="629" width="0.0998%" height="15" fill="rgb(252,106,19)" fg:x="123" fg:w="1"/><text x="12.5254%" y="639.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.10%)</title><rect x="12.2754%" y="613" width="0.0998%" height="15" fill="rgb(206,74,20)" fg:x="123" fg:w="1"/><text x="12.5254%" y="623.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.10%)</title><rect x="12.2754%" y="597" width="0.0998%" height="15" fill="rgb(230,138,44)" fg:x="123" fg:w="1"/><text x="12.5254%" y="607.50"></text></g><g><title>apparmor_socket_sendmsg (1 samples, 0.10%)</title><rect x="13.4731%" y="597" width="0.0998%" height="15" fill="rgb(235,182,43)" fg:x="135" fg:w="1"/><text x="13.7231%" y="607.50"></text></g><g><title>_raw_spin_lock_bh (1 samples, 0.10%)</title><rect x="13.9721%" y="565" width="0.0998%" height="15" fill="rgb(242,16,51)" fg:x="140" fg:w="1"/><text x="14.2221%" y="575.50"></text></g><g><title>lock_sock_nested (1 samples, 0.10%)</title><rect x="14.0719%" y="565" width="0.0998%" height="15" fill="rgb(248,9,4)" fg:x="141" fg:w="1"/><text x="14.3219%" y="575.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="14.0719%" y="549" width="0.0998%" height="15" fill="rgb(210,31,22)" fg:x="141" fg:w="1"/><text x="14.3219%" y="559.50"></text></g><g><title>release_sock (2 samples, 0.20%)</title><rect x="14.1717%" y="565" width="0.1996%" height="15" fill="rgb(239,54,39)" fg:x="142" fg:w="2"/><text x="14.4217%" y="575.50"></text></g><g><title>__release_sock (1 samples, 0.10%)</title><rect x="14.2715%" y="549" width="0.0998%" height="15" fill="rgb(230,99,41)" fg:x="143" fg:w="1"/><text x="14.5215%" y="559.50"></text></g><g><title>rcu_all_qs (1 samples, 0.10%)</title><rect x="14.2715%" y="533" width="0.0998%" height="15" fill="rgb(253,106,12)" fg:x="143" fg:w="1"/><text x="14.5215%" y="543.50"></text></g><g><title>__alloc_skb (1 samples, 0.10%)</title><rect x="14.8703%" y="549" width="0.0998%" height="15" fill="rgb(213,46,41)" fg:x="149" fg:w="1"/><text x="15.1203%" y="559.50"></text></g><g><title>sk_page_frag_refill (4 samples, 0.40%)</title><rect x="14.9701%" y="549" width="0.3992%" height="15" fill="rgb(215,133,35)" fg:x="150" fg:w="4"/><text x="15.2201%" y="559.50"></text></g><g><title>skb_page_frag_refill (4 samples, 0.40%)</title><rect x="14.9701%" y="533" width="0.3992%" height="15" fill="rgb(213,28,5)" fg:x="150" fg:w="4"/><text x="15.2201%" y="543.50"></text></g><g><title>kfence_ksize (1 samples, 0.10%)</title><rect x="15.5689%" y="517" width="0.0998%" height="15" fill="rgb(215,77,49)" fg:x="156" fg:w="1"/><text x="15.8189%" y="527.50"></text></g><g><title>___slab_alloc (1 samples, 0.10%)</title><rect x="16.0679%" y="485" width="0.0998%" height="15" fill="rgb(248,100,22)" fg:x="161" fg:w="1"/><text x="16.3179%" y="495.50"></text></g><g><title>__cond_resched (3 samples, 0.30%)</title><rect x="16.1677%" y="485" width="0.2994%" height="15" fill="rgb(208,67,9)" fg:x="162" fg:w="3"/><text x="16.4177%" y="495.50"></text></g><g><title>kmalloc_slab (1 samples, 0.10%)</title><rect x="16.4671%" y="485" width="0.0998%" height="15" fill="rgb(219,133,21)" fg:x="165" fg:w="1"/><text x="16.7171%" y="495.50"></text></g><g><title>__kmalloc_node_track_caller (9 samples, 0.90%)</title><rect x="15.8683%" y="501" width="0.8982%" height="15" fill="rgb(246,46,29)" fg:x="159" fg:w="9"/><text x="16.1183%" y="511.50"></text></g><g><title>memcg_slab_post_alloc_hook (2 samples, 0.20%)</title><rect x="16.5669%" y="485" width="0.1996%" height="15" fill="rgb(246,185,52)" fg:x="166" fg:w="2"/><text x="16.8169%" y="495.50"></text></g><g><title>kmalloc_slab (1 samples, 0.10%)</title><rect x="16.7665%" y="501" width="0.0998%" height="15" fill="rgb(252,136,11)" fg:x="168" fg:w="1"/><text x="17.0165%" y="511.50"></text></g><g><title>kmalloc_reserve (13 samples, 1.30%)</title><rect x="15.6687%" y="517" width="1.2974%" height="15" fill="rgb(219,138,53)" fg:x="157" fg:w="13"/><text x="15.9187%" y="527.50"></text></g><g><title>memset_erms (1 samples, 0.10%)</title><rect x="16.8663%" y="501" width="0.0998%" height="15" fill="rgb(211,51,23)" fg:x="169" fg:w="1"/><text x="17.1163%" y="511.50"></text></g><g><title>kmem_cache_alloc_node (4 samples, 0.40%)</title><rect x="16.9661%" y="517" width="0.3992%" height="15" fill="rgb(247,221,28)" fg:x="170" fg:w="4"/><text x="17.2161%" y="527.50"></text></g><g><title>___slab_alloc (1 samples, 0.10%)</title><rect x="17.2655%" y="501" width="0.0998%" height="15" fill="rgb(251,222,45)" fg:x="173" fg:w="1"/><text x="17.5155%" y="511.50"></text></g><g><title>ksize (2 samples, 0.20%)</title><rect x="17.3653%" y="517" width="0.1996%" height="15" fill="rgb(217,162,53)" fg:x="174" fg:w="2"/><text x="17.6153%" y="527.50"></text></g><g><title>__ksize (2 samples, 0.20%)</title><rect x="17.3653%" y="501" width="0.1996%" height="15" fill="rgb(229,93,14)" fg:x="174" fg:w="2"/><text x="17.6153%" y="511.50"></text></g><g><title>memset_erms (1 samples, 0.10%)</title><rect x="17.5649%" y="517" width="0.0998%" height="15" fill="rgb(209,67,49)" fg:x="176" fg:w="1"/><text x="17.8149%" y="527.50"></text></g><g><title>__alloc_skb (23 samples, 2.30%)</title><rect x="15.4691%" y="533" width="2.2954%" height="15" fill="rgb(213,87,29)" fg:x="155" fg:w="23"/><text x="15.7191%" y="543.50">_..</text></g><g><title>should_failslab (1 samples, 0.10%)</title><rect x="17.6647%" y="517" width="0.0998%" height="15" fill="rgb(205,151,52)" fg:x="177" fg:w="1"/><text x="17.9147%" y="527.50"></text></g><g><title>sk_stream_alloc_skb (25 samples, 2.50%)</title><rect x="15.3693%" y="549" width="2.4950%" height="15" fill="rgb(253,215,39)" fg:x="154" fg:w="25"/><text x="15.6193%" y="559.50">sk..</text></g><g><title>__build_skb_around (1 samples, 0.10%)</title><rect x="17.7645%" y="533" width="0.0998%" height="15" fill="rgb(221,220,41)" fg:x="178" fg:w="1"/><text x="18.0145%" y="543.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.10%)</title><rect x="17.8643%" y="533" width="0.0998%" height="15" fill="rgb(218,133,21)" fg:x="179" fg:w="1"/><text x="18.1143%" y="543.50"></text></g><g><title>skb_do_copy_data_nocache (2 samples, 0.20%)</title><rect x="17.8643%" y="549" width="0.1996%" height="15" fill="rgb(221,193,43)" fg:x="179" fg:w="2"/><text x="18.1143%" y="559.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.10%)</title><rect x="17.9641%" y="533" width="0.0998%" height="15" fill="rgb(240,128,52)" fg:x="180" fg:w="1"/><text x="18.2141%" y="543.50"></text></g><g><title>skb_entail (7 samples, 0.70%)</title><rect x="18.0639%" y="549" width="0.6986%" height="15" fill="rgb(253,114,12)" fg:x="181" fg:w="7"/><text x="18.3139%" y="559.50"></text></g><g><title>tcp_chrono_start (1 samples, 0.10%)</title><rect x="18.6627%" y="533" width="0.0998%" height="15" fill="rgb(215,223,47)" fg:x="187" fg:w="1"/><text x="18.9127%" y="543.50"></text></g><g><title>__tcp_select_window (1 samples, 0.10%)</title><rect x="19.1617%" y="501" width="0.0998%" height="15" fill="rgb(248,225,23)" fg:x="192" fg:w="1"/><text x="19.4117%" y="511.50"></text></g><g><title>__skb_clone (1 samples, 0.10%)</title><rect x="19.9601%" y="485" width="0.0998%" height="15" fill="rgb(250,108,0)" fg:x="200" fg:w="1"/><text x="20.2101%" y="495.50"></text></g><g><title>__sk_dst_check (1 samples, 0.10%)</title><rect x="20.1597%" y="453" width="0.0998%" height="15" fill="rgb(228,208,7)" fg:x="202" fg:w="1"/><text x="20.4097%" y="463.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.10%)</title><rect x="20.1597%" y="437" width="0.0998%" height="15" fill="rgb(244,45,10)" fg:x="202" fg:w="1"/><text x="20.4097%" y="447.50"></text></g><g><title>__ip_local_out (2 samples, 0.20%)</title><rect x="20.3593%" y="437" width="0.1996%" height="15" fill="rgb(207,125,25)" fg:x="204" fg:w="2"/><text x="20.6093%" y="447.50"></text></g><g><title>ip_send_check (2 samples, 0.20%)</title><rect x="20.3593%" y="421" width="0.1996%" height="15" fill="rgb(210,195,18)" fg:x="204" fg:w="2"/><text x="20.6093%" y="431.50"></text></g><g><title>apparmor_ipv4_postroute (2 samples, 0.20%)</title><rect x="20.6587%" y="421" width="0.1996%" height="15" fill="rgb(249,80,12)" fg:x="207" fg:w="2"/><text x="20.9087%" y="431.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.10%)</title><rect x="21.0579%" y="405" width="0.0998%" height="15" fill="rgb(221,65,9)" fg:x="211" fg:w="1"/><text x="21.3079%" y="415.50"></text></g><g><title>__netif_receive_skb_core.constprop.0 (1 samples, 0.10%)</title><rect x="22.8543%" y="245" width="0.0998%" height="15" fill="rgb(235,49,36)" fg:x="229" fg:w="1"/><text x="23.1043%" y="255.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.30%)</title><rect x="23.1537%" y="181" width="0.2994%" height="15" fill="rgb(225,32,20)" fg:x="232" fg:w="3"/><text x="23.4037%" y="191.50"></text></g><g><title>__inet_lookup_established (4 samples, 0.40%)</title><rect x="23.9521%" y="165" width="0.3992%" height="15" fill="rgb(215,141,46)" fg:x="240" fg:w="4"/><text x="24.2021%" y="175.50"></text></g><g><title>inet_ehashfn (1 samples, 0.10%)</title><rect x="24.2515%" y="149" width="0.0998%" height="15" fill="rgb(250,160,47)" fg:x="243" fg:w="1"/><text x="24.5015%" y="159.50"></text></g><g><title>sock_put (1 samples, 0.10%)</title><rect x="24.3513%" y="165" width="0.0998%" height="15" fill="rgb(216,222,40)" fg:x="244" fg:w="1"/><text x="24.6013%" y="175.50"></text></g><g><title>tcp_filter (1 samples, 0.10%)</title><rect x="24.4511%" y="165" width="0.0998%" height="15" fill="rgb(234,217,39)" fg:x="245" fg:w="1"/><text x="24.7011%" y="175.50"></text></g><g><title>sk_filter_trim_cap (1 samples, 0.10%)</title><rect x="24.4511%" y="149" width="0.0998%" height="15" fill="rgb(207,178,40)" fg:x="245" fg:w="1"/><text x="24.7011%" y="159.50"></text></g><g><title>__cgroup_bpf_run_filter_skb (1 samples, 0.10%)</title><rect x="24.4511%" y="133" width="0.0998%" height="15" fill="rgb(221,136,13)" fg:x="245" fg:w="1"/><text x="24.7011%" y="143.50"></text></g><g><title>ipv4_dst_check (1 samples, 0.10%)</title><rect x="24.6507%" y="149" width="0.0998%" height="15" fill="rgb(249,199,10)" fg:x="247" fg:w="1"/><text x="24.9007%" y="159.50"></text></g><g><title>tcp_check_space (2 samples, 0.20%)</title><rect x="24.7505%" y="149" width="0.1996%" height="15" fill="rgb(249,222,13)" fg:x="248" fg:w="2"/><text x="25.0005%" y="159.50"></text></g><g><title>__tcp_ack_snd_check (5 samples, 0.50%)</title><rect x="25.0499%" y="133" width="0.4990%" height="15" fill="rgb(244,185,38)" fg:x="251" fg:w="5"/><text x="25.2999%" y="143.50"></text></g><g><title>tcp_send_delayed_ack (4 samples, 0.40%)</title><rect x="25.1497%" y="117" width="0.3992%" height="15" fill="rgb(236,202,9)" fg:x="252" fg:w="4"/><text x="25.3997%" y="127.50"></text></g><g><title>sk_reset_timer (4 samples, 0.40%)</title><rect x="25.1497%" y="101" width="0.3992%" height="15" fill="rgb(250,229,37)" fg:x="252" fg:w="4"/><text x="25.3997%" y="111.50"></text></g><g><title>mod_timer (4 samples, 0.40%)</title><rect x="25.1497%" y="85" width="0.3992%" height="15" fill="rgb(206,174,23)" fg:x="252" fg:w="4"/><text x="25.3997%" y="95.50"></text></g><g><title>__mod_timer (4 samples, 0.40%)</title><rect x="25.1497%" y="69" width="0.3992%" height="15" fill="rgb(211,33,43)" fg:x="252" fg:w="4"/><text x="25.3997%" y="79.50"></text></g><g><title>__lock_text_start (1 samples, 0.10%)</title><rect x="25.4491%" y="53" width="0.0998%" height="15" fill="rgb(245,58,50)" fg:x="255" fg:w="1"/><text x="25.6991%" y="63.50"></text></g><g><title>rb_erase (1 samples, 0.10%)</title><rect x="25.7485%" y="117" width="0.0998%" height="15" fill="rgb(244,68,36)" fg:x="258" fg:w="1"/><text x="25.9985%" y="127.50"></text></g><g><title>rb_first (3 samples, 0.30%)</title><rect x="25.8483%" y="117" width="0.2994%" height="15" fill="rgb(232,229,15)" fg:x="259" fg:w="3"/><text x="26.0983%" y="127.50"></text></g><g><title>kfree_skbmem (3 samples, 0.30%)</title><rect x="26.3473%" y="85" width="0.2994%" height="15" fill="rgb(254,30,23)" fg:x="264" fg:w="3"/><text x="26.5973%" y="95.50"></text></g><g><title>kmem_cache_free (3 samples, 0.30%)</title><rect x="26.3473%" y="69" width="0.2994%" height="15" fill="rgb(235,160,14)" fg:x="264" fg:w="3"/><text x="26.5973%" y="79.50"></text></g><g><title>__slab_free (1 samples, 0.10%)</title><rect x="26.5469%" y="53" width="0.0998%" height="15" fill="rgb(212,155,44)" fg:x="266" fg:w="1"/><text x="26.7969%" y="63.50"></text></g><g><title>put_cpu_partial (1 samples, 0.10%)</title><rect x="26.5469%" y="37" width="0.0998%" height="15" fill="rgb(226,2,50)" fg:x="266" fg:w="1"/><text x="26.7969%" y="47.50"></text></g><g><title>__slab_free (1 samples, 0.10%)</title><rect x="27.5449%" y="37" width="0.0998%" height="15" fill="rgb(234,177,6)" fg:x="276" fg:w="1"/><text x="27.7949%" y="47.50"></text></g><g><title>kfree (5 samples, 0.50%)</title><rect x="27.4451%" y="53" width="0.4990%" height="15" fill="rgb(217,24,9)" fg:x="275" fg:w="5"/><text x="27.6951%" y="63.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (3 samples, 0.30%)</title><rect x="27.6447%" y="37" width="0.2994%" height="15" fill="rgb(220,13,46)" fg:x="277" fg:w="3"/><text x="27.8947%" y="47.50"></text></g><g><title>__kfree_skb (18 samples, 1.80%)</title><rect x="26.3473%" y="101" width="1.7964%" height="15" fill="rgb(239,221,27)" fg:x="264" fg:w="18"/><text x="26.5973%" y="111.50">_..</text></g><g><title>skb_release_data (15 samples, 1.50%)</title><rect x="26.6467%" y="85" width="1.4970%" height="15" fill="rgb(222,198,25)" fg:x="267" fg:w="15"/><text x="26.8967%" y="95.50"></text></g><g><title>skb_free_head (7 samples, 0.70%)</title><rect x="27.4451%" y="69" width="0.6986%" height="15" fill="rgb(211,99,13)" fg:x="275" fg:w="7"/><text x="27.6951%" y="79.50"></text></g><g><title>memcg_slab_free_hook (2 samples, 0.20%)</title><rect x="27.9441%" y="53" width="0.1996%" height="15" fill="rgb(232,111,31)" fg:x="280" fg:w="2"/><text x="28.1941%" y="63.50"></text></g><g><title>tcp_ack_tstamp (1 samples, 0.10%)</title><rect x="28.1437%" y="101" width="0.0998%" height="15" fill="rgb(245,82,37)" fg:x="282" fg:w="1"/><text x="28.3937%" y="111.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (22 samples, 2.20%)</title><rect x="26.1477%" y="117" width="2.1956%" height="15" fill="rgb(227,149,46)" fg:x="262" fg:w="22"/><text x="26.3977%" y="127.50">t..</text></g><g><title>tcp_rtt_estimator (1 samples, 0.10%)</title><rect x="28.2435%" y="101" width="0.0998%" height="15" fill="rgb(218,36,50)" fg:x="283" fg:w="1"/><text x="28.4935%" y="111.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.10%)</title><rect x="28.3433%" y="117" width="0.0998%" height="15" fill="rgb(226,80,48)" fg:x="284" fg:w="1"/><text x="28.5933%" y="127.50"></text></g><g><title>tcp_ack (30 samples, 2.99%)</title><rect x="25.5489%" y="133" width="2.9940%" height="15" fill="rgb(238,224,15)" fg:x="256" fg:w="30"/><text x="25.7989%" y="143.50">tcp..</text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.10%)</title><rect x="28.4431%" y="117" width="0.0998%" height="15" fill="rgb(241,136,10)" fg:x="285" fg:w="1"/><text x="28.6931%" y="127.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.10%)</title><rect x="28.4431%" y="101" width="0.0998%" height="15" fill="rgb(208,32,45)" fg:x="285" fg:w="1"/><text x="28.6931%" y="111.50"></text></g><g><title>tcp_data_ready (63 samples, 6.29%)</title><rect x="28.5429%" y="133" width="6.2874%" height="15" fill="rgb(207,135,9)" fg:x="286" fg:w="63"/><text x="28.7929%" y="143.50">tcp_data..</text></g><g><title>sock_def_readable (62 samples, 6.19%)</title><rect x="28.6427%" y="117" width="6.1876%" height="15" fill="rgb(206,86,44)" fg:x="287" fg:w="62"/><text x="28.8927%" y="127.50">sock_def..</text></g><g><title>__wake_up_sync_key (62 samples, 6.19%)</title><rect x="28.6427%" y="101" width="6.1876%" height="15" fill="rgb(245,177,15)" fg:x="287" fg:w="62"/><text x="28.8927%" y="111.50">__wake_u..</text></g><g><title>__wake_up_common_lock (62 samples, 6.19%)</title><rect x="28.6427%" y="85" width="6.1876%" height="15" fill="rgb(206,64,50)" fg:x="287" fg:w="62"/><text x="28.8927%" y="95.50">__wake_u..</text></g><g><title>__lock_text_start (62 samples, 6.19%)</title><rect x="28.6427%" y="69" width="6.1876%" height="15" fill="rgb(234,36,40)" fg:x="287" fg:w="62"/><text x="28.8927%" y="79.50">__lock_t..</text></g><g><title>tcp_event_data_recv (1 samples, 0.10%)</title><rect x="34.8303%" y="133" width="0.0998%" height="15" fill="rgb(213,64,8)" fg:x="349" fg:w="1"/><text x="35.0803%" y="143.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.10%)</title><rect x="34.9301%" y="133" width="0.0998%" height="15" fill="rgb(210,75,36)" fg:x="350" fg:w="1"/><text x="35.1801%" y="143.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="34.9301%" y="117" width="0.0998%" height="15" fill="rgb(229,88,21)" fg:x="350" fg:w="1"/><text x="35.1801%" y="127.50"></text></g><g><title>ip_protocol_deliver_rcu (120 samples, 11.98%)</title><rect x="23.1537%" y="197" width="11.9760%" height="15" fill="rgb(252,204,47)" fg:x="232" fg:w="120"/><text x="23.4037%" y="207.50">ip_protocol_delive..</text></g><g><title>tcp_v4_rcv (117 samples, 11.68%)</title><rect x="23.4531%" y="181" width="11.6766%" height="15" fill="rgb(208,77,27)" fg:x="235" fg:w="117"/><text x="23.7031%" y="191.50">tcp_v4_rcv</text></g><g><title>tcp_v4_do_rcv (106 samples, 10.58%)</title><rect x="24.5509%" y="165" width="10.5788%" height="15" fill="rgb(221,76,26)" fg:x="246" fg:w="106"/><text x="24.8009%" y="175.50">tcp_v4_do_rcv</text></g><g><title>tcp_rcv_established (102 samples, 10.18%)</title><rect x="24.9501%" y="149" width="10.1796%" height="15" fill="rgb(225,139,18)" fg:x="250" fg:w="102"/><text x="25.2001%" y="159.50">tcp_rcv_establi..</text></g><g><title>tcp_schedule_loss_probe (1 samples, 0.10%)</title><rect x="35.0299%" y="133" width="0.0998%" height="15" fill="rgb(230,137,11)" fg:x="351" fg:w="1"/><text x="35.2799%" y="143.50"></text></g><g><title>ip_local_deliver (122 samples, 12.18%)</title><rect x="23.0539%" y="229" width="12.1756%" height="15" fill="rgb(212,28,1)" fg:x="231" fg:w="122"/><text x="23.3039%" y="239.50">ip_local_deliver</text></g><g><title>ip_local_deliver_finish (121 samples, 12.08%)</title><rect x="23.1537%" y="213" width="12.0758%" height="15" fill="rgb(248,164,17)" fg:x="232" fg:w="121"/><text x="23.4037%" y="223.50">ip_local_deliver_f..</text></g><g><title>raw_local_deliver (1 samples, 0.10%)</title><rect x="35.1297%" y="197" width="0.0998%" height="15" fill="rgb(222,171,42)" fg:x="352" fg:w="1"/><text x="35.3797%" y="207.50"></text></g><g><title>ip_rcv_core (2 samples, 0.20%)</title><rect x="35.2295%" y="229" width="0.1996%" height="15" fill="rgb(243,84,45)" fg:x="353" fg:w="2"/><text x="35.4795%" y="239.50"></text></g><g><title>__local_bh_enable_ip (142 samples, 14.17%)</title><rect x="21.5569%" y="373" width="14.1717%" height="15" fill="rgb(252,49,23)" fg:x="216" fg:w="142"/><text x="21.8069%" y="383.50">__local_bh_enable_ip</text></g><g><title>do_softirq (141 samples, 14.07%)</title><rect x="21.6567%" y="357" width="14.0719%" height="15" fill="rgb(215,19,7)" fg:x="217" fg:w="141"/><text x="21.9067%" y="367.50">do_softirq</text></g><g><title>__softirqentry_text_start (139 samples, 13.87%)</title><rect x="21.8563%" y="341" width="13.8723%" height="15" fill="rgb(238,81,41)" fg:x="219" fg:w="139"/><text x="22.1063%" y="351.50">__softirqentry_text_s..</text></g><g><title>net_rx_action (135 samples, 13.47%)</title><rect x="22.2555%" y="325" width="13.4731%" height="15" fill="rgb(210,199,37)" fg:x="223" fg:w="135"/><text x="22.5055%" y="335.50">net_rx_action</text></g><g><title>__napi_poll (131 samples, 13.07%)</title><rect x="22.6547%" y="309" width="13.0739%" height="15" fill="rgb(244,192,49)" fg:x="227" fg:w="131"/><text x="22.9047%" y="319.50">__napi_poll</text></g><g><title>process_backlog (131 samples, 13.07%)</title><rect x="22.6547%" y="293" width="13.0739%" height="15" fill="rgb(226,211,11)" fg:x="227" fg:w="131"/><text x="22.9047%" y="303.50">process_backlog</text></g><g><title>__netif_receive_skb (130 samples, 12.97%)</title><rect x="22.7545%" y="277" width="12.9741%" height="15" fill="rgb(236,162,54)" fg:x="228" fg:w="130"/><text x="23.0045%" y="287.50">__netif_receive_skb</text></g><g><title>__netif_receive_skb_one_core (130 samples, 12.97%)</title><rect x="22.7545%" y="261" width="12.9741%" height="15" fill="rgb(220,229,9)" fg:x="228" fg:w="130"/><text x="23.0045%" y="271.50">__netif_receive_skb..</text></g><g><title>ip_rcv (128 samples, 12.77%)</title><rect x="22.9541%" y="245" width="12.7745%" height="15" fill="rgb(250,87,22)" fg:x="230" fg:w="128"/><text x="23.2041%" y="255.50">ip_rcv</text></g><g><title>ip_rcv_finish_core.constprop.0 (3 samples, 0.30%)</title><rect x="35.4291%" y="229" width="0.2994%" height="15" fill="rgb(239,43,17)" fg:x="355" fg:w="3"/><text x="35.6791%" y="239.50"></text></g><g><title>loopback_xmit (1 samples, 0.10%)</title><rect x="36.2275%" y="325" width="0.0998%" height="15" fill="rgb(231,177,25)" fg:x="363" fg:w="1"/><text x="36.4775%" y="335.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.10%)</title><rect x="36.4271%" y="261" width="0.0998%" height="15" fill="rgb(219,179,1)" fg:x="365" fg:w="1"/><text x="36.6771%" y="271.50"></text></g><g><title>netif_rx (2 samples, 0.20%)</title><rect x="36.4271%" y="293" width="0.1996%" height="15" fill="rgb(238,219,53)" fg:x="365" fg:w="2"/><text x="36.6771%" y="303.50"></text></g><g><title>netif_rx_internal (2 samples, 0.20%)</title><rect x="36.4271%" y="277" width="0.1996%" height="15" fill="rgb(232,167,36)" fg:x="365" fg:w="2"/><text x="36.6771%" y="287.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="36.5269%" y="261" width="0.0998%" height="15" fill="rgb(244,19,51)" fg:x="366" fg:w="1"/><text x="36.7769%" y="271.50"></text></g><g><title>netif_rx_internal (1 samples, 0.10%)</title><rect x="36.6267%" y="293" width="0.0998%" height="15" fill="rgb(224,6,22)" fg:x="367" fg:w="1"/><text x="36.8767%" y="303.50"></text></g><g><title>skb_clone_tx_timestamp (1 samples, 0.10%)</title><rect x="36.7265%" y="293" width="0.0998%" height="15" fill="rgb(224,145,5)" fg:x="368" fg:w="1"/><text x="36.9765%" y="303.50"></text></g><g><title>dev_hard_start_xmit (12 samples, 1.20%)</title><rect x="36.2275%" y="341" width="1.1976%" height="15" fill="rgb(234,130,49)" fg:x="363" fg:w="12"/><text x="36.4775%" y="351.50"></text></g><g><title>xmit_one.constprop.0 (11 samples, 1.10%)</title><rect x="36.3273%" y="325" width="1.0978%" height="15" fill="rgb(254,6,2)" fg:x="364" fg:w="11"/><text x="36.5773%" y="335.50"></text></g><g><title>loopback_xmit (10 samples, 1.00%)</title><rect x="36.4271%" y="309" width="0.9980%" height="15" fill="rgb(208,96,46)" fg:x="365" fg:w="10"/><text x="36.6771%" y="319.50"></text></g><g><title>tcp_wfree (6 samples, 0.60%)</title><rect x="36.8263%" y="293" width="0.5988%" height="15" fill="rgb(239,3,39)" fg:x="369" fg:w="6"/><text x="37.0763%" y="303.50"></text></g><g><title>sk_free (3 samples, 0.30%)</title><rect x="37.1257%" y="277" width="0.2994%" height="15" fill="rgb(233,210,1)" fg:x="372" fg:w="3"/><text x="37.3757%" y="287.50"></text></g><g><title>validate_xmit_skb (2 samples, 0.20%)</title><rect x="37.4251%" y="341" width="0.1996%" height="15" fill="rgb(244,137,37)" fg:x="375" fg:w="2"/><text x="37.6751%" y="351.50"></text></g><g><title>validate_xmit_vlan (2 samples, 0.20%)</title><rect x="37.4251%" y="325" width="0.1996%" height="15" fill="rgb(240,136,2)" fg:x="375" fg:w="2"/><text x="37.6751%" y="335.50"></text></g><g><title>ip_finish_output2 (164 samples, 16.37%)</title><rect x="21.3573%" y="389" width="16.3673%" height="15" fill="rgb(239,18,37)" fg:x="214" fg:w="164"/><text x="21.6073%" y="399.50">ip_finish_output2</text></g><g><title>dev_queue_xmit (20 samples, 2.00%)</title><rect x="35.7285%" y="373" width="1.9960%" height="15" fill="rgb(218,185,22)" fg:x="358" fg:w="20"/><text x="35.9785%" y="383.50">d..</text></g><g><title>__dev_queue_xmit (19 samples, 1.90%)</title><rect x="35.8283%" y="357" width="1.8962%" height="15" fill="rgb(225,218,4)" fg:x="359" fg:w="19"/><text x="36.0783%" y="367.50">_..</text></g><g><title>validate_xmit_vlan (1 samples, 0.10%)</title><rect x="37.6248%" y="341" width="0.0998%" height="15" fill="rgb(230,182,32)" fg:x="377" fg:w="1"/><text x="37.8748%" y="351.50"></text></g><g><title>__ip_finish_output (168 samples, 16.77%)</title><rect x="21.1577%" y="405" width="16.7665%" height="15" fill="rgb(242,56,43)" fg:x="212" fg:w="168"/><text x="21.4077%" y="415.50">__ip_finish_output</text></g><g><title>ip_skb_dst_mtu (2 samples, 0.20%)</title><rect x="37.7246%" y="389" width="0.1996%" height="15" fill="rgb(233,99,24)" fg:x="378" fg:w="2"/><text x="37.9746%" y="399.50"></text></g><g><title>migrate_disable (1 samples, 0.10%)</title><rect x="37.9242%" y="405" width="0.0998%" height="15" fill="rgb(234,209,42)" fg:x="380" fg:w="1"/><text x="38.1742%" y="415.50"></text></g><g><title>ip_output (176 samples, 17.56%)</title><rect x="20.5589%" y="437" width="17.5649%" height="15" fill="rgb(227,7,12)" fg:x="206" fg:w="176"/><text x="20.8089%" y="447.50">ip_output</text></g><g><title>ip_finish_output (173 samples, 17.27%)</title><rect x="20.8583%" y="421" width="17.2655%" height="15" fill="rgb(245,203,43)" fg:x="209" fg:w="173"/><text x="21.1083%" y="431.50">ip_finish_output</text></g><g><title>rcu_read_unlock_strict (1 samples, 0.10%)</title><rect x="38.0240%" y="405" width="0.0998%" height="15" fill="rgb(238,205,33)" fg:x="381" fg:w="1"/><text x="38.2740%" y="415.50"></text></g><g><title>__ip_queue_xmit (182 samples, 18.16%)</title><rect x="20.0599%" y="469" width="18.1637%" height="15" fill="rgb(231,56,7)" fg:x="201" fg:w="182"/><text x="20.3099%" y="479.50">__ip_queue_xmit</text></g><g><title>ip_local_out (180 samples, 17.96%)</title><rect x="20.2595%" y="453" width="17.9641%" height="15" fill="rgb(244,186,29)" fg:x="203" fg:w="180"/><text x="20.5095%" y="463.50">ip_local_out</text></g><g><title>rcu_read_unlock_strict (1 samples, 0.10%)</title><rect x="38.1238%" y="437" width="0.0998%" height="15" fill="rgb(234,111,31)" fg:x="382" fg:w="1"/><text x="38.3738%" y="447.50"></text></g><g><title>ip_queue_xmit (183 samples, 18.26%)</title><rect x="20.0599%" y="485" width="18.2635%" height="15" fill="rgb(241,149,10)" fg:x="201" fg:w="183"/><text x="20.3099%" y="495.50">ip_queue_xmit</text></g><g><title>rcu_read_unlock_strict (1 samples, 0.10%)</title><rect x="38.2236%" y="469" width="0.0998%" height="15" fill="rgb(249,206,44)" fg:x="383" fg:w="1"/><text x="38.4736%" y="479.50"></text></g><g><title>skb_clone (3 samples, 0.30%)</title><rect x="38.3234%" y="485" width="0.2994%" height="15" fill="rgb(251,153,30)" fg:x="384" fg:w="3"/><text x="38.5734%" y="495.50"></text></g><g><title>__skb_clone (2 samples, 0.20%)</title><rect x="38.4232%" y="469" width="0.1996%" height="15" fill="rgb(239,152,38)" fg:x="385" fg:w="2"/><text x="38.6732%" y="479.50"></text></g><g><title>__tcp_transmit_skb (195 samples, 19.46%)</title><rect x="19.2615%" y="501" width="19.4611%" height="15" fill="rgb(249,139,47)" fg:x="193" fg:w="195"/><text x="19.5115%" y="511.50">__tcp_transmit_skb</text></g><g><title>tcp_options_write (1 samples, 0.10%)</title><rect x="38.6228%" y="485" width="0.0998%" height="15" fill="rgb(244,64,35)" fg:x="387" fg:w="1"/><text x="38.8728%" y="495.50"></text></g><g><title>rb_first (1 samples, 0.10%)</title><rect x="38.7226%" y="501" width="0.0998%" height="15" fill="rgb(216,46,15)" fg:x="388" fg:w="1"/><text x="38.9726%" y="511.50"></text></g><g><title>read_tsc (2 samples, 0.20%)</title><rect x="38.8224%" y="501" width="0.1996%" height="15" fill="rgb(250,74,19)" fg:x="389" fg:w="2"/><text x="39.0724%" y="511.50"></text></g><g><title>skb_clone (2 samples, 0.20%)</title><rect x="39.0220%" y="501" width="0.1996%" height="15" fill="rgb(249,42,33)" fg:x="391" fg:w="2"/><text x="39.2720%" y="511.50"></text></g><g><title>tcp_check_space (2 samples, 0.20%)</title><rect x="39.2216%" y="501" width="0.1996%" height="15" fill="rgb(242,149,17)" fg:x="393" fg:w="2"/><text x="39.4716%" y="511.50"></text></g><g><title>tcp_event_new_data_sent (4 samples, 0.40%)</title><rect x="39.4212%" y="501" width="0.3992%" height="15" fill="rgb(244,29,21)" fg:x="395" fg:w="4"/><text x="39.6712%" y="511.50"></text></g><g><title>tcp_rearm_rto (3 samples, 0.30%)</title><rect x="39.5210%" y="485" width="0.2994%" height="15" fill="rgb(220,130,37)" fg:x="396" fg:w="3"/><text x="39.7710%" y="495.50"></text></g><g><title>sk_reset_timer (3 samples, 0.30%)</title><rect x="39.5210%" y="469" width="0.2994%" height="15" fill="rgb(211,67,2)" fg:x="396" fg:w="3"/><text x="39.7710%" y="479.50"></text></g><g><title>mod_timer (2 samples, 0.20%)</title><rect x="39.6208%" y="453" width="0.1996%" height="15" fill="rgb(235,68,52)" fg:x="397" fg:w="2"/><text x="39.8708%" y="463.50"></text></g><g><title>__mod_timer (2 samples, 0.20%)</title><rect x="39.6208%" y="437" width="0.1996%" height="15" fill="rgb(246,142,3)" fg:x="397" fg:w="2"/><text x="39.8708%" y="447.50"></text></g><g><title>tcp_options_write (1 samples, 0.10%)</title><rect x="39.8204%" y="501" width="0.0998%" height="15" fill="rgb(241,25,7)" fg:x="399" fg:w="1"/><text x="40.0704%" y="511.50"></text></g><g><title>tcp_rate_skb_sent (1 samples, 0.10%)</title><rect x="39.9202%" y="501" width="0.0998%" height="15" fill="rgb(242,119,39)" fg:x="400" fg:w="1"/><text x="40.1702%" y="511.50"></text></g><g><title>tcp_schedule_loss_probe.part.0 (1 samples, 0.10%)</title><rect x="40.0200%" y="501" width="0.0998%" height="15" fill="rgb(241,98,45)" fg:x="401" fg:w="1"/><text x="40.2700%" y="511.50"></text></g><g><title>sk_reset_timer (1 samples, 0.10%)</title><rect x="40.0200%" y="485" width="0.0998%" height="15" fill="rgb(254,28,30)" fg:x="401" fg:w="1"/><text x="40.2700%" y="495.50"></text></g><g><title>tcp_push (215 samples, 21.46%)</title><rect x="18.7625%" y="549" width="21.4571%" height="15" fill="rgb(241,142,54)" fg:x="188" fg:w="215"/><text x="19.0125%" y="559.50">tcp_push</text></g><g><title>__tcp_push_pending_frames (214 samples, 21.36%)</title><rect x="18.8623%" y="533" width="21.3573%" height="15" fill="rgb(222,85,15)" fg:x="189" fg:w="214"/><text x="19.1123%" y="543.50">__tcp_push_pending_frames</text></g><g><title>tcp_write_xmit (214 samples, 21.36%)</title><rect x="18.8623%" y="517" width="21.3573%" height="15" fill="rgb(210,85,47)" fg:x="189" fg:w="214"/><text x="19.1123%" y="527.50">tcp_write_xmit</text></g><g><title>tcp_update_skb_after_send (1 samples, 0.10%)</title><rect x="40.1198%" y="501" width="0.0998%" height="15" fill="rgb(224,206,25)" fg:x="402" fg:w="1"/><text x="40.3698%" y="511.50"></text></g><g><title>tcp_send_mss (3 samples, 0.30%)</title><rect x="40.2196%" y="549" width="0.2994%" height="15" fill="rgb(243,201,19)" fg:x="403" fg:w="3"/><text x="40.4696%" y="559.50"></text></g><g><title>tcp_current_mss (2 samples, 0.20%)</title><rect x="40.3194%" y="533" width="0.1996%" height="15" fill="rgb(236,59,4)" fg:x="404" fg:w="2"/><text x="40.5694%" y="543.50"></text></g><g><title>ipv4_mtu (1 samples, 0.10%)</title><rect x="40.4192%" y="517" width="0.0998%" height="15" fill="rgb(254,179,45)" fg:x="405" fg:w="1"/><text x="40.6692%" y="527.50"></text></g><g><title>tcp_stream_memory_free (1 samples, 0.10%)</title><rect x="40.5190%" y="549" width="0.0998%" height="15" fill="rgb(226,14,10)" fg:x="406" fg:w="1"/><text x="40.7690%" y="559.50"></text></g><g><title>do_iter_readv_writev (278 samples, 27.74%)</title><rect x="12.9741%" y="645" width="27.7445%" height="15" fill="rgb(244,27,41)" fg:x="130" fg:w="278"/><text x="13.2241%" y="655.50">do_iter_readv_writev</text></g><g><title>sock_write_iter (276 samples, 27.54%)</title><rect x="13.1737%" y="629" width="27.5449%" height="15" fill="rgb(235,35,32)" fg:x="132" fg:w="276"/><text x="13.4237%" y="639.50">sock_write_iter</text></g><g><title>sock_sendmsg (273 samples, 27.25%)</title><rect x="13.4731%" y="613" width="27.2455%" height="15" fill="rgb(218,68,31)" fg:x="135" fg:w="273"/><text x="13.7231%" y="623.50">sock_sendmsg</text></g><g><title>inet_sendmsg (272 samples, 27.15%)</title><rect x="13.5729%" y="597" width="27.1457%" height="15" fill="rgb(207,120,37)" fg:x="136" fg:w="272"/><text x="13.8229%" y="607.50">inet_sendmsg</text></g><g><title>tcp_sendmsg (269 samples, 26.85%)</title><rect x="13.8723%" y="581" width="26.8463%" height="15" fill="rgb(227,98,0)" fg:x="139" fg:w="269"/><text x="14.1223%" y="591.50">tcp_sendmsg</text></g><g><title>tcp_sendmsg_locked (264 samples, 26.35%)</title><rect x="14.3713%" y="565" width="26.3473%" height="15" fill="rgb(207,7,3)" fg:x="144" fg:w="264"/><text x="14.6213%" y="575.50">tcp_sendmsg_locked</text></g><g><title>tcp_tx_timestamp (1 samples, 0.10%)</title><rect x="40.6188%" y="549" width="0.0998%" height="15" fill="rgb(206,98,19)" fg:x="407" fg:w="1"/><text x="40.8688%" y="559.50"></text></g><g><title>do_iter_write (286 samples, 28.54%)</title><rect x="12.3752%" y="661" width="28.5429%" height="15" fill="rgb(217,5,26)" fg:x="124" fg:w="286"/><text x="12.6252%" y="671.50">do_iter_write</text></g><g><title>rw_verify_area (2 samples, 0.20%)</title><rect x="40.7186%" y="645" width="0.1996%" height="15" fill="rgb(235,190,38)" fg:x="408" fg:w="2"/><text x="40.9686%" y="655.50"></text></g><g><title>security_file_permission (2 samples, 0.20%)</title><rect x="40.7186%" y="629" width="0.1996%" height="15" fill="rgb(247,86,24)" fg:x="408" fg:w="2"/><text x="40.9686%" y="639.50"></text></g><g><title>apparmor_file_permission (1 samples, 0.10%)</title><rect x="40.8184%" y="613" width="0.0998%" height="15" fill="rgb(205,101,16)" fg:x="409" fg:w="1"/><text x="41.0684%" y="623.50"></text></g><g><title>__check_object_size (3 samples, 0.30%)</title><rect x="40.9182%" y="613" width="0.2994%" height="15" fill="rgb(246,168,33)" fg:x="410" fg:w="3"/><text x="41.1682%" y="623.50"></text></g><g><title>check_stack_object (3 samples, 0.30%)</title><rect x="40.9182%" y="597" width="0.2994%" height="15" fill="rgb(231,114,1)" fg:x="410" fg:w="3"/><text x="41.1682%" y="607.50"></text></g><g><title>__x64_sys_writev (299 samples, 29.84%)</title><rect x="11.4770%" y="709" width="29.8403%" height="15" fill="rgb(207,184,53)" fg:x="115" fg:w="299"/><text x="11.7270%" y="719.50">__x64_sys_writev</text></g><g><title>do_writev (299 samples, 29.84%)</title><rect x="11.4770%" y="693" width="29.8403%" height="15" fill="rgb(224,95,51)" fg:x="115" fg:w="299"/><text x="11.7270%" y="703.50">do_writev</text></g><g><title>vfs_writev (294 samples, 29.34%)</title><rect x="11.9760%" y="677" width="29.3413%" height="15" fill="rgb(212,188,45)" fg:x="120" fg:w="294"/><text x="12.2260%" y="687.50">vfs_writev</text></g><g><title>import_iovec (4 samples, 0.40%)</title><rect x="40.9182%" y="661" width="0.3992%" height="15" fill="rgb(223,154,38)" fg:x="410" fg:w="4"/><text x="41.1682%" y="671.50"></text></g><g><title>__import_iovec (4 samples, 0.40%)</title><rect x="40.9182%" y="645" width="0.3992%" height="15" fill="rgb(251,22,52)" fg:x="410" fg:w="4"/><text x="41.1682%" y="655.50"></text></g><g><title>iovec_from_user.part.0 (4 samples, 0.40%)</title><rect x="40.9182%" y="629" width="0.3992%" height="15" fill="rgb(229,209,22)" fg:x="410" fg:w="4"/><text x="41.1682%" y="639.50"></text></g><g><title>copy_user_generic_unrolled (1 samples, 0.10%)</title><rect x="41.2176%" y="613" width="0.0998%" height="15" fill="rgb(234,138,34)" fg:x="413" fg:w="1"/><text x="41.4676%" y="623.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::{{closure}} (314 samples, 31.34%)</title><rect x="10.2794%" y="901" width="31.3373%" height="15" fill="rgb(212,95,11)" fg:x="103" fg:w="314"/><text x="10.5294%" y="911.50">tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (314 samples, 31.34%)</title><rect x="10.2794%" y="885" width="31.3373%" height="15" fill="rgb(240,179,47)" fg:x="103" fg:w="314"/><text x="10.5294%" y="895.50">&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Writ..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (314 samples, 31.34%)</title><rect x="10.2794%" y="869" width="31.3373%" height="15" fill="rgb(240,163,11)" fg:x="103" fg:w="314"/><text x="10.5294%" y="879.50">mio::io_source::IoSource&lt;T&gt;::do_io</text></g><g><title>mio::sys::unix::IoSourceState::do_io (314 samples, 31.34%)</title><rect x="10.2794%" y="853" width="31.3373%" height="15" fill="rgb(236,37,12)" fg:x="103" fg:w="314"/><text x="10.5294%" y="863.50">mio::sys::unix::IoSourceState::do_io</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::{{closure}} (314 samples, 31.34%)</title><rect x="10.2794%" y="837" width="31.3373%" height="15" fill="rgb(232,164,16)" fg:x="103" fg:w="314"/><text x="10.5294%" y="847.50">&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Writ..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (314 samples, 31.34%)</title><rect x="10.2794%" y="821" width="31.3373%" height="15" fill="rgb(244,205,15)" fg:x="103" fg:w="314"/><text x="10.5294%" y="831.50">&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::writ..</text></g><g><title>std::sys_common::net::TcpStream::write_vectored (314 samples, 31.34%)</title><rect x="10.2794%" y="805" width="31.3373%" height="15" fill="rgb(223,117,47)" fg:x="103" fg:w="314"/><text x="10.5294%" y="815.50">std::sys_common::net::TcpStream::write_vectored</text></g><g><title>std::sys::unix::net::Socket::write_vectored (314 samples, 31.34%)</title><rect x="10.2794%" y="789" width="31.3373%" height="15" fill="rgb(244,107,35)" fg:x="103" fg:w="314"/><text x="10.5294%" y="799.50">std::sys::unix::net::Socket::write_vectored</text></g><g><title>std::sys::unix::fd::FileDesc::write_vectored (314 samples, 31.34%)</title><rect x="10.2794%" y="773" width="31.3373%" height="15" fill="rgb(205,140,8)" fg:x="103" fg:w="314"/><text x="10.5294%" y="783.50">std::sys::unix::fd::FileDesc::write_vectored</text></g><g><title>writev (311 samples, 31.04%)</title><rect x="10.5788%" y="757" width="31.0379%" height="15" fill="rgb(228,84,46)" fg:x="106" fg:w="311"/><text x="10.8288%" y="767.50">writev</text></g><g><title>entry_SYSCALL_64_after_hwframe (305 samples, 30.44%)</title><rect x="11.1776%" y="741" width="30.4391%" height="15" fill="rgb(254,188,9)" fg:x="112" fg:w="305"/><text x="11.4276%" y="751.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (304 samples, 30.34%)</title><rect x="11.2774%" y="725" width="30.3393%" height="15" fill="rgb(206,112,54)" fg:x="113" fg:w="304"/><text x="11.5274%" y="735.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (3 samples, 0.30%)</title><rect x="41.3174%" y="709" width="0.2994%" height="15" fill="rgb(216,84,49)" fg:x="414" fg:w="3"/><text x="41.5674%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::io::IoDispatcher&gt;&gt; (2 samples, 0.20%)</title><rect x="41.7166%" y="869" width="0.1996%" height="15" fill="rgb(214,194,35)" fg:x="418" fg:w="2"/><text x="41.9666%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::io::IoDispatcher&gt;&gt; (2 samples, 0.20%)</title><rect x="41.7166%" y="853" width="0.1996%" height="15" fill="rgb(249,28,3)" fg:x="418" fg:w="2"/><text x="41.9666%" y="863.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="41.7166%" y="837" width="0.1996%" height="15" fill="rgb(222,56,52)" fg:x="418" fg:w="2"/><text x="41.9666%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.20%)</title><rect x="41.7166%" y="821" width="0.1996%" height="15" fill="rgb(245,217,50)" fg:x="418" fg:w="2"/><text x="41.9666%" y="831.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_flush (342 samples, 34.13%)</title><rect x="8.3832%" y="1045" width="34.1317%" height="15" fill="rgb(213,201,24)" fg:x="84" fg:w="342"/><text x="8.6332%" y="1055.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (339 samples, 33.83%)</title><rect x="8.6826%" y="1029" width="33.8323%" height="15" fill="rgb(248,116,28)" fg:x="87" fg:w="339"/><text x="8.9326%" y="1039.50">hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (335 samples, 33.43%)</title><rect x="9.0818%" y="1013" width="33.4331%" height="15" fill="rgb(219,72,43)" fg:x="91" fg:w="335"/><text x="9.3318%" y="1023.50">hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush</text></g><g><title>&lt;hyper::server::tcp::addr_stream::AddrStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (325 samples, 32.44%)</title><rect x="10.0798%" y="997" width="32.4351%" height="15" fill="rgb(209,138,14)" fg:x="101" fg:w="325"/><text x="10.3298%" y="1007.50">&lt;hyper::server::tcp::addr_stream::AddrStream as toki..</text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (325 samples, 32.44%)</title><rect x="10.0798%" y="981" width="32.4351%" height="15" fill="rgb(222,18,33)" fg:x="101" fg:w="325"/><text x="10.3298%" y="991.50">&lt;tokio::net::tcp::stream::TcpStream as tokio::io::as..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (323 samples, 32.24%)</title><rect x="10.2794%" y="965" width="32.2355%" height="15" fill="rgb(213,199,7)" fg:x="103" fg:w="323"/><text x="10.5294%" y="975.50">tokio::net::tcp::stream::TcpStream::poll_write_vecto..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (323 samples, 32.24%)</title><rect x="10.2794%" y="949" width="32.2355%" height="15" fill="rgb(250,110,10)" fg:x="103" fg:w="323"/><text x="10.5294%" y="959.50">tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (323 samples, 32.24%)</title><rect x="10.2794%" y="933" width="32.2355%" height="15" fill="rgb(248,123,6)" fg:x="103" fg:w="323"/><text x="10.5294%" y="943.50">tokio::runtime::io::registration::Registration::poll..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (323 samples, 32.24%)</title><rect x="10.2794%" y="917" width="32.2355%" height="15" fill="rgb(206,91,31)" fg:x="103" fg:w="323"/><text x="10.5294%" y="927.50">tokio::runtime::io::registration::Registration::poll..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (9 samples, 0.90%)</title><rect x="41.6168%" y="901" width="0.8982%" height="15" fill="rgb(211,154,13)" fg:x="417" fg:w="9"/><text x="41.8668%" y="911.50"></text></g><g><title>tokio::runtime::io::Inner::is_shutdown (8 samples, 0.80%)</title><rect x="41.7166%" y="885" width="0.7984%" height="15" fill="rgb(225,148,7)" fg:x="418" fg:w="8"/><text x="41.9666%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (6 samples, 0.60%)</title><rect x="41.9162%" y="869" width="0.5988%" height="15" fill="rgb(220,160,43)" fg:x="420" fg:w="6"/><text x="42.1662%" y="879.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.60%)</title><rect x="41.9162%" y="853" width="0.5988%" height="15" fill="rgb(213,52,39)" fg:x="420" fg:w="6"/><text x="42.1662%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.60%)</title><rect x="41.9162%" y="837" width="0.5988%" height="15" fill="rgb(243,137,7)" fg:x="420" fg:w="6"/><text x="42.1662%" y="847.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (6 samples, 0.60%)</title><rect x="41.9162%" y="821" width="0.5988%" height="15" fill="rgb(230,79,13)" fg:x="420" fg:w="6"/><text x="42.1662%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.10%)</title><rect x="42.5150%" y="1029" width="0.0998%" height="15" fill="rgb(247,105,23)" fg:x="426" fg:w="1"/><text x="42.7650%" y="1039.50"></text></g><g><title>core::mem::replace (1 samples, 0.10%)</title><rect x="42.5150%" y="1013" width="0.0998%" height="15" fill="rgb(223,179,41)" fg:x="426" fg:w="1"/><text x="42.7650%" y="1023.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::is_read_closed (1 samples, 0.10%)</title><rect x="42.6148%" y="1013" width="0.0998%" height="15" fill="rgb(218,9,34)" fg:x="427" fg:w="1"/><text x="42.8648%" y="1023.50"></text></g><g><title>hyper::proto::h1::conn::State::is_read_closed (1 samples, 0.10%)</title><rect x="42.6148%" y="997" width="0.0998%" height="15" fill="rgb(222,106,8)" fg:x="427" fg:w="1"/><text x="42.8648%" y="1007.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (1 samples, 0.10%)</title><rect x="43.1138%" y="965" width="0.0998%" height="15" fill="rgb(211,220,0)" fg:x="432" fg:w="1"/><text x="43.3638%" y="975.50"></text></g><g><title>tokio::coop::poll_proceed (1 samples, 0.10%)</title><rect x="43.2136%" y="901" width="0.0998%" height="15" fill="rgb(229,52,16)" fg:x="433" fg:w="1"/><text x="43.4636%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.10%)</title><rect x="43.2136%" y="885" width="0.0998%" height="15" fill="rgb(212,155,18)" fg:x="433" fg:w="1"/><text x="43.4636%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.10%)</title><rect x="43.2136%" y="869" width="0.0998%" height="15" fill="rgb(242,21,14)" fg:x="433" fg:w="1"/><text x="43.4636%" y="879.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.10%)</title><rect x="43.2136%" y="853" width="0.0998%" height="15" fill="rgb(222,19,48)" fg:x="433" fg:w="1"/><text x="43.4636%" y="863.50"></text></g><g><title>&lt;hyper::server::tcp::addr_stream::AddrStream as tokio::io::async_read::AsyncRead&gt;::poll_read (7 samples, 0.70%)</title><rect x="43.2136%" y="965" width="0.6986%" height="15" fill="rgb(232,45,27)" fg:x="433" fg:w="7"/><text x="43.4636%" y="975.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (7 samples, 0.70%)</title><rect x="43.2136%" y="949" width="0.6986%" height="15" fill="rgb(249,103,42)" fg:x="433" fg:w="7"/><text x="43.4636%" y="959.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (7 samples, 0.70%)</title><rect x="43.2136%" y="933" width="0.6986%" height="15" fill="rgb(246,81,33)" fg:x="433" fg:w="7"/><text x="43.4636%" y="943.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (7 samples, 0.70%)</title><rect x="43.2136%" y="917" width="0.6986%" height="15" fill="rgb(252,33,42)" fg:x="433" fg:w="7"/><text x="43.4636%" y="927.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (6 samples, 0.60%)</title><rect x="43.3134%" y="901" width="0.5988%" height="15" fill="rgb(209,212,41)" fg:x="434" fg:w="6"/><text x="43.5634%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.20%)</title><rect x="43.7126%" y="885" width="0.1996%" height="15" fill="rgb(207,154,6)" fg:x="438" fg:w="2"/><text x="43.9626%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.20%)</title><rect x="43.7126%" y="869" width="0.1996%" height="15" fill="rgb(223,64,47)" fg:x="438" fg:w="2"/><text x="43.9626%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.20%)</title><rect x="43.7126%" y="853" width="0.1996%" height="15" fill="rgb(211,161,38)" fg:x="438" fg:w="2"/><text x="43.9626%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.20%)</title><rect x="43.7126%" y="837" width="0.1996%" height="15" fill="rgb(219,138,40)" fg:x="438" fg:w="2"/><text x="43.9626%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.20%)</title><rect x="43.7126%" y="821" width="0.1996%" height="15" fill="rgb(241,228,46)" fg:x="438" fg:w="2"/><text x="43.9626%" y="831.50"></text></g><g><title>alloc_pages_vma (1 samples, 0.10%)</title><rect x="45.7086%" y="661" width="0.0998%" height="15" fill="rgb(223,209,38)" fg:x="458" fg:w="1"/><text x="45.9586%" y="671.50"></text></g><g><title>__alloc_pages (1 samples, 0.10%)</title><rect x="45.7086%" y="645" width="0.0998%" height="15" fill="rgb(236,164,45)" fg:x="458" fg:w="1"/><text x="45.9586%" y="655.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.10%)</title><rect x="45.7086%" y="629" width="0.0998%" height="15" fill="rgb(231,15,5)" fg:x="458" fg:w="1"/><text x="45.9586%" y="639.50"></text></g><g><title>rmqueue (1 samples, 0.10%)</title><rect x="45.7086%" y="613" width="0.0998%" height="15" fill="rgb(252,35,15)" fg:x="458" fg:w="1"/><text x="45.9586%" y="623.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="773" width="0.1996%" height="15" fill="rgb(248,181,18)" fg:x="458" fg:w="2"/><text x="45.9586%" y="783.50"></text></g><g><title>exc_page_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="757" width="0.1996%" height="15" fill="rgb(233,39,42)" fg:x="458" fg:w="2"/><text x="45.9586%" y="767.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="741" width="0.1996%" height="15" fill="rgb(238,110,33)" fg:x="458" fg:w="2"/><text x="45.9586%" y="751.50"></text></g><g><title>handle_mm_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="725" width="0.1996%" height="15" fill="rgb(233,195,10)" fg:x="458" fg:w="2"/><text x="45.9586%" y="735.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="709" width="0.1996%" height="15" fill="rgb(254,105,3)" fg:x="458" fg:w="2"/><text x="45.9586%" y="719.50"></text></g><g><title>handle_pte_fault (2 samples, 0.20%)</title><rect x="45.7086%" y="693" width="0.1996%" height="15" fill="rgb(221,225,9)" fg:x="458" fg:w="2"/><text x="45.9586%" y="703.50"></text></g><g><title>do_anonymous_page (2 samples, 0.20%)</title><rect x="45.7086%" y="677" width="0.1996%" height="15" fill="rgb(224,227,45)" fg:x="458" fg:w="2"/><text x="45.9586%" y="687.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.10%)</title><rect x="45.8084%" y="661" width="0.0998%" height="15" fill="rgb(229,198,43)" fg:x="459" fg:w="1"/><text x="46.0584%" y="671.50"></text></g><g><title>lru_cache_add (1 samples, 0.10%)</title><rect x="45.8084%" y="645" width="0.0998%" height="15" fill="rgb(206,209,35)" fg:x="459" fg:w="1"/><text x="46.0584%" y="655.50"></text></g><g><title>[libc.so.6] (11 samples, 1.10%)</title><rect x="45.0100%" y="805" width="1.0978%" height="15" fill="rgb(245,195,53)" fg:x="451" fg:w="11"/><text x="45.2600%" y="815.50"></text></g><g><title>[libc.so.6] (5 samples, 0.50%)</title><rect x="45.6088%" y="789" width="0.4990%" height="15" fill="rgb(240,92,26)" fg:x="457" fg:w="5"/><text x="45.8588%" y="799.50"></text></g><g><title>mprotect (2 samples, 0.20%)</title><rect x="45.9082%" y="773" width="0.1996%" height="15" fill="rgb(207,40,23)" fg:x="460" fg:w="2"/><text x="46.1582%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.20%)</title><rect x="45.9082%" y="757" width="0.1996%" height="15" fill="rgb(223,111,35)" fg:x="460" fg:w="2"/><text x="46.1582%" y="767.50"></text></g><g><title>do_syscall_64 (2 samples, 0.20%)</title><rect x="45.9082%" y="741" width="0.1996%" height="15" fill="rgb(229,147,28)" fg:x="460" fg:w="2"/><text x="46.1582%" y="751.50"></text></g><g><title>__x64_sys_mprotect (2 samples, 0.20%)</title><rect x="45.9082%" y="725" width="0.1996%" height="15" fill="rgb(211,29,28)" fg:x="460" fg:w="2"/><text x="46.1582%" y="735.50"></text></g><g><title>do_mprotect_pkey (2 samples, 0.20%)</title><rect x="45.9082%" y="709" width="0.1996%" height="15" fill="rgb(228,72,33)" fg:x="460" fg:w="2"/><text x="46.1582%" y="719.50"></text></g><g><title>find_vma (1 samples, 0.10%)</title><rect x="46.0080%" y="693" width="0.0998%" height="15" fill="rgb(205,214,31)" fg:x="461" fg:w="1"/><text x="46.2580%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 2.30%)</title><rect x="43.9122%" y="933" width="2.2954%" height="15" fill="rgb(224,111,15)" fg:x="440" fg:w="23"/><text x="44.1622%" y="943.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 2.30%)</title><rect x="43.9122%" y="917" width="2.2954%" height="15" fill="rgb(253,21,26)" fg:x="440" fg:w="23"/><text x="44.1622%" y="927.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 2.30%)</title><rect x="43.9122%" y="901" width="2.2954%" height="15" fill="rgb(245,139,43)" fg:x="440" fg:w="23"/><text x="44.1622%" y="911.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 2.30%)</title><rect x="43.9122%" y="885" width="2.2954%" height="15" fill="rgb(252,170,7)" fg:x="440" fg:w="23"/><text x="44.1622%" y="895.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 2.30%)</title><rect x="43.9122%" y="869" width="2.2954%" height="15" fill="rgb(231,118,14)" fg:x="440" fg:w="23"/><text x="44.1622%" y="879.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 2.30%)</title><rect x="43.9122%" y="853" width="2.2954%" height="15" fill="rgb(238,83,0)" fg:x="440" fg:w="23"/><text x="44.1622%" y="863.50">a..</text></g><g><title>alloc::alloc::alloc (23 samples, 2.30%)</title><rect x="43.9122%" y="837" width="2.2954%" height="15" fill="rgb(221,39,39)" fg:x="440" fg:w="23"/><text x="44.1622%" y="847.50">a..</text></g><g><title>malloc (23 samples, 2.30%)</title><rect x="43.9122%" y="821" width="2.2954%" height="15" fill="rgb(222,119,46)" fg:x="440" fg:w="23"/><text x="44.1622%" y="831.50">m..</text></g><g><title>__lll_lock_wake_private (1 samples, 0.10%)</title><rect x="46.1078%" y="805" width="0.0998%" height="15" fill="rgb(222,165,49)" fg:x="462" fg:w="1"/><text x="46.3578%" y="815.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.10%)</title><rect x="46.1078%" y="789" width="0.0998%" height="15" fill="rgb(219,113,52)" fg:x="462" fg:w="1"/><text x="46.3578%" y="799.50"></text></g><g><title>do_syscall_64 (1 samples, 0.10%)</title><rect x="46.1078%" y="773" width="0.0998%" height="15" fill="rgb(214,7,15)" fg:x="462" fg:w="1"/><text x="46.3578%" y="783.50"></text></g><g><title>__x64_sys_futex (1 samples, 0.10%)</title><rect x="46.1078%" y="757" width="0.0998%" height="15" fill="rgb(235,32,4)" fg:x="462" fg:w="1"/><text x="46.3578%" y="767.50"></text></g><g><title>do_futex (1 samples, 0.10%)</title><rect x="46.1078%" y="741" width="0.0998%" height="15" fill="rgb(238,90,54)" fg:x="462" fg:w="1"/><text x="46.3578%" y="751.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::mid_message_detect_eof (36 samples, 3.59%)</title><rect x="42.7146%" y="1013" width="3.5928%" height="15" fill="rgb(213,208,19)" fg:x="428" fg:w="36"/><text x="42.9646%" y="1023.50">hype..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (35 samples, 3.49%)</title><rect x="42.8144%" y="997" width="3.4930%" height="15" fill="rgb(233,156,4)" fg:x="429" fg:w="35"/><text x="43.0644%" y="1007.50">hyp..</text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (34 samples, 3.39%)</title><rect x="42.9142%" y="981" width="3.3932%" height="15" fill="rgb(207,194,5)" fg:x="430" fg:w="34"/><text x="43.1642%" y="991.50">hyp..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve (24 samples, 2.40%)</title><rect x="43.9122%" y="965" width="2.3952%" height="15" fill="rgb(206,111,30)" fg:x="440" fg:w="24"/><text x="44.1622%" y="975.50">by..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (24 samples, 2.40%)</title><rect x="43.9122%" y="949" width="2.3952%" height="15" fill="rgb(243,70,54)" fg:x="440" fg:w="24"/><text x="44.1622%" y="959.50">by..</text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.10%)</title><rect x="46.2076%" y="933" width="0.0998%" height="15" fill="rgb(242,28,8)" fg:x="463" fg:w="1"/><text x="46.4576%" y="943.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (38 samples, 3.79%)</title><rect x="42.6148%" y="1029" width="3.7924%" height="15" fill="rgb(219,106,18)" fg:x="427" fg:w="38"/><text x="42.8648%" y="1039.50">hype..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::require_empty_read (1 samples, 0.10%)</title><rect x="46.3074%" y="1013" width="0.0998%" height="15" fill="rgb(244,222,10)" fg:x="464" fg:w="1"/><text x="46.5574%" y="1023.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_ready (3 samples, 0.30%)</title><rect x="46.6068%" y="1013" width="0.2994%" height="15" fill="rgb(236,179,52)" fg:x="467" fg:w="3"/><text x="46.8568%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.10%)</title><rect x="46.8064%" y="997" width="0.0998%" height="15" fill="rgb(213,23,39)" fg:x="469" fg:w="1"/><text x="47.0564%" y="1007.50"></text></g><g><title>&lt;http::uri::Uri as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.1058%" y="965" width="0.0998%" height="15" fill="rgb(238,48,10)" fg:x="472" fg:w="1"/><text x="47.3558%" y="975.50"></text></g><g><title>&lt;http::uri::path::PathAndQuery as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.1058%" y="949" width="0.0998%" height="15" fill="rgb(251,196,23)" fg:x="472" fg:w="1"/><text x="47.3558%" y="959.50"></text></g><g><title>&lt;http::byte_str::ByteStr as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.1058%" y="933" width="0.0998%" height="15" fill="rgb(250,152,24)" fg:x="472" fg:w="1"/><text x="47.3558%" y="943.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="47.1058%" y="917" width="0.0998%" height="15" fill="rgb(209,150,17)" fg:x="472" fg:w="1"/><text x="47.3558%" y="927.50"></text></g><g><title>bytes::bytes::static_clone (1 samples, 0.10%)</title><rect x="47.1058%" y="901" width="0.0998%" height="15" fill="rgb(234,202,34)" fg:x="472" fg:w="1"/><text x="47.3558%" y="911.50"></text></g><g><title>bytes::bytes::Bytes::from_static (1 samples, 0.10%)</title><rect x="47.1058%" y="885" width="0.0998%" height="15" fill="rgb(253,148,53)" fg:x="472" fg:w="1"/><text x="47.3558%" y="895.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.10%)</title><rect x="47.2056%" y="965" width="0.0998%" height="15" fill="rgb(218,129,16)" fg:x="473" fg:w="1"/><text x="47.4556%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.10%)</title><rect x="47.2056%" y="949" width="0.0998%" height="15" fill="rgb(216,85,19)" fg:x="473" fg:w="1"/><text x="47.4556%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="47.2056%" y="933" width="0.0998%" height="15" fill="rgb(235,228,7)" fg:x="473" fg:w="1"/><text x="47.4556%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="47.2056%" y="917" width="0.0998%" height="15" fill="rgb(245,175,0)" fg:x="473" fg:w="1"/><text x="47.4556%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="47.2056%" y="901" width="0.0998%" height="15" fill="rgb(208,168,36)" fg:x="473" fg:w="1"/><text x="47.4556%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="47.2056%" y="885" width="0.0998%" height="15" fill="rgb(246,171,24)" fg:x="473" fg:w="1"/><text x="47.4556%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="47.2056%" y="869" width="0.0998%" height="15" fill="rgb(215,142,24)" fg:x="473" fg:w="1"/><text x="47.4556%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="47.2056%" y="853" width="0.0998%" height="15" fill="rgb(250,187,7)" fg:x="473" fg:w="1"/><text x="47.4556%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="47.2056%" y="837" width="0.0998%" height="15" fill="rgb(228,66,33)" fg:x="473" fg:w="1"/><text x="47.4556%" y="847.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for &amp;[T]&gt;::eq (5 samples, 0.50%)</title><rect x="47.5050%" y="917" width="0.4990%" height="15" fill="rgb(234,215,21)" fg:x="476" fg:w="5"/><text x="47.7550%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.50%)</title><rect x="47.5050%" y="901" width="0.4990%" height="15" fill="rgb(222,191,20)" fg:x="476" fg:w="5"/><text x="47.7550%" y="911.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.50%)</title><rect x="47.5050%" y="885" width="0.4990%" height="15" fill="rgb(245,79,54)" fg:x="476" fg:w="5"/><text x="47.7550%" y="895.50"></text></g><g><title>[libc.so.6] (5 samples, 0.50%)</title><rect x="47.5050%" y="869" width="0.4990%" height="15" fill="rgb(240,10,37)" fg:x="476" fg:w="5"/><text x="47.7550%" y="879.50"></text></g><g><title>axum::routing::Node::at (8 samples, 0.80%)</title><rect x="47.3054%" y="965" width="0.7984%" height="15" fill="rgb(214,192,32)" fg:x="474" fg:w="8"/><text x="47.5554%" y="975.50"></text></g><g><title>matchit::router::Router&lt;T&gt;::at (7 samples, 0.70%)</title><rect x="47.4052%" y="949" width="0.6986%" height="15" fill="rgb(209,36,54)" fg:x="475" fg:w="7"/><text x="47.6552%" y="959.50"></text></g><g><title>matchit::tree::Node&lt;T&gt;::at (7 samples, 0.70%)</title><rect x="47.4052%" y="933" width="0.6986%" height="15" fill="rgb(220,10,11)" fg:x="475" fg:w="7"/><text x="47.6552%" y="943.50"></text></g><g><title>matchit::params::Params::new (1 samples, 0.10%)</title><rect x="48.0040%" y="917" width="0.0998%" height="15" fill="rgb(221,106,17)" fg:x="481" fg:w="1"/><text x="48.2540%" y="927.50"></text></g><g><title>&lt;axum::routing::method_routing::AllowHeader as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="48.3034%" y="917" width="0.1996%" height="15" fill="rgb(251,142,44)" fg:x="484" fg:w="2"/><text x="48.5534%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::clone::Clone&gt;::clone (2 samples, 0.20%)</title><rect x="48.3034%" y="901" width="0.1996%" height="15" fill="rgb(238,13,15)" fg:x="484" fg:w="2"/><text x="48.5534%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (1 samples, 0.10%)</title><rect x="48.4032%" y="885" width="0.0998%" height="15" fill="rgb(208,107,27)" fg:x="485" fg:w="1"/><text x="48.6532%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.4032%" y="869" width="0.0998%" height="15" fill="rgb(205,136,37)" fg:x="485" fg:w="1"/><text x="48.6532%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="48.4032%" y="853" width="0.0998%" height="15" fill="rgb(250,205,27)" fg:x="485" fg:w="1"/><text x="48.6532%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="48.4032%" y="837" width="0.0998%" height="15" fill="rgb(210,80,43)" fg:x="485" fg:w="1"/><text x="48.6532%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="48.4032%" y="821" width="0.0998%" height="15" fill="rgb(247,160,36)" fg:x="485" fg:w="1"/><text x="48.6532%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.4032%" y="805" width="0.0998%" height="15" fill="rgb(234,13,49)" fg:x="485" fg:w="1"/><text x="48.6532%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="48.4032%" y="789" width="0.0998%" height="15" fill="rgb(234,122,0)" fg:x="485" fg:w="1"/><text x="48.6532%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="48.4032%" y="773" width="0.0998%" height="15" fill="rgb(207,146,38)" fg:x="485" fg:w="1"/><text x="48.6532%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="48.4032%" y="757" width="0.0998%" height="15" fill="rgb(207,177,25)" fg:x="485" fg:w="1"/><text x="48.6532%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="48.4032%" y="741" width="0.0998%" height="15" fill="rgb(211,178,42)" fg:x="485" fg:w="1"/><text x="48.6532%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="48.4032%" y="725" width="0.0998%" height="15" fill="rgb(230,69,54)" fg:x="485" fg:w="1"/><text x="48.6532%" y="735.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="48.4032%" y="709" width="0.0998%" height="15" fill="rgb(214,135,41)" fg:x="485" fg:w="1"/><text x="48.6532%" y="719.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="48.2036%" y="933" width="0.3992%" height="15" fill="rgb(237,67,25)" fg:x="483" fg:w="4"/><text x="48.4536%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="48.5030%" y="917" width="0.0998%" height="15" fill="rgb(222,189,50)" fg:x="486" fg:w="1"/><text x="48.7530%" y="927.50"></text></g><g><title>&lt;axum::routing::Endpoint&lt;B&gt; as core::clone::Clone&gt;::clone (7 samples, 0.70%)</title><rect x="48.1038%" y="949" width="0.6986%" height="15" fill="rgb(245,148,34)" fg:x="482" fg:w="7"/><text x="48.3538%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.20%)</title><rect x="48.6028%" y="933" width="0.1996%" height="15" fill="rgb(222,29,6)" fg:x="487" fg:w="2"/><text x="48.8528%" y="943.50"></text></g><g><title>&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (2 samples, 0.20%)</title><rect x="48.8024%" y="949" width="0.1996%" height="15" fill="rgb(221,189,43)" fg:x="489" fg:w="2"/><text x="49.0524%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="48.9022%" y="933" width="0.0998%" height="15" fill="rgb(207,36,27)" fg:x="490" fg:w="1"/><text x="49.1522%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.40%)</title><rect x="49.0020%" y="933" width="0.3992%" height="15" fill="rgb(217,90,24)" fg:x="491" fg:w="4"/><text x="49.2520%" y="943.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.10%)</title><rect x="49.4012%" y="933" width="0.0998%" height="15" fill="rgb(224,66,35)" fg:x="495" fg:w="1"/><text x="49.6512%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="49.4012%" y="917" width="0.0998%" height="15" fill="rgb(221,13,50)" fg:x="495" fg:w="1"/><text x="49.6512%" y="927.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.10%)</title><rect x="49.5010%" y="933" width="0.0998%" height="15" fill="rgb(236,68,49)" fg:x="496" fg:w="1"/><text x="49.7510%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.10%)</title><rect x="49.5010%" y="917" width="0.0998%" height="15" fill="rgb(229,146,28)" fg:x="496" fg:w="1"/><text x="49.7510%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.10%)</title><rect x="49.5010%" y="901" width="0.0998%" height="15" fill="rgb(225,31,38)" fg:x="496" fg:w="1"/><text x="49.7510%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.10%)</title><rect x="49.5010%" y="885" width="0.0998%" height="15" fill="rgb(250,208,3)" fg:x="496" fg:w="1"/><text x="49.7510%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="49.6008%" y="885" width="0.0998%" height="15" fill="rgb(246,54,23)" fg:x="497" fg:w="1"/><text x="49.8508%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="49.6008%" y="869" width="0.0998%" height="15" fill="rgb(243,76,11)" fg:x="497" fg:w="1"/><text x="49.8508%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.10%)</title><rect x="49.6008%" y="853" width="0.0998%" height="15" fill="rgb(245,21,50)" fg:x="497" fg:w="1"/><text x="49.8508%" y="863.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="49.6008%" y="837" width="0.0998%" height="15" fill="rgb(228,9,43)" fg:x="497" fg:w="1"/><text x="49.8508%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.10%)</title><rect x="49.6008%" y="821" width="0.0998%" height="15" fill="rgb(208,100,47)" fg:x="497" fg:w="1"/><text x="49.8508%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.10%)</title><rect x="49.6008%" y="805" width="0.0998%" height="15" fill="rgb(232,26,8)" fg:x="497" fg:w="1"/><text x="49.8508%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="49.6008%" y="789" width="0.0998%" height="15" fill="rgb(216,166,38)" fg:x="497" fg:w="1"/><text x="49.8508%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="49.6008%" y="773" width="0.0998%" height="15" fill="rgb(251,202,51)" fg:x="497" fg:w="1"/><text x="49.8508%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="49.6008%" y="757" width="0.0998%" height="15" fill="rgb(254,216,34)" fg:x="497" fg:w="1"/><text x="49.8508%" y="767.50"></text></g><g><title>axum::routing::Router&lt;B&gt;::call_route::set_matched_path (11 samples, 1.10%)</title><rect x="49.0020%" y="949" width="1.0978%" height="15" fill="rgb(251,32,27)" fg:x="491" fg:w="11"/><text x="49.2520%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.50%)</title><rect x="49.6008%" y="933" width="0.4990%" height="15" fill="rgb(208,127,28)" fg:x="497" fg:w="5"/><text x="49.8508%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.50%)</title><rect x="49.6008%" y="917" width="0.4990%" height="15" fill="rgb(224,137,22)" fg:x="497" fg:w="5"/><text x="49.8508%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.50%)</title><rect x="49.6008%" y="901" width="0.4990%" height="15" fill="rgb(254,70,32)" fg:x="497" fg:w="5"/><text x="49.8508%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.40%)</title><rect x="49.7006%" y="885" width="0.3992%" height="15" fill="rgb(229,75,37)" fg:x="498" fg:w="4"/><text x="49.9506%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.40%)</title><rect x="49.7006%" y="869" width="0.3992%" height="15" fill="rgb(252,64,23)" fg:x="498" fg:w="4"/><text x="49.9506%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.40%)</title><rect x="49.7006%" y="853" width="0.3992%" height="15" fill="rgb(232,162,48)" fg:x="498" fg:w="4"/><text x="49.9506%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.20%)</title><rect x="50.2994%" y="933" width="0.1996%" height="15" fill="rgb(246,160,12)" fg:x="504" fg:w="2"/><text x="50.5494%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2 samples, 0.20%)</title><rect x="50.2994%" y="917" width="0.1996%" height="15" fill="rgb(247,166,0)" fg:x="504" fg:w="2"/><text x="50.5494%" y="927.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.20%)</title><rect x="50.2994%" y="901" width="0.1996%" height="15" fill="rgb(249,219,21)" fg:x="504" fg:w="2"/><text x="50.5494%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.10%)</title><rect x="50.3992%" y="885" width="0.0998%" height="15" fill="rgb(205,209,3)" fg:x="505" fg:w="1"/><text x="50.6492%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="50.3992%" y="869" width="0.0998%" height="15" fill="rgb(243,44,1)" fg:x="505" fg:w="1"/><text x="50.6492%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="50.3992%" y="853" width="0.0998%" height="15" fill="rgb(206,159,16)" fg:x="505" fg:w="1"/><text x="50.6492%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="50.3992%" y="837" width="0.0998%" height="15" fill="rgb(244,77,30)" fg:x="505" fg:w="1"/><text x="50.6492%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="50.3992%" y="821" width="0.0998%" height="15" fill="rgb(218,69,12)" fg:x="505" fg:w="1"/><text x="50.6492%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="50.3992%" y="805" width="0.0998%" height="15" fill="rgb(212,87,7)" fg:x="505" fg:w="1"/><text x="50.6492%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="50.3992%" y="789" width="0.0998%" height="15" fill="rgb(245,114,25)" fg:x="505" fg:w="1"/><text x="50.6492%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="50.3992%" y="773" width="0.0998%" height="15" fill="rgb(210,61,42)" fg:x="505" fg:w="1"/><text x="50.6492%" y="783.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (1 samples, 0.10%)</title><rect x="50.3992%" y="757" width="0.0998%" height="15" fill="rgb(211,52,33)" fg:x="505" fg:w="1"/><text x="50.6492%" y="767.50"></text></g><g><title>http::extensions::Extensions::get_mut (1 samples, 0.10%)</title><rect x="50.4990%" y="933" width="0.0998%" height="15" fill="rgb(234,58,33)" fg:x="506" fg:w="1"/><text x="50.7490%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.10%)</title><rect x="50.4990%" y="917" width="0.0998%" height="15" fill="rgb(220,115,36)" fg:x="506" fg:w="1"/><text x="50.7490%" y="927.50"></text></g><g><title>http::extensions::Extensions::get_mut::{{closure}} (1 samples, 0.10%)</title><rect x="50.4990%" y="901" width="0.0998%" height="15" fill="rgb(243,153,54)" fg:x="506" fg:w="1"/><text x="50.7490%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.10%)</title><rect x="50.4990%" y="885" width="0.0998%" height="15" fill="rgb(251,47,18)" fg:x="506" fg:w="1"/><text x="50.7490%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="50.4990%" y="869" width="0.0998%" height="15" fill="rgb(242,102,42)" fg:x="506" fg:w="1"/><text x="50.7490%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.10%)</title><rect x="50.4990%" y="853" width="0.0998%" height="15" fill="rgb(234,31,38)" fg:x="506" fg:w="1"/><text x="50.7490%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="50.4990%" y="837" width="0.0998%" height="15" fill="rgb(221,117,51)" fg:x="506" fg:w="1"/><text x="50.7490%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="50.4990%" y="821" width="0.0998%" height="15" fill="rgb(212,20,18)" fg:x="506" fg:w="1"/><text x="50.7490%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="50.4990%" y="805" width="0.0998%" height="15" fill="rgb(245,133,36)" fg:x="506" fg:w="1"/><text x="50.7490%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.10%)</title><rect x="50.4990%" y="789" width="0.0998%" height="15" fill="rgb(212,6,19)" fg:x="506" fg:w="1"/><text x="50.7490%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.10%)</title><rect x="50.4990%" y="773" width="0.0998%" height="15" fill="rgb(218,1,36)" fg:x="506" fg:w="1"/><text x="50.7490%" y="783.50"></text></g><g><title>axum::routing::url_params::insert_url_params (6 samples, 0.60%)</title><rect x="50.0998%" y="949" width="0.5988%" height="15" fill="rgb(246,84,54)" fg:x="502" fg:w="6"/><text x="50.3498%" y="959.50"></text></g><g><title>http::extensions::Extensions::insert (1 samples, 0.10%)</title><rect x="50.5988%" y="933" width="0.0998%" height="15" fill="rgb(242,110,6)" fg:x="507" fg:w="1"/><text x="50.8488%" y="943.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="50.6986%" y="933" width="0.1996%" height="15" fill="rgb(214,47,5)" fg:x="508" fg:w="2"/><text x="50.9486%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::Endpoint&lt;hyper::body::body::Body&gt;&gt; (3 samples, 0.30%)</title><rect x="50.6986%" y="949" width="0.2994%" height="15" fill="rgb(218,159,25)" fg:x="508" fg:w="3"/><text x="50.9486%" y="959.50"></text></g><g><title>free (1 samples, 0.10%)</title><rect x="50.8982%" y="933" width="0.0998%" height="15" fill="rgb(215,211,28)" fg:x="510" fg:w="1"/><text x="51.1482%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="50.8982%" y="917" width="0.0998%" height="15" fill="rgb(238,59,32)" fg:x="510" fg:w="1"/><text x="51.1482%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.10%)</title><rect x="50.9980%" y="901" width="0.0998%" height="15" fill="rgb(226,82,3)" fg:x="511" fg:w="1"/><text x="51.2480%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.10%)</title><rect x="50.9980%" y="885" width="0.0998%" height="15" fill="rgb(240,164,32)" fg:x="511" fg:w="1"/><text x="51.2480%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.10%)</title><rect x="50.9980%" y="869" width="0.0998%" height="15" fill="rgb(232,46,7)" fg:x="511" fg:w="1"/><text x="51.2480%" y="879.50"></text></g><g><title>&lt;axum::routing::RouteId as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="50.9980%" y="853" width="0.0998%" height="15" fill="rgb(229,129,53)" fg:x="511" fg:w="1"/><text x="51.2480%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.10%)</title><rect x="50.9980%" y="837" width="0.0998%" height="15" fill="rgb(234,188,29)" fg:x="511" fg:w="1"/><text x="51.2480%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.10%)</title><rect x="50.9980%" y="821" width="0.0998%" height="15" fill="rgb(246,141,4)" fg:x="511" fg:w="1"/><text x="51.2480%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="50.9980%" y="805" width="0.0998%" height="15" fill="rgb(229,23,39)" fg:x="511" fg:w="1"/><text x="51.2480%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="50.9980%" y="789" width="0.0998%" height="15" fill="rgb(206,12,3)" fg:x="511" fg:w="1"/><text x="51.2480%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="50.9980%" y="773" width="0.0998%" height="15" fill="rgb(252,226,20)" fg:x="511" fg:w="1"/><text x="51.2480%" y="783.50"></text></g><g><title>axum::routing::Router&lt;B&gt;::call_route (32 samples, 3.19%)</title><rect x="48.1038%" y="965" width="3.1936%" height="15" fill="rgb(216,123,35)" fg:x="482" fg:w="32"/><text x="48.3538%" y="975.50">axu..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.30%)</title><rect x="50.9980%" y="949" width="0.2994%" height="15" fill="rgb(212,68,40)" fg:x="511" fg:w="3"/><text x="51.2480%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.30%)</title><rect x="50.9980%" y="933" width="0.2994%" height="15" fill="rgb(254,125,32)" fg:x="511" fg:w="3"/><text x="51.2480%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.30%)</title><rect x="50.9980%" y="917" width="0.2994%" height="15" fill="rgb(253,97,22)" fg:x="511" fg:w="3"/><text x="51.2480%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.20%)</title><rect x="51.0978%" y="901" width="0.1996%" height="15" fill="rgb(241,101,14)" fg:x="512" fg:w="2"/><text x="51.3478%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.20%)</title><rect x="51.0978%" y="885" width="0.1996%" height="15" fill="rgb(238,103,29)" fg:x="512" fg:w="2"/><text x="51.3478%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.20%)</title><rect x="51.0978%" y="869" width="0.1996%" height="15" fill="rgb(233,195,47)" fg:x="512" fg:w="2"/><text x="51.3478%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.10%)</title><rect x="51.1976%" y="853" width="0.0998%" height="15" fill="rgb(246,218,30)" fg:x="513" fg:w="1"/><text x="51.4476%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.10%)</title><rect x="51.1976%" y="837" width="0.0998%" height="15" fill="rgb(219,145,47)" fg:x="513" fg:w="1"/><text x="51.4476%" y="847.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="51.2974%" y="869" width="0.0998%" height="15" fill="rgb(243,12,26)" fg:x="514" fg:w="1"/><text x="51.5474%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.20%)</title><rect x="51.2974%" y="965" width="0.1996%" height="15" fill="rgb(214,87,16)" fg:x="514" fg:w="2"/><text x="51.5474%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.20%)</title><rect x="51.2974%" y="949" width="0.1996%" height="15" fill="rgb(208,99,42)" fg:x="514" fg:w="2"/><text x="51.5474%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.20%)</title><rect x="51.2974%" y="933" width="0.1996%" height="15" fill="rgb(253,99,2)" fg:x="514" fg:w="2"/><text x="51.5474%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="51.2974%" y="917" width="0.1996%" height="15" fill="rgb(220,168,23)" fg:x="514" fg:w="2"/><text x="51.5474%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.20%)</title><rect x="51.2974%" y="901" width="0.1996%" height="15" fill="rgb(242,38,24)" fg:x="514" fg:w="2"/><text x="51.5474%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.20%)</title><rect x="51.2974%" y="885" width="0.1996%" height="15" fill="rgb(225,182,9)" fg:x="514" fg:w="2"/><text x="51.5474%" y="895.50"></text></g><g><title>free (1 samples, 0.10%)</title><rect x="51.3972%" y="869" width="0.0998%" height="15" fill="rgb(243,178,37)" fg:x="515" fg:w="1"/><text x="51.6472%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="51.3972%" y="853" width="0.0998%" height="15" fill="rgb(232,139,19)" fg:x="515" fg:w="1"/><text x="51.6472%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (2 samples, 0.20%)</title><rect x="51.4970%" y="949" width="0.1996%" height="15" fill="rgb(225,201,24)" fg:x="516" fg:w="2"/><text x="51.7470%" y="959.50"></text></g><g><title>http::extensions::Extensions::insert::{{closure}} (2 samples, 0.20%)</title><rect x="51.4970%" y="933" width="0.1996%" height="15" fill="rgb(221,47,46)" fg:x="516" fg:w="2"/><text x="51.7470%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.20%)</title><rect x="51.4970%" y="917" width="0.1996%" height="15" fill="rgb(249,23,13)" fg:x="516" fg:w="2"/><text x="51.7470%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="51.5968%" y="901" width="0.0998%" height="15" fill="rgb(219,9,5)" fg:x="517" fg:w="1"/><text x="51.8468%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="51.5968%" y="885" width="0.0998%" height="15" fill="rgb(254,171,16)" fg:x="517" fg:w="1"/><text x="51.8468%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="51.5968%" y="869" width="0.0998%" height="15" fill="rgb(230,171,20)" fg:x="517" fg:w="1"/><text x="51.8468%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="51.5968%" y="853" width="0.0998%" height="15" fill="rgb(210,71,41)" fg:x="517" fg:w="1"/><text x="51.8468%" y="863.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="51.5968%" y="837" width="0.0998%" height="15" fill="rgb(206,173,20)" fg:x="517" fg:w="1"/><text x="51.8468%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.10%)</title><rect x="51.8962%" y="805" width="0.0998%" height="15" fill="rgb(233,88,34)" fg:x="520" fg:w="1"/><text x="52.1462%" y="815.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.10%)</title><rect x="51.8962%" y="789" width="0.0998%" height="15" fill="rgb(223,209,46)" fg:x="520" fg:w="1"/><text x="52.1462%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="51.8962%" y="773" width="0.0998%" height="15" fill="rgb(250,43,18)" fg:x="520" fg:w="1"/><text x="52.1462%" y="783.50"></text></g><g><title>http::extensions::Extensions::insert (6 samples, 0.60%)</title><rect x="51.4970%" y="965" width="0.5988%" height="15" fill="rgb(208,13,10)" fg:x="516" fg:w="6"/><text x="51.7470%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.40%)</title><rect x="51.6966%" y="949" width="0.3992%" height="15" fill="rgb(212,200,36)" fg:x="518" fg:w="4"/><text x="51.9466%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.40%)</title><rect x="51.6966%" y="933" width="0.3992%" height="15" fill="rgb(225,90,30)" fg:x="518" fg:w="4"/><text x="51.9466%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.30%)</title><rect x="51.7964%" y="917" width="0.2994%" height="15" fill="rgb(236,182,39)" fg:x="519" fg:w="3"/><text x="52.0464%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.30%)</title><rect x="51.7964%" y="901" width="0.2994%" height="15" fill="rgb(212,144,35)" fg:x="519" fg:w="3"/><text x="52.0464%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.30%)</title><rect x="51.7964%" y="885" width="0.2994%" height="15" fill="rgb(228,63,44)" fg:x="519" fg:w="3"/><text x="52.0464%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.20%)</title><rect x="51.8962%" y="869" width="0.1996%" height="15" fill="rgb(228,109,6)" fg:x="520" fg:w="2"/><text x="52.1462%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.20%)</title><rect x="51.8962%" y="853" width="0.1996%" height="15" fill="rgb(238,117,24)" fg:x="520" fg:w="2"/><text x="52.1462%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.20%)</title><rect x="51.8962%" y="837" width="0.1996%" height="15" fill="rgb(242,26,26)" fg:x="520" fg:w="2"/><text x="52.1462%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.20%)</title><rect x="51.8962%" y="821" width="0.1996%" height="15" fill="rgb(221,92,48)" fg:x="520" fg:w="2"/><text x="52.1462%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.10%)</title><rect x="51.9960%" y="805" width="0.0998%" height="15" fill="rgb(209,209,32)" fg:x="521" fg:w="1"/><text x="52.2460%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.10%)</title><rect x="51.9960%" y="789" width="0.0998%" height="15" fill="rgb(221,70,22)" fg:x="521" fg:w="1"/><text x="52.2460%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="51.9960%" y="773" width="0.0998%" height="15" fill="rgb(248,145,5)" fg:x="521" fg:w="1"/><text x="52.2460%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="51.9960%" y="757" width="0.0998%" height="15" fill="rgb(226,116,26)" fg:x="521" fg:w="1"/><text x="52.2460%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="51.9960%" y="741" width="0.0998%" height="15" fill="rgb(244,5,17)" fg:x="521" fg:w="1"/><text x="52.2460%" y="751.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="51.9960%" y="725" width="0.0998%" height="15" fill="rgb(252,159,33)" fg:x="521" fg:w="1"/><text x="52.2460%" y="735.50"></text></g><g><title>&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (53 samples, 5.29%)</title><rect x="46.9062%" y="997" width="5.2894%" height="15" fill="rgb(206,71,0)" fg:x="470" fg:w="53"/><text x="47.1562%" y="1007.50">&lt;T as ..</text></g><g><title>&lt;axum::routing::Router&lt;B&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (52 samples, 5.19%)</title><rect x="47.0060%" y="981" width="5.1896%" height="15" fill="rgb(233,118,54)" fg:x="471" fg:w="52"/><text x="47.2560%" y="991.50">&lt;axum:..</text></g><g><title>http::uri::Uri::path (1 samples, 0.10%)</title><rect x="52.0958%" y="965" width="0.0998%" height="15" fill="rgb(234,83,48)" fg:x="522" fg:w="1"/><text x="52.3458%" y="975.50"></text></g><g><title>http::uri::Uri::has_path (1 samples, 0.10%)</title><rect x="52.0958%" y="949" width="0.0998%" height="15" fill="rgb(228,3,54)" fg:x="522" fg:w="1"/><text x="52.3458%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.20%)</title><rect x="52.1956%" y="997" width="0.1996%" height="15" fill="rgb(226,155,13)" fg:x="523" fg:w="2"/><text x="52.4456%" y="1007.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.10%)</title><rect x="52.3952%" y="981" width="0.0998%" height="15" fill="rgb(241,28,37)" fg:x="525" fg:w="1"/><text x="52.6452%" y="991.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::set (2 samples, 0.20%)</title><rect x="52.3952%" y="997" width="0.1996%" height="15" fill="rgb(233,93,10)" fg:x="525" fg:w="2"/><text x="52.6452%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="52.4950%" y="981" width="0.0998%" height="15" fill="rgb(225,113,19)" fg:x="526" fg:w="1"/><text x="52.7450%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (1 samples, 0.10%)</title><rect x="52.5948%" y="997" width="0.0998%" height="15" fill="rgb(241,2,18)" fg:x="527" fg:w="1"/><text x="52.8448%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="52.5948%" y="981" width="0.0998%" height="15" fill="rgb(228,207,21)" fg:x="527" fg:w="1"/><text x="52.8448%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="52.5948%" y="965" width="0.0998%" height="15" fill="rgb(213,211,35)" fg:x="527" fg:w="1"/><text x="52.8448%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="52.5948%" y="949" width="0.0998%" height="15" fill="rgb(209,83,10)" fg:x="527" fg:w="1"/><text x="52.8448%" y="959.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (59 samples, 5.89%)</title><rect x="46.9062%" y="1013" width="5.8882%" height="15" fill="rgb(209,164,1)" fg:x="470" fg:w="59"/><text x="47.1562%" y="1023.50">&lt;hyper:..</text></g><g><title>http::request::Request&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="52.6946%" y="997" width="0.0998%" height="15" fill="rgb(213,184,43)" fg:x="528" fg:w="1"/><text x="52.9446%" y="1007.50"></text></g><g><title>http::request::Parts::new (1 samples, 0.10%)</title><rect x="52.6946%" y="981" width="0.0998%" height="15" fill="rgb(231,61,34)" fg:x="528" fg:w="1"/><text x="52.9446%" y="991.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="52.7944%" y="1013" width="0.0998%" height="15" fill="rgb(235,75,3)" fg:x="529" fg:w="1"/><text x="53.0444%" y="1023.50"></text></g><g><title>hyper::body::body::Body::empty (2 samples, 0.20%)</title><rect x="52.8942%" y="1013" width="0.1996%" height="15" fill="rgb(220,106,47)" fg:x="530" fg:w="2"/><text x="53.1442%" y="1023.50"></text></g><g><title>hyper::body::body::Body::new (2 samples, 0.20%)</title><rect x="52.8942%" y="997" width="0.1996%" height="15" fill="rgb(210,196,33)" fg:x="530" fg:w="2"/><text x="53.1442%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="53.1936%" y="997" width="0.0998%" height="15" fill="rgb(229,154,42)" fg:x="533" fg:w="1"/><text x="53.4436%" y="1007.50"></text></g><g><title>hyper::proto::h1::conn::State::busy (1 samples, 0.10%)</title><rect x="53.2934%" y="997" width="0.0998%" height="15" fill="rgb(228,114,26)" fg:x="534" fg:w="1"/><text x="53.5434%" y="1007.50"></text></g><g><title>fput (1 samples, 0.10%)</title><rect x="54.7904%" y="725" width="0.0998%" height="15" fill="rgb(208,144,1)" fg:x="549" fg:w="1"/><text x="55.0404%" y="735.50"></text></g><g><title>release_sock (1 samples, 0.10%)</title><rect x="54.8902%" y="693" width="0.0998%" height="15" fill="rgb(239,112,37)" fg:x="550" fg:w="1"/><text x="55.1402%" y="703.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="55.5888%" y="661" width="0.0998%" height="15" fill="rgb(210,96,50)" fg:x="557" fg:w="1"/><text x="55.8388%" y="671.50"></text></g><g><title>release_sock (3 samples, 0.30%)</title><rect x="55.4890%" y="677" width="0.2994%" height="15" fill="rgb(222,178,2)" fg:x="556" fg:w="3"/><text x="55.7390%" y="687.50"></text></g><g><title>_raw_spin_unlock_bh (1 samples, 0.10%)</title><rect x="55.6886%" y="661" width="0.0998%" height="15" fill="rgb(226,74,18)" fg:x="558" fg:w="1"/><text x="55.9386%" y="671.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="55.6886%" y="645" width="0.0998%" height="15" fill="rgb(225,67,54)" fg:x="558" fg:w="1"/><text x="55.9386%" y="655.50"></text></g><g><title>tcp_recv_timestamp (4 samples, 0.40%)</title><rect x="55.7884%" y="677" width="0.3992%" height="15" fill="rgb(251,92,32)" fg:x="559" fg:w="4"/><text x="56.0384%" y="687.50"></text></g><g><title>kfree_skbmem (1 samples, 0.10%)</title><rect x="56.9860%" y="645" width="0.0998%" height="15" fill="rgb(228,149,22)" fg:x="571" fg:w="1"/><text x="57.2360%" y="655.50"></text></g><g><title>kmem_cache_free (1 samples, 0.10%)</title><rect x="56.9860%" y="629" width="0.0998%" height="15" fill="rgb(243,54,13)" fg:x="571" fg:w="1"/><text x="57.2360%" y="639.50"></text></g><g><title>skb_release_data (2 samples, 0.20%)</title><rect x="57.0858%" y="645" width="0.1996%" height="15" fill="rgb(243,180,28)" fg:x="572" fg:w="2"/><text x="57.3358%" y="655.50"></text></g><g><title>skb_release_head_state (4 samples, 0.40%)</title><rect x="57.2854%" y="645" width="0.3992%" height="15" fill="rgb(208,167,24)" fg:x="574" fg:w="4"/><text x="57.5354%" y="655.50"></text></g><g><title>dst_release (2 samples, 0.20%)</title><rect x="57.4850%" y="629" width="0.1996%" height="15" fill="rgb(245,73,45)" fg:x="576" fg:w="2"/><text x="57.7350%" y="639.50"></text></g><g><title>__kfree_skb (10 samples, 1.00%)</title><rect x="56.9860%" y="661" width="0.9980%" height="15" fill="rgb(237,203,48)" fg:x="571" fg:w="10"/><text x="57.2360%" y="671.50"></text></g><g><title>sock_rfree (3 samples, 0.30%)</title><rect x="57.6846%" y="645" width="0.2994%" height="15" fill="rgb(211,197,16)" fg:x="578" fg:w="3"/><text x="57.9346%" y="655.50"></text></g><g><title>ns_to_timespec64 (1 samples, 0.10%)</title><rect x="57.9840%" y="661" width="0.0998%" height="15" fill="rgb(243,99,51)" fg:x="581" fg:w="1"/><text x="58.2340%" y="671.50"></text></g><g><title>__check_object_size (2 samples, 0.20%)</title><rect x="58.4830%" y="613" width="0.1996%" height="15" fill="rgb(215,123,29)" fg:x="586" fg:w="2"/><text x="58.7330%" y="623.50"></text></g><g><title>__check_object_size.part.0 (2 samples, 0.20%)</title><rect x="58.4830%" y="597" width="0.1996%" height="15" fill="rgb(239,186,37)" fg:x="586" fg:w="2"/><text x="58.7330%" y="607.50"></text></g><g><title>_copy_to_iter (2 samples, 0.20%)</title><rect x="58.6826%" y="613" width="0.1996%" height="15" fill="rgb(252,136,39)" fg:x="588" fg:w="2"/><text x="58.9326%" y="623.50"></text></g><g><title>copy_user_enhanced_fast_string (1 samples, 0.10%)</title><rect x="58.8822%" y="613" width="0.0998%" height="15" fill="rgb(223,213,32)" fg:x="590" fg:w="1"/><text x="59.1322%" y="623.50"></text></g><g><title>skb_copy_datagram_iter (15 samples, 1.50%)</title><rect x="58.0838%" y="661" width="1.4970%" height="15" fill="rgb(233,115,5)" fg:x="582" fg:w="15"/><text x="58.3338%" y="671.50"></text></g><g><title>__skb_datagram_iter (14 samples, 1.40%)</title><rect x="58.1836%" y="645" width="1.3972%" height="15" fill="rgb(207,226,44)" fg:x="583" fg:w="14"/><text x="58.4336%" y="655.50"></text></g><g><title>simple_copy_to_iter (11 samples, 1.10%)</title><rect x="58.4830%" y="629" width="1.0978%" height="15" fill="rgb(208,126,0)" fg:x="586" fg:w="11"/><text x="58.7330%" y="639.50"></text></g><g><title>copy_user_generic_unrolled (6 samples, 0.60%)</title><rect x="58.9820%" y="613" width="0.5988%" height="15" fill="rgb(244,66,21)" fg:x="591" fg:w="6"/><text x="59.2320%" y="623.50"></text></g><g><title>kmalloc_reserve (2 samples, 0.20%)</title><rect x="60.3792%" y="597" width="0.1996%" height="15" fill="rgb(222,97,12)" fg:x="605" fg:w="2"/><text x="60.6292%" y="607.50"></text></g><g><title>__kmalloc_node_track_caller (2 samples, 0.20%)</title><rect x="60.3792%" y="581" width="0.1996%" height="15" fill="rgb(219,213,19)" fg:x="605" fg:w="2"/><text x="60.6292%" y="591.50"></text></g><g><title>kmalloc_slab (1 samples, 0.10%)</title><rect x="60.4790%" y="565" width="0.0998%" height="15" fill="rgb(252,169,30)" fg:x="606" fg:w="1"/><text x="60.7290%" y="575.50"></text></g><g><title>__alloc_skb (4 samples, 0.40%)</title><rect x="60.3792%" y="613" width="0.3992%" height="15" fill="rgb(206,32,51)" fg:x="605" fg:w="4"/><text x="60.6292%" y="623.50"></text></g><g><title>ksize (2 samples, 0.20%)</title><rect x="60.5788%" y="597" width="0.1996%" height="15" fill="rgb(250,172,42)" fg:x="607" fg:w="2"/><text x="60.8288%" y="607.50"></text></g><g><title>__ksize (2 samples, 0.20%)</title><rect x="60.5788%" y="581" width="0.1996%" height="15" fill="rgb(209,34,43)" fg:x="607" fg:w="2"/><text x="60.8288%" y="591.50"></text></g><g><title>__ip_queue_xmit (1 samples, 0.10%)</title><rect x="61.1776%" y="597" width="0.0998%" height="15" fill="rgb(223,11,35)" fg:x="613" fg:w="1"/><text x="61.4276%" y="607.50"></text></g><g><title>__ip_local_out (3 samples, 0.30%)</title><rect x="61.5768%" y="549" width="0.2994%" height="15" fill="rgb(251,219,26)" fg:x="617" fg:w="3"/><text x="61.8268%" y="559.50"></text></g><g><title>ip_send_check (3 samples, 0.30%)</title><rect x="61.5768%" y="533" width="0.2994%" height="15" fill="rgb(231,119,3)" fg:x="617" fg:w="3"/><text x="61.8268%" y="543.50"></text></g><g><title>__local_bh_enable_ip (1 samples, 0.10%)</title><rect x="62.1756%" y="501" width="0.0998%" height="15" fill="rgb(216,97,11)" fg:x="623" fg:w="1"/><text x="62.4256%" y="511.50"></text></g><g><title>_raw_spin_lock (3 samples, 0.30%)</title><rect x="62.7745%" y="293" width="0.2994%" height="15" fill="rgb(223,59,9)" fg:x="629" fg:w="3"/><text x="63.0245%" y="303.50"></text></g><g><title>tcp_v4_fill_cb (1 samples, 0.10%)</title><rect x="63.0739%" y="293" width="0.0998%" height="15" fill="rgb(233,93,31)" fg:x="632" fg:w="1"/><text x="63.3239%" y="303.50"></text></g><g><title>__inet_lookup_established (3 samples, 0.30%)</title><rect x="63.4731%" y="277" width="0.2994%" height="15" fill="rgb(239,81,33)" fg:x="636" fg:w="3"/><text x="63.7231%" y="287.50"></text></g><g><title>sock_put (1 samples, 0.10%)</title><rect x="63.7725%" y="277" width="0.0998%" height="15" fill="rgb(213,120,34)" fg:x="639" fg:w="1"/><text x="64.0225%" y="287.50"></text></g><g><title>tcp_check_space (1 samples, 0.10%)</title><rect x="63.8723%" y="261" width="0.0998%" height="15" fill="rgb(243,49,53)" fg:x="640" fg:w="1"/><text x="64.1223%" y="271.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.10%)</title><rect x="63.9721%" y="261" width="0.0998%" height="15" fill="rgb(247,216,33)" fg:x="641" fg:w="1"/><text x="64.2221%" y="271.50"></text></g><g><title>__kfree_skb (2 samples, 0.20%)</title><rect x="64.1717%" y="245" width="0.1996%" height="15" fill="rgb(226,26,14)" fg:x="643" fg:w="2"/><text x="64.4217%" y="255.50"></text></g><g><title>skb_release_head_state (2 samples, 0.20%)</title><rect x="64.1717%" y="229" width="0.1996%" height="15" fill="rgb(215,49,53)" fg:x="643" fg:w="2"/><text x="64.4217%" y="239.50"></text></g><g><title>dst_release (1 samples, 0.10%)</title><rect x="64.2715%" y="213" width="0.0998%" height="15" fill="rgb(245,162,40)" fg:x="644" fg:w="1"/><text x="64.5215%" y="223.50"></text></g><g><title>rb_first (2 samples, 0.20%)</title><rect x="64.4711%" y="229" width="0.1996%" height="15" fill="rgb(229,68,17)" fg:x="646" fg:w="2"/><text x="64.7211%" y="239.50"></text></g><g><title>kfree_skbmem (3 samples, 0.30%)</title><rect x="64.8703%" y="197" width="0.2994%" height="15" fill="rgb(213,182,10)" fg:x="650" fg:w="3"/><text x="65.1203%" y="207.50"></text></g><g><title>kmem_cache_free (3 samples, 0.30%)</title><rect x="64.8703%" y="181" width="0.2994%" height="15" fill="rgb(245,125,30)" fg:x="650" fg:w="3"/><text x="65.1203%" y="191.50"></text></g><g><title>__slab_free (2 samples, 0.20%)</title><rect x="64.9701%" y="165" width="0.1996%" height="15" fill="rgb(232,202,2)" fg:x="651" fg:w="2"/><text x="65.2201%" y="175.50"></text></g><g><title>__kfree_skb (7 samples, 0.70%)</title><rect x="64.8703%" y="213" width="0.6986%" height="15" fill="rgb(237,140,51)" fg:x="650" fg:w="7"/><text x="65.1203%" y="223.50"></text></g><g><title>skb_release_data (4 samples, 0.40%)</title><rect x="65.1697%" y="197" width="0.3992%" height="15" fill="rgb(236,157,25)" fg:x="653" fg:w="4"/><text x="65.4197%" y="207.50"></text></g><g><title>skb_free_head (3 samples, 0.30%)</title><rect x="65.2695%" y="181" width="0.2994%" height="15" fill="rgb(219,209,0)" fg:x="654" fg:w="3"/><text x="65.5195%" y="191.50"></text></g><g><title>kfree (3 samples, 0.30%)</title><rect x="65.2695%" y="165" width="0.2994%" height="15" fill="rgb(240,116,54)" fg:x="654" fg:w="3"/><text x="65.5195%" y="175.50"></text></g><g><title>slab_free_freelist_hook.constprop.0 (1 samples, 0.10%)</title><rect x="65.4691%" y="149" width="0.0998%" height="15" fill="rgb(216,10,36)" fg:x="656" fg:w="1"/><text x="65.7191%" y="159.50"></text></g><g><title>tcp_ack (13 samples, 1.30%)</title><rect x="64.3713%" y="245" width="1.2974%" height="15" fill="rgb(222,72,44)" fg:x="645" fg:w="13"/><text x="64.6213%" y="255.50"></text></g><g><title>tcp_clean_rtx_queue.constprop.0 (10 samples, 1.00%)</title><rect x="64.6707%" y="229" width="0.9980%" height="15" fill="rgb(232,159,9)" fg:x="648" fg:w="10"/><text x="64.9207%" y="239.50"></text></g><g><title>tcp_rtt_estimator (1 samples, 0.10%)</title><rect x="65.5689%" y="213" width="0.0998%" height="15" fill="rgb(210,39,32)" fg:x="657" fg:w="1"/><text x="65.8189%" y="223.50"></text></g><g><title>ip_local_deliver (30 samples, 2.99%)</title><rect x="62.7745%" y="341" width="2.9940%" height="15" fill="rgb(216,194,45)" fg:x="629" fg:w="30"/><text x="63.0245%" y="351.50">ip_..</text></g><g><title>ip_local_deliver_finish (30 samples, 2.99%)</title><rect x="62.7745%" y="325" width="2.9940%" height="15" fill="rgb(218,18,35)" fg:x="629" fg:w="30"/><text x="63.0245%" y="335.50">ip_..</text></g><g><title>ip_protocol_deliver_rcu (30 samples, 2.99%)</title><rect x="62.7745%" y="309" width="2.9940%" height="15" fill="rgb(207,83,51)" fg:x="629" fg:w="30"/><text x="63.0245%" y="319.50">ip_..</text></g><g><title>tcp_v4_rcv (26 samples, 2.59%)</title><rect x="63.1737%" y="293" width="2.5948%" height="15" fill="rgb(225,63,43)" fg:x="633" fg:w="26"/><text x="63.4237%" y="303.50">tc..</text></g><g><title>tcp_v4_do_rcv (19 samples, 1.90%)</title><rect x="63.8723%" y="277" width="1.8962%" height="15" fill="rgb(207,57,36)" fg:x="640" fg:w="19"/><text x="64.1223%" y="287.50">t..</text></g><g><title>tcp_rcv_established (17 samples, 1.70%)</title><rect x="64.0719%" y="261" width="1.6966%" height="15" fill="rgb(216,99,33)" fg:x="642" fg:w="17"/><text x="64.3219%" y="271.50"></text></g><g><title>tcp_mstamp_refresh (1 samples, 0.10%)</title><rect x="65.6687%" y="245" width="0.0998%" height="15" fill="rgb(225,42,16)" fg:x="658" fg:w="1"/><text x="65.9187%" y="255.50"></text></g><g><title>ip_rcv_core (2 samples, 0.20%)</title><rect x="65.7685%" y="341" width="0.1996%" height="15" fill="rgb(220,201,45)" fg:x="659" fg:w="2"/><text x="66.0185%" y="351.50"></text></g><g><title>__local_bh_enable_ip (37 samples, 3.69%)</title><rect x="62.3752%" y="485" width="3.6926%" height="15" fill="rgb(225,33,4)" fg:x="625" fg:w="37"/><text x="62.6252%" y="495.50">__lo..</text></g><g><title>do_softirq (36 samples, 3.59%)</title><rect x="62.4750%" y="469" width="3.5928%" height="15" fill="rgb(224,33,50)" fg:x="626" fg:w="36"/><text x="62.7250%" y="479.50">do_s..</text></g><g><title>__softirqentry_text_start (35 samples, 3.49%)</title><rect x="62.5749%" y="453" width="3.4930%" height="15" fill="rgb(246,198,51)" fg:x="627" fg:w="35"/><text x="62.8249%" y="463.50">__s..</text></g><g><title>net_rx_action (35 samples, 3.49%)</title><rect x="62.5749%" y="437" width="3.4930%" height="15" fill="rgb(205,22,4)" fg:x="627" fg:w="35"/><text x="62.8249%" y="447.50">net..</text></g><g><title>__napi_poll (35 samples, 3.49%)</title><rect x="62.5749%" y="421" width="3.4930%" height="15" fill="rgb(206,3,8)" fg:x="627" fg:w="35"/><text x="62.8249%" y="431.50">__n..</text></g><g><title>process_backlog (35 samples, 3.49%)</title><rect x="62.5749%" y="405" width="3.4930%" height="15" fill="rgb(251,23,15)" fg:x="627" fg:w="35"/><text x="62.8249%" y="415.50">pro..</text></g><g><title>__netif_receive_skb (34 samples, 3.39%)</title><rect x="62.6747%" y="389" width="3.3932%" height="15" fill="rgb(252,88,28)" fg:x="628" fg:w="34"/><text x="62.9247%" y="399.50">__n..</text></g><g><title>__netif_receive_skb_one_core (34 samples, 3.39%)</title><rect x="62.6747%" y="373" width="3.3932%" height="15" fill="rgb(212,127,14)" fg:x="628" fg:w="34"/><text x="62.9247%" y="383.50">__n..</text></g><g><title>ip_rcv (34 samples, 3.39%)</title><rect x="62.6747%" y="357" width="3.3932%" height="15" fill="rgb(247,145,37)" fg:x="628" fg:w="34"/><text x="62.9247%" y="367.50">ip_..</text></g><g><title>ip_rcv_finish_core.constprop.0 (1 samples, 0.10%)</title><rect x="65.9681%" y="341" width="0.0998%" height="15" fill="rgb(209,117,53)" fg:x="661" fg:w="1"/><text x="66.2181%" y="351.50"></text></g><g><title>loopback_xmit (1 samples, 0.10%)</title><rect x="66.3673%" y="437" width="0.0998%" height="15" fill="rgb(212,90,42)" fg:x="665" fg:w="1"/><text x="66.6173%" y="447.50"></text></g><g><title>enqueue_to_backlog (1 samples, 0.10%)</title><rect x="66.4671%" y="373" width="0.0998%" height="15" fill="rgb(218,164,37)" fg:x="666" fg:w="1"/><text x="66.7171%" y="383.50"></text></g><g><title>ktime_get_with_offset (1 samples, 0.10%)</title><rect x="66.5669%" y="373" width="0.0998%" height="15" fill="rgb(246,65,34)" fg:x="667" fg:w="1"/><text x="66.8169%" y="383.50"></text></g><g><title>dev_hard_start_xmit (5 samples, 0.50%)</title><rect x="66.2675%" y="453" width="0.4990%" height="15" fill="rgb(231,100,33)" fg:x="664" fg:w="5"/><text x="66.5175%" y="463.50"></text></g><g><title>xmit_one.constprop.0 (3 samples, 0.30%)</title><rect x="66.4671%" y="437" width="0.2994%" height="15" fill="rgb(228,126,14)" fg:x="666" fg:w="3"/><text x="66.7171%" y="447.50"></text></g><g><title>loopback_xmit (3 samples, 0.30%)</title><rect x="66.4671%" y="421" width="0.2994%" height="15" fill="rgb(215,173,21)" fg:x="666" fg:w="3"/><text x="66.7171%" y="431.50"></text></g><g><title>netif_rx (3 samples, 0.30%)</title><rect x="66.4671%" y="405" width="0.2994%" height="15" fill="rgb(210,6,40)" fg:x="666" fg:w="3"/><text x="66.7171%" y="415.50"></text></g><g><title>netif_rx_internal (3 samples, 0.30%)</title><rect x="66.4671%" y="389" width="0.2994%" height="15" fill="rgb(212,48,18)" fg:x="666" fg:w="3"/><text x="66.7171%" y="399.50"></text></g><g><title>read_tsc (1 samples, 0.10%)</title><rect x="66.6667%" y="373" width="0.0998%" height="15" fill="rgb(230,214,11)" fg:x="668" fg:w="1"/><text x="66.9167%" y="383.50"></text></g><g><title>__ip_finish_output (48 samples, 4.79%)</title><rect x="62.0758%" y="517" width="4.7904%" height="15" fill="rgb(254,105,39)" fg:x="622" fg:w="48"/><text x="62.3258%" y="527.50">__ip_f..</text></g><g><title>ip_finish_output2 (46 samples, 4.59%)</title><rect x="62.2754%" y="501" width="4.5908%" height="15" fill="rgb(245,158,5)" fg:x="624" fg:w="46"/><text x="62.5254%" y="511.50">ip_fi..</text></g><g><title>dev_queue_xmit (8 samples, 0.80%)</title><rect x="66.0679%" y="485" width="0.7984%" height="15" fill="rgb(249,208,11)" fg:x="662" fg:w="8"/><text x="66.3179%" y="495.50"></text></g><g><title>__dev_queue_xmit (8 samples, 0.80%)</title><rect x="66.0679%" y="469" width="0.7984%" height="15" fill="rgb(210,39,28)" fg:x="662" fg:w="8"/><text x="66.3179%" y="479.50"></text></g><g><title>netdev_core_pick_tx (1 samples, 0.10%)</title><rect x="66.7665%" y="453" width="0.0998%" height="15" fill="rgb(211,56,53)" fg:x="669" fg:w="1"/><text x="67.0165%" y="463.50"></text></g><g><title>ip_output (51 samples, 5.09%)</title><rect x="61.8762%" y="549" width="5.0898%" height="15" fill="rgb(226,201,30)" fg:x="620" fg:w="51"/><text x="62.1262%" y="559.50">ip_out..</text></g><g><title>ip_finish_output (49 samples, 4.89%)</title><rect x="62.0758%" y="533" width="4.8902%" height="15" fill="rgb(239,101,34)" fg:x="622" fg:w="49"/><text x="62.3258%" y="543.50">ip_fin..</text></g><g><title>ip_skb_dst_mtu (1 samples, 0.10%)</title><rect x="66.8663%" y="517" width="0.0998%" height="15" fill="rgb(226,209,5)" fg:x="670" fg:w="1"/><text x="67.1163%" y="527.50"></text></g><g><title>ip_queue_xmit (58 samples, 5.79%)</title><rect x="61.2774%" y="597" width="5.7884%" height="15" fill="rgb(250,105,47)" fg:x="614" fg:w="58"/><text x="61.5274%" y="607.50">ip_queu..</text></g><g><title>__ip_queue_xmit (58 samples, 5.79%)</title><rect x="61.2774%" y="581" width="5.7884%" height="15" fill="rgb(230,72,3)" fg:x="614" fg:w="58"/><text x="61.5274%" y="591.50">__ip_qu..</text></g><g><title>ip_local_out (55 samples, 5.49%)</title><rect x="61.5768%" y="565" width="5.4890%" height="15" fill="rgb(232,218,39)" fg:x="617" fg:w="55"/><text x="61.8268%" y="575.50">ip_loca..</text></g><g><title>ip_send_check (1 samples, 0.10%)</title><rect x="66.9661%" y="549" width="0.0998%" height="15" fill="rgb(248,166,6)" fg:x="671" fg:w="1"/><text x="67.2161%" y="559.50"></text></g><g><title>tcp_cleanup_rbuf (76 samples, 7.58%)</title><rect x="59.5808%" y="661" width="7.5848%" height="15" fill="rgb(247,89,20)" fg:x="597" fg:w="76"/><text x="59.8308%" y="671.50">tcp_cleanu..</text></g><g><title>tcp_send_ack (70 samples, 6.99%)</title><rect x="60.1796%" y="645" width="6.9860%" height="15" fill="rgb(248,130,54)" fg:x="603" fg:w="70"/><text x="60.4296%" y="655.50">tcp_send_..</text></g><g><title>__tcp_send_ack.part.0 (69 samples, 6.89%)</title><rect x="60.2794%" y="629" width="6.8862%" height="15" fill="rgb(234,196,4)" fg:x="604" fg:w="69"/><text x="60.5294%" y="639.50">__tcp_sen..</text></g><g><title>__tcp_transmit_skb (64 samples, 6.39%)</title><rect x="60.7784%" y="613" width="6.3872%" height="15" fill="rgb(250,143,31)" fg:x="609" fg:w="64"/><text x="61.0284%" y="623.50">__tcp_tr..</text></g><g><title>tcp_established_options (1 samples, 0.10%)</title><rect x="67.0659%" y="597" width="0.0998%" height="15" fill="rgb(211,110,34)" fg:x="672" fg:w="1"/><text x="67.3159%" y="607.50"></text></g><g><title>ktime_get (1 samples, 0.10%)</title><rect x="67.3653%" y="645" width="0.0998%" height="15" fill="rgb(215,124,48)" fg:x="675" fg:w="1"/><text x="67.6153%" y="655.50"></text></g><g><title>tcp_rcv_space_adjust (6 samples, 0.60%)</title><rect x="67.1657%" y="661" width="0.5988%" height="15" fill="rgb(216,46,13)" fg:x="673" fg:w="6"/><text x="67.4157%" y="671.50"></text></g><g><title>tcp_mstamp_refresh (3 samples, 0.30%)</title><rect x="67.4651%" y="645" width="0.2994%" height="15" fill="rgb(205,184,25)" fg:x="676" fg:w="3"/><text x="67.7151%" y="655.50"></text></g><g><title>read_tsc (2 samples, 0.20%)</title><rect x="67.5649%" y="629" width="0.1996%" height="15" fill="rgb(228,1,10)" fg:x="677" fg:w="2"/><text x="67.8149%" y="639.50"></text></g><g><title>sock_recvmsg (130 samples, 12.97%)</title><rect x="54.8902%" y="725" width="12.9741%" height="15" fill="rgb(213,116,27)" fg:x="550" fg:w="130"/><text x="55.1402%" y="735.50">sock_recvmsg</text></g><g><title>inet_recvmsg (130 samples, 12.97%)</title><rect x="54.8902%" y="709" width="12.9741%" height="15" fill="rgb(241,95,50)" fg:x="550" fg:w="130"/><text x="55.1402%" y="719.50">inet_recvmsg</text></g><g><title>tcp_recvmsg (129 samples, 12.87%)</title><rect x="54.9900%" y="693" width="12.8743%" height="15" fill="rgb(238,48,32)" fg:x="551" fg:w="129"/><text x="55.2400%" y="703.50">tcp_recvmsg</text></g><g><title>tcp_recvmsg_locked (117 samples, 11.68%)</title><rect x="56.1876%" y="677" width="11.6766%" height="15" fill="rgb(235,113,49)" fg:x="563" fg:w="117"/><text x="56.4376%" y="687.50">tcp_recvmsg_locked</text></g><g><title>tcp_update_recv_tstamps (1 samples, 0.10%)</title><rect x="67.7645%" y="661" width="0.0998%" height="15" fill="rgb(205,127,43)" fg:x="679" fg:w="1"/><text x="68.0145%" y="671.50"></text></g><g><title>__x64_sys_recvfrom (137 samples, 13.67%)</title><rect x="54.7904%" y="757" width="13.6727%" height="15" fill="rgb(250,162,2)" fg:x="549" fg:w="137"/><text x="55.0404%" y="767.50">__x64_sys_recvfrom</text></g><g><title>__sys_recvfrom (137 samples, 13.67%)</title><rect x="54.7904%" y="741" width="13.6727%" height="15" fill="rgb(220,13,41)" fg:x="549" fg:w="137"/><text x="55.0404%" y="751.50">__sys_recvfrom</text></g><g><title>sockfd_lookup_light (6 samples, 0.60%)</title><rect x="67.8643%" y="725" width="0.5988%" height="15" fill="rgb(249,221,25)" fg:x="680" fg:w="6"/><text x="68.1143%" y="735.50"></text></g><g><title>__fdget (6 samples, 0.60%)</title><rect x="67.8643%" y="709" width="0.5988%" height="15" fill="rgb(215,208,19)" fg:x="680" fg:w="6"/><text x="68.1143%" y="719.50"></text></g><g><title>__fget_light (6 samples, 0.60%)</title><rect x="67.8643%" y="693" width="0.5988%" height="15" fill="rgb(236,175,2)" fg:x="680" fg:w="6"/><text x="68.1143%" y="703.50"></text></g><g><title>__fget_files (6 samples, 0.60%)</title><rect x="67.8643%" y="677" width="0.5988%" height="15" fill="rgb(241,52,2)" fg:x="680" fg:w="6"/><text x="68.1143%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (144 samples, 14.37%)</title><rect x="54.1916%" y="933" width="14.3713%" height="15" fill="rgb(248,140,14)" fg:x="543" fg:w="144"/><text x="54.4416%" y="943.50">&lt;&amp;mio::net::tcp::strea..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (142 samples, 14.17%)</title><rect x="54.3912%" y="917" width="14.1717%" height="15" fill="rgb(253,22,42)" fg:x="545" fg:w="142"/><text x="54.6412%" y="927.50">mio::io_source::IoSour..</text></g><g><title>mio::sys::unix::IoSourceState::do_io (142 samples, 14.17%)</title><rect x="54.3912%" y="901" width="14.1717%" height="15" fill="rgb(234,61,47)" fg:x="545" fg:w="142"/><text x="54.6412%" y="911.50">mio::sys::unix::IoSour..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::{{closure}} (142 samples, 14.17%)</title><rect x="54.3912%" y="885" width="14.1717%" height="15" fill="rgb(208,226,15)" fg:x="545" fg:w="142"/><text x="54.6412%" y="895.50">&lt;&amp;mio::net::tcp::strea..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (142 samples, 14.17%)</title><rect x="54.3912%" y="869" width="14.1717%" height="15" fill="rgb(217,221,4)" fg:x="545" fg:w="142"/><text x="54.6412%" y="879.50">&lt;&amp;std::net::tcp::TcpSt..</text></g><g><title>std::sys_common::net::TcpStream::read (142 samples, 14.17%)</title><rect x="54.3912%" y="853" width="14.1717%" height="15" fill="rgb(212,174,34)" fg:x="545" fg:w="142"/><text x="54.6412%" y="863.50">std::sys_common::net::..</text></g><g><title>std::sys::unix::net::Socket::read (142 samples, 14.17%)</title><rect x="54.3912%" y="837" width="14.1717%" height="15" fill="rgb(253,83,4)" fg:x="545" fg:w="142"/><text x="54.6412%" y="847.50">std::sys::unix::net::S..</text></g><g><title>std::sys::unix::net::Socket::recv_with_flags (142 samples, 14.17%)</title><rect x="54.3912%" y="821" width="14.1717%" height="15" fill="rgb(250,195,49)" fg:x="545" fg:w="142"/><text x="54.6412%" y="831.50">std::sys::unix::net::S..</text></g><g><title>recv (142 samples, 14.17%)</title><rect x="54.3912%" y="805" width="14.1717%" height="15" fill="rgb(241,192,25)" fg:x="545" fg:w="142"/><text x="54.6412%" y="815.50">recv</text></g><g><title>entry_SYSCALL_64_after_hwframe (138 samples, 13.77%)</title><rect x="54.7904%" y="789" width="13.7725%" height="15" fill="rgb(208,124,10)" fg:x="549" fg:w="138"/><text x="55.0404%" y="799.50">entry_SYSCALL_64_afte..</text></g><g><title>do_syscall_64 (138 samples, 13.77%)</title><rect x="54.7904%" y="773" width="13.7725%" height="15" fill="rgb(222,33,0)" fg:x="549" fg:w="138"/><text x="55.0404%" y="783.50">do_syscall_64</text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.10%)</title><rect x="68.4631%" y="757" width="0.0998%" height="15" fill="rgb(234,209,28)" fg:x="686" fg:w="1"/><text x="68.7131%" y="767.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (1 samples, 0.10%)</title><rect x="68.5629%" y="933" width="0.0998%" height="15" fill="rgb(224,11,23)" fg:x="687" fg:w="1"/><text x="68.8129%" y="943.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (1 samples, 0.10%)</title><rect x="68.5629%" y="917" width="0.0998%" height="15" fill="rgb(232,99,1)" fg:x="687" fg:w="1"/><text x="68.8129%" y="927.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1 samples, 0.10%)</title><rect x="68.5629%" y="901" width="0.0998%" height="15" fill="rgb(237,95,45)" fg:x="687" fg:w="1"/><text x="68.8129%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::RwLockReadGuard&lt;tokio::runtime::io::IoDispatcher&gt;&gt; (1 samples, 0.10%)</title><rect x="68.6627%" y="885" width="0.0998%" height="15" fill="rgb(208,109,11)" fg:x="688" fg:w="1"/><text x="68.9127%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,tokio::runtime::io::IoDispatcher&gt;&gt; (1 samples, 0.10%)</title><rect x="68.6627%" y="869" width="0.0998%" height="15" fill="rgb(216,190,48)" fg:x="688" fg:w="1"/><text x="68.9127%" y="879.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="68.6627%" y="853" width="0.0998%" height="15" fill="rgb(251,171,36)" fg:x="688" fg:w="1"/><text x="68.9127%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.10%)</title><rect x="68.6627%" y="837" width="0.0998%" height="15" fill="rgb(230,62,22)" fg:x="688" fg:w="1"/><text x="68.9127%" y="847.50"></text></g><g><title>tokio::runtime::io::Inner::is_shutdown (4 samples, 0.40%)</title><rect x="68.6627%" y="901" width="0.3992%" height="15" fill="rgb(225,114,35)" fg:x="688" fg:w="4"/><text x="68.9127%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::RwLock&lt;T&gt;::read (3 samples, 0.30%)</title><rect x="68.7625%" y="885" width="0.2994%" height="15" fill="rgb(215,118,42)" fg:x="689" fg:w="3"/><text x="69.0125%" y="895.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (3 samples, 0.30%)</title><rect x="68.7625%" y="869" width="0.2994%" height="15" fill="rgb(243,119,21)" fg:x="689" fg:w="3"/><text x="69.0125%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (3 samples, 0.30%)</title><rect x="68.7625%" y="853" width="0.2994%" height="15" fill="rgb(252,177,53)" fg:x="689" fg:w="3"/><text x="69.0125%" y="863.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.10%)</title><rect x="68.9621%" y="837" width="0.0998%" height="15" fill="rgb(237,209,29)" fg:x="691" fg:w="1"/><text x="69.2121%" y="847.50"></text></g><g><title>&lt;hyper::server::tcp::addr_stream::AddrStream as tokio::io::async_read::AsyncRead&gt;::poll_read (161 samples, 16.07%)</title><rect x="53.9920%" y="965" width="16.0679%" height="15" fill="rgb(212,65,23)" fg:x="541" fg:w="161"/><text x="54.2420%" y="975.50">&lt;hyper::server::tcp::addr..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (161 samples, 16.07%)</title><rect x="53.9920%" y="949" width="16.0679%" height="15" fill="rgb(230,222,46)" fg:x="541" fg:w="161"/><text x="54.2420%" y="959.50">tokio::io::poll_evented::..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (14 samples, 1.40%)</title><rect x="68.6627%" y="933" width="1.3972%" height="15" fill="rgb(215,135,32)" fg:x="688" fg:w="14"/><text x="68.9127%" y="943.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (14 samples, 1.40%)</title><rect x="68.6627%" y="917" width="1.3972%" height="15" fill="rgb(246,101,22)" fg:x="688" fg:w="14"/><text x="68.9127%" y="927.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (10 samples, 1.00%)</title><rect x="69.0619%" y="901" width="0.9980%" height="15" fill="rgb(206,107,13)" fg:x="692" fg:w="10"/><text x="69.3119%" y="911.50"></text></g><g><title>tokio::runtime::io::Direction::mask (10 samples, 1.00%)</title><rect x="69.0619%" y="885" width="0.9980%" height="15" fill="rgb(250,100,44)" fg:x="692" fg:w="10"/><text x="69.3119%" y="895.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (165 samples, 16.47%)</title><rect x="53.6926%" y="981" width="16.4671%" height="15" fill="rgb(231,147,38)" fg:x="538" fg:w="165"/><text x="53.9426%" y="991.50">hyper::proto::h1::io::Buf..</text></g><g><title>tokio::io::read_buf::ReadBuf::filled (1 samples, 0.10%)</title><rect x="70.0599%" y="965" width="0.0998%" height="15" fill="rgb(229,8,40)" fg:x="702" fg:w="1"/><text x="70.3099%" y="975.50"></text></g><g><title>tokio::io::read_buf::slice_assume_init (1 samples, 0.10%)</title><rect x="70.0599%" y="949" width="0.0998%" height="15" fill="rgb(221,135,30)" fg:x="702" fg:w="1"/><text x="70.3099%" y="959.50"></text></g><g><title>hyper::proto::h1::io::ReadStrategy::max (2 samples, 0.20%)</title><rect x="70.1597%" y="981" width="0.1996%" height="15" fill="rgb(249,193,18)" fg:x="703" fg:w="2"/><text x="70.4097%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="71.4571%" y="949" width="0.0998%" height="15" fill="rgb(209,133,39)" fg:x="716" fg:w="1"/><text x="71.7071%" y="959.50"></text></g><g><title>__rust_probestack (1 samples, 0.10%)</title><rect x="71.5569%" y="949" width="0.0998%" height="15" fill="rgb(232,100,14)" fg:x="717" fg:w="1"/><text x="71.8069%" y="959.50"></text></g><g><title>bytes::bytes::Bytes::slice (1 samples, 0.10%)</title><rect x="71.6567%" y="949" width="0.0998%" height="15" fill="rgb(224,185,1)" fg:x="718" fg:w="1"/><text x="71.9067%" y="959.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.10%)</title><rect x="71.6567%" y="933" width="0.0998%" height="15" fill="rgb(223,139,8)" fg:x="718" fg:w="1"/><text x="71.9067%" y="943.50"></text></g><g><title>bytes::bytes_mut::shared_v_clone (1 samples, 0.10%)</title><rect x="71.6567%" y="917" width="0.0998%" height="15" fill="rgb(232,213,38)" fg:x="718" fg:w="1"/><text x="71.9067%" y="927.50"></text></g><g><title>bytes::bytes_mut::increment_shared (1 samples, 0.10%)</title><rect x="71.6567%" y="901" width="0.0998%" height="15" fill="rgb(207,94,22)" fg:x="718" fg:w="1"/><text x="71.9067%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.10%)</title><rect x="71.6567%" y="885" width="0.0998%" height="15" fill="rgb(219,183,54)" fg:x="718" fg:w="1"/><text x="71.9067%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.10%)</title><rect x="71.6567%" y="869" width="0.0998%" height="15" fill="rgb(216,185,54)" fg:x="718" fg:w="1"/><text x="71.9067%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (1 samples, 0.10%)</title><rect x="71.7565%" y="949" width="0.0998%" height="15" fill="rgb(254,217,39)" fg:x="719" fg:w="1"/><text x="72.0065%" y="959.50"></text></g><g><title>bytes::bytes::Bytes::with_vtable (1 samples, 0.10%)</title><rect x="71.7565%" y="933" width="0.0998%" height="15" fill="rgb(240,178,23)" fg:x="719" fg:w="1"/><text x="72.0065%" y="943.50"></text></g><g><title>bytes::bytes_mut::BytesMut::set_start (1 samples, 0.10%)</title><rect x="71.8563%" y="933" width="0.0998%" height="15" fill="rgb(218,11,47)" fg:x="720" fg:w="1"/><text x="72.1063%" y="943.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (5 samples, 0.50%)</title><rect x="71.8563%" y="949" width="0.4990%" height="15" fill="rgb(218,51,51)" fg:x="720" fg:w="5"/><text x="72.1063%" y="959.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (4 samples, 0.40%)</title><rect x="71.9561%" y="933" width="0.3992%" height="15" fill="rgb(238,126,27)" fg:x="721" fg:w="4"/><text x="72.2061%" y="943.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (4 samples, 0.40%)</title><rect x="71.9561%" y="917" width="0.3992%" height="15" fill="rgb(249,202,22)" fg:x="721" fg:w="4"/><text x="72.2061%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.40%)</title><rect x="71.9561%" y="901" width="0.3992%" height="15" fill="rgb(254,195,49)" fg:x="721" fg:w="4"/><text x="72.2061%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.40%)</title><rect x="71.9561%" y="885" width="0.3992%" height="15" fill="rgb(208,123,14)" fg:x="721" fg:w="4"/><text x="72.2061%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.40%)</title><rect x="71.9561%" y="869" width="0.3992%" height="15" fill="rgb(224,200,8)" fg:x="721" fg:w="4"/><text x="72.2061%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.40%)</title><rect x="71.9561%" y="853" width="0.3992%" height="15" fill="rgb(217,61,36)" fg:x="721" fg:w="4"/><text x="72.2061%" y="863.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.30%)</title><rect x="72.0559%" y="837" width="0.2994%" height="15" fill="rgb(206,35,45)" fg:x="722" fg:w="3"/><text x="72.3059%" y="847.50"></text></g><g><title>malloc (3 samples, 0.30%)</title><rect x="72.0559%" y="821" width="0.2994%" height="15" fill="rgb(217,65,33)" fg:x="722" fg:w="3"/><text x="72.3059%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.20%)</title><rect x="72.3553%" y="949" width="0.1996%" height="15" fill="rgb(222,158,48)" fg:x="725" fg:w="2"/><text x="72.6053%" y="959.50"></text></g><g><title>core::mem::replace (2 samples, 0.20%)</title><rect x="72.3553%" y="933" width="0.1996%" height="15" fill="rgb(254,2,54)" fg:x="725" fg:w="2"/><text x="72.6053%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.20%)</title><rect x="72.5549%" y="949" width="0.1996%" height="15" fill="rgb(250,143,38)" fg:x="727" fg:w="2"/><text x="72.8049%" y="959.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="72.5549%" y="933" width="0.1996%" height="15" fill="rgb(248,25,0)" fg:x="727" fg:w="2"/><text x="72.8049%" y="943.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (1 samples, 0.10%)</title><rect x="72.6547%" y="917" width="0.0998%" height="15" fill="rgb(206,152,27)" fg:x="728" fg:w="1"/><text x="72.9047%" y="927.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.10%)</title><rect x="72.6547%" y="901" width="0.0998%" height="15" fill="rgb(240,77,30)" fg:x="728" fg:w="1"/><text x="72.9047%" y="911.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (1 samples, 0.10%)</title><rect x="72.6547%" y="885" width="0.0998%" height="15" fill="rgb(231,5,3)" fg:x="728" fg:w="1"/><text x="72.9047%" y="895.50"></text></g><g><title>bytes::bytes_mut::release_shared (1 samples, 0.10%)</title><rect x="72.6547%" y="869" width="0.0998%" height="15" fill="rgb(207,226,32)" fg:x="728" fg:w="1"/><text x="72.9047%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.20%)</title><rect x="72.7545%" y="885" width="0.1996%" height="15" fill="rgb(222,207,47)" fg:x="729" fg:w="2"/><text x="73.0045%" y="895.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (2 samples, 0.20%)</title><rect x="72.7545%" y="869" width="0.1996%" height="15" fill="rgb(229,115,45)" fg:x="729" fg:w="2"/><text x="73.0045%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (2 samples, 0.20%)</title><rect x="72.7545%" y="853" width="0.1996%" height="15" fill="rgb(224,191,6)" fg:x="729" fg:w="2"/><text x="73.0045%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="72.9541%" y="725" width="0.0998%" height="15" fill="rgb(230,227,24)" fg:x="731" fg:w="1"/><text x="73.2041%" y="735.50"></text></g><g><title>bytes::bytes::Bytes::copy_from_slice (4 samples, 0.40%)</title><rect x="72.7545%" y="901" width="0.3992%" height="15" fill="rgb(228,80,19)" fg:x="729" fg:w="4"/><text x="73.0045%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.20%)</title><rect x="72.9541%" y="885" width="0.1996%" height="15" fill="rgb(247,229,0)" fg:x="731" fg:w="2"/><text x="73.2041%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.20%)</title><rect x="72.9541%" y="869" width="0.1996%" height="15" fill="rgb(237,194,15)" fg:x="731" fg:w="2"/><text x="73.2041%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.20%)</title><rect x="72.9541%" y="853" width="0.1996%" height="15" fill="rgb(219,203,20)" fg:x="731" fg:w="2"/><text x="73.2041%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.20%)</title><rect x="72.9541%" y="837" width="0.1996%" height="15" fill="rgb(234,128,8)" fg:x="731" fg:w="2"/><text x="73.2041%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="72.9541%" y="821" width="0.1996%" height="15" fill="rgb(248,202,8)" fg:x="731" fg:w="2"/><text x="73.2041%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.20%)</title><rect x="72.9541%" y="805" width="0.1996%" height="15" fill="rgb(206,104,37)" fg:x="731" fg:w="2"/><text x="73.2041%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.20%)</title><rect x="72.9541%" y="789" width="0.1996%" height="15" fill="rgb(223,8,27)" fg:x="731" fg:w="2"/><text x="73.2041%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.20%)</title><rect x="72.9541%" y="773" width="0.1996%" height="15" fill="rgb(216,217,28)" fg:x="731" fg:w="2"/><text x="73.2041%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.20%)</title><rect x="72.9541%" y="757" width="0.1996%" height="15" fill="rgb(249,199,1)" fg:x="731" fg:w="2"/><text x="73.2041%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.20%)</title><rect x="72.9541%" y="741" width="0.1996%" height="15" fill="rgb(240,85,17)" fg:x="731" fg:w="2"/><text x="73.2041%" y="751.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="73.0539%" y="725" width="0.0998%" height="15" fill="rgb(206,108,45)" fg:x="732" fg:w="1"/><text x="73.3039%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (7 samples, 0.70%)</title><rect x="72.7545%" y="949" width="0.6986%" height="15" fill="rgb(245,210,41)" fg:x="729" fg:w="7"/><text x="73.0045%" y="959.50"></text></g><g><title>&lt;http::uri::Uri as core::str::traits::FromStr&gt;::from_str (7 samples, 0.70%)</title><rect x="72.7545%" y="933" width="0.6986%" height="15" fill="rgb(206,13,37)" fg:x="729" fg:w="7"/><text x="73.0045%" y="943.50"></text></g><g><title>&lt;http::uri::Uri as core::convert::TryFrom&lt;&amp;[u8]&gt;&gt;::try_from (7 samples, 0.70%)</title><rect x="72.7545%" y="917" width="0.6986%" height="15" fill="rgb(250,61,18)" fg:x="729" fg:w="7"/><text x="73.0045%" y="927.50"></text></g><g><title>http::uri::Uri::from_shared (3 samples, 0.30%)</title><rect x="73.1537%" y="901" width="0.2994%" height="15" fill="rgb(235,172,48)" fg:x="733" fg:w="3"/><text x="73.4037%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.30%)</title><rect x="73.1537%" y="885" width="0.2994%" height="15" fill="rgb(249,201,17)" fg:x="733" fg:w="3"/><text x="73.4037%" y="895.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="73.1537%" y="869" width="0.2994%" height="15" fill="rgb(219,208,6)" fg:x="733" fg:w="3"/><text x="73.4037%" y="879.50"></text></g><g><title>free (3 samples, 0.30%)</title><rect x="73.1537%" y="853" width="0.2994%" height="15" fill="rgb(248,31,23)" fg:x="733" fg:w="3"/><text x="73.4037%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="73.3533%" y="837" width="0.0998%" height="15" fill="rgb(245,15,42)" fg:x="735" fg:w="1"/><text x="73.6033%" y="847.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_entry (1 samples, 0.10%)</title><rect x="73.4531%" y="901" width="0.0998%" height="15" fill="rgb(222,217,39)" fg:x="736" fg:w="1"/><text x="73.7031%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="73.4531%" y="885" width="0.0998%" height="15" fill="rgb(210,219,27)" fg:x="736" fg:w="1"/><text x="73.7031%" y="895.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="73.4531%" y="869" width="0.0998%" height="15" fill="rgb(252,166,36)" fg:x="736" fg:w="1"/><text x="73.7031%" y="879.50"></text></g><g><title>http::header::map::Pos::resolve (6 samples, 0.60%)</title><rect x="73.5529%" y="901" width="0.5988%" height="15" fill="rgb(245,132,34)" fg:x="737" fg:w="6"/><text x="73.8029%" y="911.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (8 samples, 0.80%)</title><rect x="73.4531%" y="949" width="0.7984%" height="15" fill="rgb(236,54,3)" fg:x="736" fg:w="8"/><text x="73.7031%" y="959.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::append (8 samples, 0.80%)</title><rect x="73.4531%" y="933" width="0.7984%" height="15" fill="rgb(241,173,43)" fg:x="736" fg:w="8"/><text x="73.7031%" y="943.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (8 samples, 0.80%)</title><rect x="73.4531%" y="917" width="0.7984%" height="15" fill="rgb(215,190,9)" fg:x="736" fg:w="8"/><text x="73.7031%" y="927.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.10%)</title><rect x="74.1517%" y="901" width="0.0998%" height="15" fill="rgb(242,101,16)" fg:x="743" fg:w="1"/><text x="74.4017%" y="911.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="74.2515%" y="949" width="0.0998%" height="15" fill="rgb(223,190,21)" fg:x="744" fg:w="1"/><text x="74.5015%" y="959.50"></text></g><g><title>http::header::name::HeaderName::from_bytes (2 samples, 0.20%)</title><rect x="74.3513%" y="949" width="0.1996%" height="15" fill="rgb(215,228,25)" fg:x="745" fg:w="2"/><text x="74.6013%" y="959.50"></text></g><g><title>http::method::Method::from_bytes (3 samples, 0.30%)</title><rect x="74.5509%" y="949" width="0.2994%" height="15" fill="rgb(225,36,22)" fg:x="747" fg:w="3"/><text x="74.8009%" y="959.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="75.1497%" y="917" width="0.0998%" height="15" fill="rgb(251,106,46)" fg:x="753" fg:w="1"/><text x="75.3997%" y="927.50"></text></g><g><title>&lt;httparse::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="75.4491%" y="901" width="0.0998%" height="15" fill="rgb(208,90,1)" fg:x="756" fg:w="1"/><text x="75.6991%" y="911.50"></text></g><g><title>httparse::parse_headers_iter_uninit (5 samples, 0.50%)</title><rect x="75.2495%" y="917" width="0.4990%" height="15" fill="rgb(243,10,4)" fg:x="754" fg:w="5"/><text x="75.4995%" y="927.50"></text></g><g><title>httparse::simd::runtime::match_header_value_vectored (2 samples, 0.20%)</title><rect x="75.5489%" y="901" width="0.1996%" height="15" fill="rgb(212,137,27)" fg:x="757" fg:w="2"/><text x="75.7989%" y="911.50"></text></g><g><title>httparse::simd::sse42::match_header_value_batch_16 (1 samples, 0.10%)</title><rect x="75.6487%" y="885" width="0.0998%" height="15" fill="rgb(231,220,49)" fg:x="758" fg:w="1"/><text x="75.8987%" y="895.50"></text></g><g><title>httparse::simd::sse42::match_header_value_char_16_sse (1 samples, 0.10%)</title><rect x="75.6487%" y="869" width="0.0998%" height="15" fill="rgb(237,96,20)" fg:x="758" fg:w="1"/><text x="75.8987%" y="879.50"></text></g><g><title>core::core_arch::x86::sse3::_mm_lddqu_si128 (1 samples, 0.10%)</title><rect x="75.6487%" y="853" width="0.0998%" height="15" fill="rgb(239,229,30)" fg:x="758" fg:w="1"/><text x="75.8987%" y="863.50"></text></g><g><title>httparse::Request::parse_with_uninit_headers (10 samples, 1.00%)</title><rect x="74.8503%" y="949" width="0.9980%" height="15" fill="rgb(219,65,33)" fg:x="750" fg:w="10"/><text x="75.1003%" y="959.50"></text></g><g><title>httparse::Request::parse_with_config_and_uninit_headers (9 samples, 0.90%)</title><rect x="74.9501%" y="933" width="0.8982%" height="15" fill="rgb(243,134,7)" fg:x="751" fg:w="9"/><text x="75.2001%" y="943.50"></text></g><g><title>httparse::parse_version (1 samples, 0.10%)</title><rect x="75.7485%" y="917" width="0.0998%" height="15" fill="rgb(216,177,54)" fg:x="759" fg:w="1"/><text x="75.9985%" y="927.50"></text></g><g><title>hyper::proto::h1::role::record_header_indices (1 samples, 0.10%)</title><rect x="75.8483%" y="949" width="0.0998%" height="15" fill="rgb(211,160,20)" fg:x="760" fg:w="1"/><text x="76.0983%" y="959.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (53 samples, 5.29%)</title><rect x="70.7585%" y="965" width="5.2894%" height="15" fill="rgb(239,85,39)" fg:x="709" fg:w="53"/><text x="71.0085%" y="975.50">&lt;hyper..</text></g><g><title>tracing_core::dispatcher::has_been_set (1 samples, 0.10%)</title><rect x="75.9481%" y="949" width="0.0998%" height="15" fill="rgb(232,125,22)" fg:x="761" fg:w="1"/><text x="76.1981%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.10%)</title><rect x="75.9481%" y="933" width="0.0998%" height="15" fill="rgb(244,57,34)" fg:x="761" fg:w="1"/><text x="76.1981%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="75.9481%" y="917" width="0.0998%" height="15" fill="rgb(214,203,32)" fg:x="761" fg:w="1"/><text x="76.1981%" y="927.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.10%)</title><rect x="76.0479%" y="917" width="0.0998%" height="15" fill="rgb(207,58,43)" fg:x="762" fg:w="1"/><text x="76.2979%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.20%)</title><rect x="76.0479%" y="965" width="0.1996%" height="15" fill="rgb(215,193,15)" fg:x="762" fg:w="2"/><text x="76.2979%" y="975.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="76.0479%" y="949" width="0.1996%" height="15" fill="rgb(232,15,44)" fg:x="762" fg:w="2"/><text x="76.2979%" y="959.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.20%)</title><rect x="76.0479%" y="933" width="0.1996%" height="15" fill="rgb(212,3,48)" fg:x="762" fg:w="2"/><text x="76.2979%" y="943.50"></text></g><g><title>tracing_core::metadata::Metadata::name (1 samples, 0.10%)</title><rect x="76.1477%" y="917" width="0.0998%" height="15" fill="rgb(218,128,7)" fg:x="763" fg:w="1"/><text x="76.3977%" y="927.50"></text></g><g><title>tracing::__macro_support::__disabled_span (1 samples, 0.10%)</title><rect x="76.2475%" y="965" width="0.0998%" height="15" fill="rgb(226,216,39)" fg:x="764" fg:w="1"/><text x="76.4975%" y="975.50"></text></g><g><title>tracing::span::Span::new_disabled (1 samples, 0.10%)</title><rect x="76.2475%" y="949" width="0.0998%" height="15" fill="rgb(243,47,51)" fg:x="764" fg:w="1"/><text x="76.4975%" y="959.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.10%)</title><rect x="76.3473%" y="965" width="0.0998%" height="15" fill="rgb(241,183,40)" fg:x="765" fg:w="1"/><text x="76.5973%" y="975.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.10%)</title><rect x="76.3473%" y="949" width="0.0998%" height="15" fill="rgb(231,217,32)" fg:x="765" fg:w="1"/><text x="76.5973%" y="959.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.10%)</title><rect x="76.4471%" y="949" width="0.0998%" height="15" fill="rgb(229,61,38)" fg:x="766" fg:w="1"/><text x="76.6971%" y="959.50"></text></g><g><title>tracing::span::Span::record_all (2 samples, 0.20%)</title><rect x="76.4471%" y="965" width="0.1996%" height="15" fill="rgb(225,210,5)" fg:x="766" fg:w="2"/><text x="76.6971%" y="975.50"></text></g><g><title>tracing::span::Span::log (1 samples, 0.10%)</title><rect x="76.5469%" y="949" width="0.0998%" height="15" fill="rgb(231,79,45)" fg:x="767" fg:w="1"/><text x="76.7969%" y="959.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (234 samples, 23.35%)</title><rect x="53.3932%" y="997" width="23.3533%" height="15" fill="rgb(224,100,7)" fg:x="535" fg:w="234"/><text x="53.6432%" y="1007.50">hyper::proto::h1::io::Buffered&lt;T,B&gt;::..</text></g><g><title>hyper::proto::h1::role::parse_headers (64 samples, 6.39%)</title><rect x="70.3593%" y="981" width="6.3872%" height="15" fill="rgb(241,198,18)" fg:x="705" fg:w="64"/><text x="70.6093%" y="991.50">hyper::p..</text></g><g><title>tracing_core::metadata::Metadata::fields (1 samples, 0.10%)</title><rect x="76.6467%" y="965" width="0.0998%" height="15" fill="rgb(252,97,53)" fg:x="768" fg:w="1"/><text x="76.8967%" y="975.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read (344 samples, 34.33%)</title><rect x="42.5150%" y="1045" width="34.3313%" height="15" fill="rgb(220,88,7)" fg:x="426" fg:w="344"/><text x="42.7650%" y="1055.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_r..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head (305 samples, 30.44%)</title><rect x="46.4072%" y="1029" width="30.4391%" height="15" fill="rgb(213,176,14)" fg:x="465" fg:w="305"/><text x="46.6572%" y="1039.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;:..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (238 samples, 23.75%)</title><rect x="53.0938%" y="1013" width="23.7525%" height="15" fill="rgb(246,73,7)" fg:x="532" fg:w="238"/><text x="53.3438%" y="1023.50">hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::p..</text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 0.10%)</title><rect x="76.7465%" y="997" width="0.0998%" height="15" fill="rgb(245,64,36)" fg:x="769" fg:w="1"/><text x="76.9965%" y="1007.50"></text></g><g><title>&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;D,E&gt; as http_body::Body&gt;::size_hint (1 samples, 0.10%)</title><rect x="77.4451%" y="1029" width="0.0998%" height="15" fill="rgb(245,80,10)" fg:x="776" fg:w="1"/><text x="77.6951%" y="1039.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as http_body::Body&gt;::size_hint (1 samples, 0.10%)</title><rect x="77.4451%" y="1013" width="0.0998%" height="15" fill="rgb(232,107,50)" fg:x="776" fg:w="1"/><text x="77.6951%" y="1023.50"></text></g><g><title>&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::size_hint (1 samples, 0.10%)</title><rect x="77.4451%" y="997" width="0.0998%" height="15" fill="rgb(253,3,0)" fg:x="776" fg:w="1"/><text x="77.6951%" y="1007.50"></text></g><g><title>&lt;http_body::full::Full&lt;D&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;B&gt;&gt;&gt;::from (1 samples, 0.10%)</title><rect x="78.0439%" y="837" width="0.0998%" height="15" fill="rgb(212,99,53)" fg:x="782" fg:w="1"/><text x="78.2939%" y="847.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.10%)</title><rect x="78.0439%" y="821" width="0.0998%" height="15" fill="rgb(249,111,54)" fg:x="782" fg:w="1"/><text x="78.2939%" y="831.50"></text></g><g><title>bytes::bytes::Bytes::from_static (1 samples, 0.10%)</title><rect x="78.0439%" y="805" width="0.0998%" height="15" fill="rgb(249,55,30)" fg:x="782" fg:w="1"/><text x="78.2939%" y="815.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_entry (1 samples, 0.10%)</title><rect x="78.2435%" y="789" width="0.0998%" height="15" fill="rgb(237,47,42)" fg:x="784" fg:w="1"/><text x="78.4935%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="78.2435%" y="773" width="0.0998%" height="15" fill="rgb(211,20,18)" fg:x="784" fg:w="1"/><text x="78.4935%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="78.2435%" y="757" width="0.0998%" height="15" fill="rgb(231,203,46)" fg:x="784" fg:w="1"/><text x="78.4935%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.10%)</title><rect x="78.5429%" y="773" width="0.0998%" height="15" fill="rgb(237,142,3)" fg:x="787" fg:w="1"/><text x="78.7929%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="78.5429%" y="757" width="0.0998%" height="15" fill="rgb(241,107,1)" fg:x="787" fg:w="1"/><text x="78.7929%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="78.5429%" y="741" width="0.0998%" height="15" fill="rgb(229,83,13)" fg:x="787" fg:w="1"/><text x="78.7929%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="78.5429%" y="725" width="0.0998%" height="15" fill="rgb(241,91,40)" fg:x="787" fg:w="1"/><text x="78.7929%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="78.5429%" y="709" width="0.0998%" height="15" fill="rgb(225,3,45)" fg:x="787" fg:w="1"/><text x="78.7929%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="78.5429%" y="693" width="0.0998%" height="15" fill="rgb(244,223,14)" fg:x="787" fg:w="1"/><text x="78.7929%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="78.5429%" y="677" width="0.0998%" height="15" fill="rgb(224,124,37)" fg:x="787" fg:w="1"/><text x="78.7929%" y="687.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="78.5429%" y="661" width="0.0998%" height="15" fill="rgb(251,171,30)" fg:x="787" fg:w="1"/><text x="78.7929%" y="671.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.10%)</title><rect x="78.6427%" y="773" width="0.0998%" height="15" fill="rgb(236,46,54)" fg:x="788" fg:w="1"/><text x="78.8927%" y="783.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.10%)</title><rect x="78.6427%" y="757" width="0.0998%" height="15" fill="rgb(245,213,5)" fg:x="788" fg:w="1"/><text x="78.8927%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="78.6427%" y="741" width="0.0998%" height="15" fill="rgb(230,144,27)" fg:x="788" fg:w="1"/><text x="78.8927%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="78.6427%" y="725" width="0.0998%" height="15" fill="rgb(220,86,6)" fg:x="788" fg:w="1"/><text x="78.8927%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="78.6427%" y="709" width="0.0998%" height="15" fill="rgb(240,20,13)" fg:x="788" fg:w="1"/><text x="78.8927%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="78.6427%" y="693" width="0.0998%" height="15" fill="rgb(217,89,34)" fg:x="788" fg:w="1"/><text x="78.8927%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="78.6427%" y="677" width="0.0998%" height="15" fill="rgb(229,13,5)" fg:x="788" fg:w="1"/><text x="78.8927%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="78.6427%" y="661" width="0.0998%" height="15" fill="rgb(244,67,35)" fg:x="788" fg:w="1"/><text x="78.8927%" y="671.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="78.6427%" y="645" width="0.0998%" height="15" fill="rgb(221,40,2)" fg:x="788" fg:w="1"/><text x="78.8927%" y="655.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::reserve_one (5 samples, 0.50%)</title><rect x="78.3433%" y="789" width="0.4990%" height="15" fill="rgb(237,157,21)" fg:x="785" fg:w="5"/><text x="78.5933%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="78.7425%" y="773" width="0.0998%" height="15" fill="rgb(222,94,11)" fg:x="789" fg:w="1"/><text x="78.9925%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="78.7425%" y="757" width="0.0998%" height="15" fill="rgb(249,113,6)" fg:x="789" fg:w="1"/><text x="78.9925%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="78.7425%" y="741" width="0.0998%" height="15" fill="rgb(238,137,36)" fg:x="789" fg:w="1"/><text x="78.9925%" y="751.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (8 samples, 0.80%)</title><rect x="78.1437%" y="837" width="0.7984%" height="15" fill="rgb(210,102,26)" fg:x="783" fg:w="8"/><text x="78.3937%" y="847.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::insert (8 samples, 0.80%)</title><rect x="78.1437%" y="821" width="0.7984%" height="15" fill="rgb(218,30,30)" fg:x="783" fg:w="8"/><text x="78.3937%" y="831.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert2 (7 samples, 0.70%)</title><rect x="78.2435%" y="805" width="0.6986%" height="15" fill="rgb(214,67,26)" fg:x="784" fg:w="7"/><text x="78.4935%" y="815.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.10%)</title><rect x="78.8423%" y="789" width="0.0998%" height="15" fill="rgb(251,9,53)" fg:x="790" fg:w="1"/><text x="79.0923%" y="799.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (15 samples, 1.50%)</title><rect x="77.9441%" y="917" width="1.4970%" height="15" fill="rgb(228,204,25)" fg:x="781" fg:w="15"/><text x="78.1941%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 1.50%)</title><rect x="77.9441%" y="901" width="1.4970%" height="15" fill="rgb(207,153,8)" fg:x="781" fg:w="15"/><text x="78.1941%" y="911.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(),B&gt;&gt;::call::{{closure}} (14 samples, 1.40%)</title><rect x="78.0439%" y="885" width="1.3972%" height="15" fill="rgb(242,9,16)" fg:x="782" fg:w="14"/><text x="78.2939%" y="895.50"></text></g><g><title>&lt;&amp;str as axum_core::response::into_response::IntoResponse&gt;::into_response (14 samples, 1.40%)</title><rect x="78.0439%" y="869" width="1.3972%" height="15" fill="rgb(217,211,10)" fg:x="782" fg:w="14"/><text x="78.2939%" y="879.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::into_response::IntoResponse&gt;::into_response (14 samples, 1.40%)</title><rect x="78.0439%" y="853" width="1.3972%" height="15" fill="rgb(219,228,52)" fg:x="782" fg:w="14"/><text x="78.2939%" y="863.50"></text></g><g><title>http::header::value::HeaderValue::from_static (5 samples, 0.50%)</title><rect x="78.9421%" y="837" width="0.4990%" height="15" fill="rgb(231,92,29)" fg:x="791" fg:w="5"/><text x="79.1921%" y="847.50"></text></g><g><title>http::header::value::is_visible_ascii (3 samples, 0.30%)</title><rect x="79.1417%" y="821" width="0.2994%" height="15" fill="rgb(232,8,23)" fg:x="793" fg:w="3"/><text x="79.3917%" y="831.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 1.80%)</title><rect x="77.7445%" y="981" width="1.7964%" height="15" fill="rgb(216,211,34)" fg:x="779" fg:w="18"/><text x="77.9945%" y="991.50">&lt;..</text></g><g><title>&lt;axum::handler::future::IntoServiceFuture&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 1.80%)</title><rect x="77.7445%" y="965" width="1.7964%" height="15" fill="rgb(236,151,0)" fg:x="779" fg:w="18"/><text x="77.9945%" y="975.50">&lt;..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 1.70%)</title><rect x="77.8443%" y="949" width="1.6966%" height="15" fill="rgb(209,168,3)" fg:x="780" fg:w="17"/><text x="78.0943%" y="959.50"></text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (17 samples, 1.70%)</title><rect x="77.8443%" y="933" width="1.6966%" height="15" fill="rgb(208,129,28)" fg:x="780" fg:w="17"/><text x="78.0943%" y="943.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project_replace (1 samples, 0.10%)</title><rect x="79.4411%" y="917" width="0.0998%" height="15" fill="rgb(229,78,22)" fg:x="796" fg:w="1"/><text x="79.6911%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;futures_util::future::future::map::Map&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;+core::marker::Send&gt;&gt;,fn(http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;) .&gt; core::result::Result&lt;http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="79.4411%" y="901" width="0.0998%" height="15" fill="rgb(228,187,13)" fg:x="796" fg:w="1"/><text x="79.6911%" y="911.50"></text></g><g><title>&lt;pin_project_lite::__private::UnsafeOverwriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="79.4411%" y="885" width="0.0998%" height="15" fill="rgb(240,119,24)" fg:x="796" fg:w="1"/><text x="79.6911%" y="895.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="79.4411%" y="869" width="0.0998%" height="15" fill="rgb(209,194,42)" fg:x="796" fg:w="1"/><text x="79.6911%" y="879.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.10%)</title><rect x="79.6407%" y="821" width="0.0998%" height="15" fill="rgb(247,200,46)" fg:x="798" fg:w="1"/><text x="79.8907%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.10%)</title><rect x="79.6407%" y="805" width="0.0998%" height="15" fill="rgb(218,76,16)" fg:x="798" fg:w="1"/><text x="79.8907%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.10%)</title><rect x="79.6407%" y="789" width="0.0998%" height="15" fill="rgb(225,21,48)" fg:x="798" fg:w="1"/><text x="79.8907%" y="799.50"></text></g><g><title>free (1 samples, 0.10%)</title><rect x="79.6407%" y="773" width="0.0998%" height="15" fill="rgb(239,223,50)" fg:x="798" fg:w="1"/><text x="79.8907%" y="783.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.60%)</title><rect x="79.7405%" y="677" width="0.5988%" height="15" fill="rgb(244,45,21)" fg:x="799" fg:w="6"/><text x="79.9905%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.60%)</title><rect x="79.7405%" y="661" width="0.5988%" height="15" fill="rgb(232,33,43)" fg:x="799" fg:w="6"/><text x="79.9905%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.60%)</title><rect x="79.7405%" y="645" width="0.5988%" height="15" fill="rgb(209,8,3)" fg:x="799" fg:w="6"/><text x="79.9905%" y="655.50"></text></g><g><title>free (6 samples, 0.60%)</title><rect x="79.7405%" y="629" width="0.5988%" height="15" fill="rgb(214,25,53)" fg:x="799" fg:w="6"/><text x="79.9905%" y="639.50"></text></g><g><title>[libc.so.6] (3 samples, 0.30%)</title><rect x="80.0399%" y="613" width="0.2994%" height="15" fill="rgb(254,186,54)" fg:x="802" fg:w="3"/><text x="80.2899%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (4 samples, 0.40%)</title><rect x="80.3393%" y="677" width="0.3992%" height="15" fill="rgb(208,174,49)" fg:x="805" fg:w="4"/><text x="80.5893%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;str&gt;&gt; (4 samples, 0.40%)</title><rect x="80.3393%" y="661" width="0.3992%" height="15" fill="rgb(233,191,51)" fg:x="805" fg:w="4"/><text x="80.5893%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.40%)</title><rect x="80.3393%" y="645" width="0.3992%" height="15" fill="rgb(222,134,10)" fg:x="805" fg:w="4"/><text x="80.5893%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::extract::request_parts::OriginalUri&gt; (1 samples, 0.10%)</title><rect x="80.7385%" y="677" width="0.0998%" height="15" fill="rgb(230,226,20)" fg:x="809" fg:w="1"/><text x="80.9885%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12 samples, 1.20%)</title><rect x="79.7405%" y="741" width="1.1976%" height="15" fill="rgb(251,111,25)" fg:x="799" fg:w="12"/><text x="79.9905%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12 samples, 1.20%)</title><rect x="79.7405%" y="725" width="1.1976%" height="15" fill="rgb(224,40,46)" fg:x="799" fg:w="12"/><text x="79.9905%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt; (12 samples, 1.20%)</title><rect x="79.7405%" y="709" width="1.1976%" height="15" fill="rgb(236,108,47)" fg:x="799" fg:w="12"/><text x="79.9905%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (12 samples, 1.20%)</title><rect x="79.7405%" y="693" width="1.1976%" height="15" fill="rgb(234,93,0)" fg:x="799" fg:w="12"/><text x="79.9905%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::url_params::UrlParams&gt; (1 samples, 0.10%)</title><rect x="80.8383%" y="677" width="0.0998%" height="15" fill="rgb(224,213,32)" fg:x="810" fg:w="1"/><text x="81.0883%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::sync::Arc&lt;str&gt;,axum::util::PercentDecodedStr)&gt;&gt; (1 samples, 0.10%)</title><rect x="80.8383%" y="661" width="0.0998%" height="15" fill="rgb(251,11,48)" fg:x="810" fg:w="1"/><text x="81.0883%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="80.8383%" y="645" width="0.0998%" height="15" fill="rgb(236,173,5)" fg:x="810" fg:w="1"/><text x="81.0883%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (14 samples, 1.40%)</title><rect x="79.6407%" y="869" width="1.3972%" height="15" fill="rgb(230,95,12)" fg:x="798" fg:w="14"/><text x="79.8907%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (14 samples, 1.40%)</title><rect x="79.6407%" y="853" width="1.3972%" height="15" fill="rgb(232,209,1)" fg:x="798" fg:w="14"/><text x="79.8907%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (14 samples, 1.40%)</title><rect x="79.6407%" y="837" width="1.3972%" height="15" fill="rgb(232,6,1)" fg:x="798" fg:w="14"/><text x="79.8907%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (13 samples, 1.30%)</title><rect x="79.7405%" y="821" width="1.2974%" height="15" fill="rgb(210,224,50)" fg:x="799" fg:w="13"/><text x="79.9905%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (13 samples, 1.30%)</title><rect x="79.7405%" y="805" width="1.2974%" height="15" fill="rgb(228,127,35)" fg:x="799" fg:w="13"/><text x="79.9905%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (13 samples, 1.30%)</title><rect x="79.7405%" y="789" width="1.2974%" height="15" fill="rgb(245,102,45)" fg:x="799" fg:w="13"/><text x="79.9905%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.30%)</title><rect x="79.7405%" y="773" width="1.2974%" height="15" fill="rgb(214,1,49)" fg:x="799" fg:w="13"/><text x="79.9905%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (13 samples, 1.30%)</title><rect x="79.7405%" y="757" width="1.2974%" height="15" fill="rgb(226,163,40)" fg:x="799" fg:w="13"/><text x="79.9905%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.10%)</title><rect x="80.9381%" y="741" width="0.0998%" height="15" fill="rgb(239,212,28)" fg:x="811" fg:w="1"/><text x="81.1881%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[http::header::map::Pos]&gt;&gt; (4 samples, 0.40%)</title><rect x="81.1377%" y="853" width="0.3992%" height="15" fill="rgb(220,20,13)" fg:x="813" fg:w="4"/><text x="81.3877%" y="863.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.40%)</title><rect x="81.1377%" y="837" width="0.3992%" height="15" fill="rgb(210,164,35)" fg:x="813" fg:w="4"/><text x="81.3877%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.40%)</title><rect x="81.1377%" y="821" width="0.3992%" height="15" fill="rgb(248,109,41)" fg:x="813" fg:w="4"/><text x="81.3877%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.40%)</title><rect x="81.1377%" y="805" width="0.3992%" height="15" fill="rgb(238,23,50)" fg:x="813" fg:w="4"/><text x="81.3877%" y="815.50"></text></g><g><title>free (4 samples, 0.40%)</title><rect x="81.1377%" y="789" width="0.3992%" height="15" fill="rgb(211,48,49)" fg:x="813" fg:w="4"/><text x="81.3877%" y="799.50"></text></g><g><title>__lll_lock_wait_private (2 samples, 0.20%)</title><rect x="83.2335%" y="517" width="0.1996%" height="15" fill="rgb(223,36,21)" fg:x="834" fg:w="2"/><text x="83.4835%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.20%)</title><rect x="83.2335%" y="501" width="0.1996%" height="15" fill="rgb(207,123,46)" fg:x="834" fg:w="2"/><text x="83.4835%" y="511.50"></text></g><g><title>do_syscall_64 (2 samples, 0.20%)</title><rect x="83.2335%" y="485" width="0.1996%" height="15" fill="rgb(240,218,32)" fg:x="834" fg:w="2"/><text x="83.4835%" y="495.50"></text></g><g><title>__x64_sys_futex (2 samples, 0.20%)</title><rect x="83.2335%" y="469" width="0.1996%" height="15" fill="rgb(252,5,43)" fg:x="834" fg:w="2"/><text x="83.4835%" y="479.50"></text></g><g><title>do_futex (2 samples, 0.20%)</title><rect x="83.2335%" y="453" width="0.1996%" height="15" fill="rgb(252,84,19)" fg:x="834" fg:w="2"/><text x="83.4835%" y="463.50"></text></g><g><title>futex_wait (2 samples, 0.20%)</title><rect x="83.2335%" y="437" width="0.1996%" height="15" fill="rgb(243,152,39)" fg:x="834" fg:w="2"/><text x="83.4835%" y="447.50"></text></g><g><title>futex_wait_queue_me (2 samples, 0.20%)</title><rect x="83.2335%" y="421" width="0.1996%" height="15" fill="rgb(234,160,15)" fg:x="834" fg:w="2"/><text x="83.4835%" y="431.50"></text></g><g><title>schedule (2 samples, 0.20%)</title><rect x="83.2335%" y="405" width="0.1996%" height="15" fill="rgb(237,34,20)" fg:x="834" fg:w="2"/><text x="83.4835%" y="415.50"></text></g><g><title>__schedule (2 samples, 0.20%)</title><rect x="83.2335%" y="389" width="0.1996%" height="15" fill="rgb(229,97,13)" fg:x="834" fg:w="2"/><text x="83.4835%" y="399.50"></text></g><g><title>finish_task_switch.isra.0 (2 samples, 0.20%)</title><rect x="83.2335%" y="373" width="0.1996%" height="15" fill="rgb(234,71,50)" fg:x="834" fg:w="2"/><text x="83.4835%" y="383.50"></text></g><g><title>up_read (1 samples, 0.10%)</title><rect x="83.4331%" y="437" width="0.0998%" height="15" fill="rgb(253,155,4)" fg:x="836" fg:w="1"/><text x="83.6831%" y="447.50"></text></g><g><title>rwsem_wake.isra.0 (1 samples, 0.10%)</title><rect x="83.4331%" y="421" width="0.0998%" height="15" fill="rgb(222,185,37)" fg:x="836" fg:w="1"/><text x="83.6831%" y="431.50"></text></g><g><title>wake_up_q (1 samples, 0.10%)</title><rect x="83.4331%" y="405" width="0.0998%" height="15" fill="rgb(251,177,13)" fg:x="836" fg:w="1"/><text x="83.6831%" y="415.50"></text></g><g><title>try_to_wake_up (1 samples, 0.10%)</title><rect x="83.4331%" y="389" width="0.0998%" height="15" fill="rgb(250,179,40)" fg:x="836" fg:w="1"/><text x="83.6831%" y="399.50"></text></g><g><title>__lock_text_start (1 samples, 0.10%)</title><rect x="83.4331%" y="373" width="0.0998%" height="15" fill="rgb(242,44,2)" fg:x="836" fg:w="1"/><text x="83.6831%" y="383.50"></text></g><g><title>[libc.so.6] (24 samples, 2.40%)</title><rect x="82.0359%" y="533" width="2.3952%" height="15" fill="rgb(216,177,13)" fg:x="822" fg:w="24"/><text x="82.2859%" y="543.50">[l..</text></g><g><title>__madvise (10 samples, 1.00%)</title><rect x="83.4331%" y="517" width="0.9980%" height="15" fill="rgb(216,106,43)" fg:x="836" fg:w="10"/><text x="83.6831%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 1.00%)</title><rect x="83.4331%" y="501" width="0.9980%" height="15" fill="rgb(216,183,2)" fg:x="836" fg:w="10"/><text x="83.6831%" y="511.50"></text></g><g><title>do_syscall_64 (10 samples, 1.00%)</title><rect x="83.4331%" y="485" width="0.9980%" height="15" fill="rgb(249,75,3)" fg:x="836" fg:w="10"/><text x="83.6831%" y="495.50"></text></g><g><title>__x64_sys_madvise (10 samples, 1.00%)</title><rect x="83.4331%" y="469" width="0.9980%" height="15" fill="rgb(219,67,39)" fg:x="836" fg:w="10"/><text x="83.6831%" y="479.50"></text></g><g><title>do_madvise.part.0 (10 samples, 1.00%)</title><rect x="83.4331%" y="453" width="0.9980%" height="15" fill="rgb(253,228,2)" fg:x="836" fg:w="10"/><text x="83.6831%" y="463.50"></text></g><g><title>zap_page_range (9 samples, 0.90%)</title><rect x="83.5329%" y="437" width="0.8982%" height="15" fill="rgb(235,138,27)" fg:x="837" fg:w="9"/><text x="83.7829%" y="447.50"></text></g><g><title>tlb_finish_mmu (9 samples, 0.90%)</title><rect x="83.5329%" y="421" width="0.8982%" height="15" fill="rgb(236,97,51)" fg:x="837" fg:w="9"/><text x="83.7829%" y="431.50"></text></g><g><title>flush_tlb_mm_range (9 samples, 0.90%)</title><rect x="83.5329%" y="405" width="0.8982%" height="15" fill="rgb(240,80,30)" fg:x="837" fg:w="9"/><text x="83.7829%" y="415.50"></text></g><g><title>native_flush_tlb_multi (9 samples, 0.90%)</title><rect x="83.5329%" y="389" width="0.8982%" height="15" fill="rgb(230,178,19)" fg:x="837" fg:w="9"/><text x="83.7829%" y="399.50"></text></g><g><title>on_each_cpu_cond_mask (9 samples, 0.90%)</title><rect x="83.5329%" y="373" width="0.8982%" height="15" fill="rgb(210,190,27)" fg:x="837" fg:w="9"/><text x="83.7829%" y="383.50"></text></g><g><title>smp_call_function_many_cond (9 samples, 0.90%)</title><rect x="83.5329%" y="357" width="0.8982%" height="15" fill="rgb(222,107,31)" fg:x="837" fg:w="9"/><text x="83.7829%" y="367.50"></text></g><g><title>native_send_call_func_ipi (8 samples, 0.80%)</title><rect x="83.6327%" y="341" width="0.7984%" height="15" fill="rgb(216,127,34)" fg:x="838" fg:w="8"/><text x="83.8827%" y="351.50"></text></g><g><title>x2apic_send_IPI_mask (8 samples, 0.80%)</title><rect x="83.6327%" y="325" width="0.7984%" height="15" fill="rgb(234,116,52)" fg:x="838" fg:w="8"/><text x="83.8827%" y="335.50"></text></g><g><title>__x2apic_send_IPI_mask (8 samples, 0.80%)</title><rect x="83.6327%" y="309" width="0.7984%" height="15" fill="rgb(222,124,15)" fg:x="838" fg:w="8"/><text x="83.8827%" y="319.50"></text></g><g><title>futex_wake (2 samples, 0.20%)</title><rect x="84.4311%" y="453" width="0.1996%" height="15" fill="rgb(231,179,28)" fg:x="846" fg:w="2"/><text x="84.6811%" y="463.50"></text></g><g><title>wake_up_q (2 samples, 0.20%)</title><rect x="84.4311%" y="437" width="0.1996%" height="15" fill="rgb(226,93,45)" fg:x="846" fg:w="2"/><text x="84.6811%" y="447.50"></text></g><g><title>try_to_wake_up (2 samples, 0.20%)</title><rect x="84.4311%" y="421" width="0.1996%" height="15" fill="rgb(215,8,51)" fg:x="846" fg:w="2"/><text x="84.6811%" y="431.50"></text></g><g><title>__lock_text_start (2 samples, 0.20%)</title><rect x="84.4311%" y="405" width="0.1996%" height="15" fill="rgb(223,106,5)" fg:x="846" fg:w="2"/><text x="84.6811%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 3.19%)</title><rect x="81.5369%" y="837" width="3.1936%" height="15" fill="rgb(250,191,5)" fg:x="817" fg:w="32"/><text x="81.7869%" y="847.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;[http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;]&gt; (32 samples, 3.19%)</title><rect x="81.5369%" y="821" width="3.1936%" height="15" fill="rgb(242,132,44)" fg:x="817" fg:w="32"/><text x="81.7869%" y="831.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt; (32 samples, 3.19%)</title><rect x="81.5369%" y="805" width="3.1936%" height="15" fill="rgb(251,152,29)" fg:x="817" fg:w="32"/><text x="81.7869%" y="815.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (32 samples, 3.19%)</title><rect x="81.5369%" y="789" width="3.1936%" height="15" fill="rgb(218,179,5)" fg:x="817" fg:w="32"/><text x="81.7869%" y="799.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (32 samples, 3.19%)</title><rect x="81.5369%" y="773" width="3.1936%" height="15" fill="rgb(227,67,19)" fg:x="817" fg:w="32"/><text x="81.7869%" y="783.50">cor..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (32 samples, 3.19%)</title><rect x="81.5369%" y="757" width="3.1936%" height="15" fill="rgb(233,119,31)" fg:x="817" fg:w="32"/><text x="81.7869%" y="767.50">&lt;by..</text></g><g><title>bytes::bytes_mut::shared_v_drop (32 samples, 3.19%)</title><rect x="81.5369%" y="741" width="3.1936%" height="15" fill="rgb(241,120,22)" fg:x="817" fg:w="32"/><text x="81.7869%" y="751.50">byt..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (31 samples, 3.09%)</title><rect x="81.6367%" y="725" width="3.0938%" height="15" fill="rgb(224,102,30)" fg:x="818" fg:w="31"/><text x="81.8867%" y="735.50">&lt;co..</text></g><g><title>bytes::bytes_mut::shared_v_drop::{{closure}} (31 samples, 3.09%)</title><rect x="81.6367%" y="709" width="3.0938%" height="15" fill="rgb(210,164,37)" fg:x="818" fg:w="31"/><text x="81.8867%" y="719.50">byt..</text></g><g><title>bytes::bytes_mut::release_shared (31 samples, 3.09%)</title><rect x="81.6367%" y="693" width="3.0938%" height="15" fill="rgb(226,191,16)" fg:x="818" fg:w="31"/><text x="81.8867%" y="703.50">byt..</text></g><g><title>core::mem::drop (29 samples, 2.89%)</title><rect x="81.8363%" y="677" width="2.8942%" height="15" fill="rgb(214,40,45)" fg:x="820" fg:w="29"/><text x="82.0863%" y="687.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (29 samples, 2.89%)</title><rect x="81.8363%" y="661" width="2.8942%" height="15" fill="rgb(244,29,26)" fg:x="820" fg:w="29"/><text x="82.0863%" y="671.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (29 samples, 2.89%)</title><rect x="81.8363%" y="645" width="2.8942%" height="15" fill="rgb(216,16,5)" fg:x="820" fg:w="29"/><text x="82.0863%" y="655.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (29 samples, 2.89%)</title><rect x="81.8363%" y="629" width="2.8942%" height="15" fill="rgb(249,76,35)" fg:x="820" fg:w="29"/><text x="82.0863%" y="639.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (29 samples, 2.89%)</title><rect x="81.8363%" y="613" width="2.8942%" height="15" fill="rgb(207,11,44)" fg:x="820" fg:w="29"/><text x="82.0863%" y="623.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 2.89%)</title><rect x="81.8363%" y="597" width="2.8942%" height="15" fill="rgb(228,190,49)" fg:x="820" fg:w="29"/><text x="82.0863%" y="607.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 2.89%)</title><rect x="81.8363%" y="581" width="2.8942%" height="15" fill="rgb(214,173,12)" fg:x="820" fg:w="29"/><text x="82.0863%" y="591.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (29 samples, 2.89%)</title><rect x="81.8363%" y="565" width="2.8942%" height="15" fill="rgb(218,26,35)" fg:x="820" fg:w="29"/><text x="82.0863%" y="575.50">al..</text></g><g><title>free (29 samples, 2.89%)</title><rect x="81.8363%" y="549" width="2.8942%" height="15" fill="rgb(220,200,19)" fg:x="820" fg:w="29"/><text x="82.0863%" y="559.50">fr..</text></g><g><title>__lll_lock_wake_private (3 samples, 0.30%)</title><rect x="84.4311%" y="533" width="0.2994%" height="15" fill="rgb(239,95,49)" fg:x="846" fg:w="3"/><text x="84.6811%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.30%)</title><rect x="84.4311%" y="517" width="0.2994%" height="15" fill="rgb(235,85,53)" fg:x="846" fg:w="3"/><text x="84.6811%" y="527.50"></text></g><g><title>do_syscall_64 (3 samples, 0.30%)</title><rect x="84.4311%" y="501" width="0.2994%" height="15" fill="rgb(233,133,31)" fg:x="846" fg:w="3"/><text x="84.6811%" y="511.50"></text></g><g><title>__x64_sys_futex (3 samples, 0.30%)</title><rect x="84.4311%" y="485" width="0.2994%" height="15" fill="rgb(218,25,20)" fg:x="846" fg:w="3"/><text x="84.6811%" y="495.50"></text></g><g><title>do_futex (3 samples, 0.30%)</title><rect x="84.4311%" y="469" width="0.2994%" height="15" fill="rgb(252,210,38)" fg:x="846" fg:w="3"/><text x="84.6811%" y="479.50"></text></g><g><title>hash_futex (1 samples, 0.10%)</title><rect x="84.6307%" y="453" width="0.0998%" height="15" fill="rgb(242,134,21)" fg:x="848" fg:w="1"/><text x="84.8807%" y="463.50"></text></g><g><title>&lt;F as axum::handler::Handler&lt;(),B&gt;&gt;::call (56 samples, 5.59%)</title><rect x="79.6407%" y="917" width="5.5888%" height="15" fill="rgb(213,28,48)" fg:x="798" fg:w="56"/><text x="79.8907%" y="927.50">&lt;F as a..</text></g><g><title>core::ptr::drop_in_place&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt; (56 samples, 5.59%)</title><rect x="79.6407%" y="901" width="5.5888%" height="15" fill="rgb(250,196,2)" fg:x="798" fg:w="56"/><text x="79.8907%" y="911.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;http::request::Parts&gt; (56 samples, 5.59%)</title><rect x="79.6407%" y="885" width="5.5888%" height="15" fill="rgb(227,5,17)" fg:x="798" fg:w="56"/><text x="79.8907%" y="895.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (42 samples, 4.19%)</title><rect x="81.0379%" y="869" width="4.1916%" height="15" fill="rgb(221,226,24)" fg:x="812" fg:w="42"/><text x="81.2879%" y="879.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (37 samples, 3.69%)</title><rect x="81.5369%" y="853" width="3.6926%" height="15" fill="rgb(211,5,48)" fg:x="817" fg:w="37"/><text x="81.7869%" y="863.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;http::header::map::Bucket&lt;http::header::value::HeaderValue&gt;&gt;&gt; (5 samples, 0.50%)</title><rect x="84.7305%" y="837" width="0.4990%" height="15" fill="rgb(219,150,6)" fg:x="849" fg:w="5"/><text x="84.9805%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.50%)</title><rect x="84.7305%" y="821" width="0.4990%" height="15" fill="rgb(251,46,16)" fg:x="849" fg:w="5"/><text x="84.9805%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.50%)</title><rect x="84.7305%" y="805" width="0.4990%" height="15" fill="rgb(220,204,40)" fg:x="849" fg:w="5"/><text x="84.9805%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.50%)</title><rect x="84.7305%" y="789" width="0.4990%" height="15" fill="rgb(211,85,2)" fg:x="849" fg:w="5"/><text x="84.9805%" y="799.50"></text></g><g><title>free (5 samples, 0.50%)</title><rect x="84.7305%" y="773" width="0.4990%" height="15" fill="rgb(229,17,7)" fg:x="849" fg:w="5"/><text x="84.9805%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="85.1297%" y="757" width="0.0998%" height="15" fill="rgb(239,72,28)" fg:x="853" fg:w="1"/><text x="85.3797%" y="767.50"></text></g><g><title>&lt;axum::handler::into_service::IntoService&lt;H,T,B&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (57 samples, 5.69%)</title><rect x="79.6407%" y="933" width="5.6886%" height="15" fill="rgb(230,47,54)" fg:x="798" fg:w="57"/><text x="79.8907%" y="943.50">&lt;axum::..</text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="85.2295%" y="917" width="0.0998%" height="15" fill="rgb(214,50,8)" fg:x="854" fg:w="1"/><text x="85.4795%" y="927.50"></text></g><g><title>&lt;tower::util::boxed_clone::BoxCloneService&lt;T,U,E&gt; as tower_service::Service&lt;T&gt;&gt;::call (59 samples, 5.89%)</title><rect x="79.5409%" y="981" width="5.8882%" height="15" fill="rgb(216,198,43)" fg:x="797" fg:w="59"/><text x="79.7909%" y="991.50">&lt;tower:..</text></g><g><title>&lt;alloc::boxed::Box&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (59 samples, 5.89%)</title><rect x="79.5409%" y="965" width="5.8882%" height="15" fill="rgb(234,20,35)" fg:x="797" fg:w="59"/><text x="79.7909%" y="975.50">&lt;alloc:..</text></g><g><title>&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (59 samples, 5.89%)</title><rect x="79.5409%" y="949" width="5.8882%" height="15" fill="rgb(254,45,19)" fg:x="797" fg:w="59"/><text x="79.7909%" y="959.50">&lt;tower:..</text></g><g><title>tower::util::boxed_clone::BoxCloneService&lt;T,U,E&gt;::new::{{closure}} (1 samples, 0.10%)</title><rect x="85.3293%" y="933" width="0.0998%" height="15" fill="rgb(219,14,44)" fg:x="855" fg:w="1"/><text x="85.5793%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.10%)</title><rect x="85.3293%" y="917" width="0.0998%" height="15" fill="rgb(217,220,26)" fg:x="855" fg:w="1"/><text x="85.5793%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.10%)</title><rect x="85.3293%" y="901" width="0.0998%" height="15" fill="rgb(213,158,28)" fg:x="855" fg:w="1"/><text x="85.5793%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="85.3293%" y="885" width="0.0998%" height="15" fill="rgb(252,51,52)" fg:x="855" fg:w="1"/><text x="85.5793%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="85.3293%" y="869" width="0.0998%" height="15" fill="rgb(246,89,16)" fg:x="855" fg:w="1"/><text x="85.5793%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="85.3293%" y="853" width="0.0998%" height="15" fill="rgb(216,158,49)" fg:x="855" fg:w="1"/><text x="85.5793%" y="863.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="85.3293%" y="837" width="0.0998%" height="15" fill="rgb(236,107,19)" fg:x="855" fg:w="1"/><text x="85.5793%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (3 samples, 0.30%)</title><rect x="85.5289%" y="965" width="0.2994%" height="15" fill="rgb(228,185,30)" fg:x="857" fg:w="3"/><text x="85.7789%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="85.7285%" y="949" width="0.0998%" height="15" fill="rgb(246,134,8)" fg:x="859" fg:w="1"/><text x="85.9785%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;+core::marker::Send&gt;&gt; (1 samples, 0.10%)</title><rect x="85.7285%" y="933" width="0.0998%" height="15" fill="rgb(214,143,50)" fg:x="859" fg:w="1"/><text x="85.9785%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::handler::future::IntoServiceFuture&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;+core::marker::Send&gt;&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="85.7285%" y="917" width="0.0998%" height="15" fill="rgb(228,75,8)" fg:x="859" fg:w="1"/><text x="85.9785%" y="927.50"></text></g><g><title>&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (83 samples, 8.28%)</title><rect x="77.6447%" y="997" width="8.2834%" height="15" fill="rgb(207,175,4)" fg:x="778" fg:w="83"/><text x="77.8947%" y="1007.50">&lt;tower::util..</text></g><g><title>core::pin::Pin&lt;P&gt;::set (5 samples, 0.50%)</title><rect x="85.4291%" y="981" width="0.4990%" height="15" fill="rgb(205,108,24)" fg:x="856" fg:w="5"/><text x="85.6791%" y="991.50"></text></g><g><title>free (1 samples, 0.10%)</title><rect x="85.8283%" y="965" width="0.0998%" height="15" fill="rgb(244,120,49)" fg:x="860" fg:w="1"/><text x="86.0783%" y="975.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="85.8283%" y="949" width="0.0998%" height="15" fill="rgb(223,47,38)" fg:x="860" fg:w="1"/><text x="86.0783%" y="959.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::contains_key (1 samples, 0.10%)</title><rect x="85.9281%" y="981" width="0.0998%" height="15" fill="rgb(229,179,11)" fg:x="861" fg:w="1"/><text x="86.1781%" y="991.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::as_header_name::Sealed&gt;::find (1 samples, 0.10%)</title><rect x="85.9281%" y="965" width="0.0998%" height="15" fill="rgb(231,122,1)" fg:x="861" fg:w="1"/><text x="86.1781%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::find (1 samples, 0.10%)</title><rect x="85.9281%" y="949" width="0.0998%" height="15" fill="rgb(245,119,9)" fg:x="861" fg:w="1"/><text x="86.1781%" y="959.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.10%)</title><rect x="85.9281%" y="933" width="0.0998%" height="15" fill="rgb(241,163,25)" fg:x="861" fg:w="1"/><text x="86.1781%" y="943.50"></text></g><g><title>&lt;http::header::name::HeaderName as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="85.9281%" y="917" width="0.0998%" height="15" fill="rgb(217,214,3)" fg:x="861" fg:w="1"/><text x="86.1781%" y="927.50"></text></g><g><title>&lt;http::header::name::Repr&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="85.9281%" y="901" width="0.0998%" height="15" fill="rgb(240,86,28)" fg:x="861" fg:w="1"/><text x="86.1781%" y="911.50"></text></g><g><title>&lt;http::header::name::StandardHeader as core::hash::Hash&gt;::hash (1 samples, 0.10%)</title><rect x="85.9281%" y="885" width="0.0998%" height="15" fill="rgb(215,47,9)" fg:x="861" fg:w="1"/><text x="86.1781%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.10%)</title><rect x="85.9281%" y="869" width="0.0998%" height="15" fill="rgb(252,25,45)" fg:x="861" fg:w="1"/><text x="86.1781%" y="879.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.10%)</title><rect x="85.9281%" y="853" width="0.0998%" height="15" fill="rgb(251,164,9)" fg:x="861" fg:w="1"/><text x="86.1781%" y="863.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.10%)</title><rect x="85.9281%" y="837" width="0.0998%" height="15" fill="rgb(233,194,0)" fg:x="861" fg:w="1"/><text x="86.1781%" y="847.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (1 samples, 0.10%)</title><rect x="85.9281%" y="821" width="0.0998%" height="15" fill="rgb(249,111,24)" fg:x="861" fg:w="1"/><text x="86.1781%" y="831.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.10%)</title><rect x="85.9281%" y="805" width="0.0998%" height="15" fill="rgb(250,223,3)" fg:x="861" fg:w="1"/><text x="86.1781%" y="815.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert_entry (1 samples, 0.10%)</title><rect x="86.0279%" y="933" width="0.0998%" height="15" fill="rgb(236,178,37)" fg:x="862" fg:w="1"/><text x="86.2779%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.10%)</title><rect x="86.0279%" y="917" width="0.0998%" height="15" fill="rgb(241,158,50)" fg:x="862" fg:w="1"/><text x="86.2779%" y="927.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="86.0279%" y="901" width="0.0998%" height="15" fill="rgb(213,121,41)" fg:x="862" fg:w="1"/><text x="86.2779%" y="911.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert (2 samples, 0.20%)</title><rect x="86.0279%" y="981" width="0.1996%" height="15" fill="rgb(240,92,3)" fg:x="862" fg:w="2"/><text x="86.2779%" y="991.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::insert (2 samples, 0.20%)</title><rect x="86.0279%" y="965" width="0.1996%" height="15" fill="rgb(205,123,3)" fg:x="862" fg:w="2"/><text x="86.2779%" y="975.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::insert2 (2 samples, 0.20%)</title><rect x="86.0279%" y="949" width="0.1996%" height="15" fill="rgb(205,97,47)" fg:x="862" fg:w="2"/><text x="86.2779%" y="959.50"></text></g><g><title>http::header::map::Pos::resolve (1 samples, 0.10%)</title><rect x="86.1277%" y="933" width="0.0998%" height="15" fill="rgb(247,152,14)" fg:x="863" fg:w="1"/><text x="86.3777%" y="943.50"></text></g><g><title>axum::routing::route::set_content_length (4 samples, 0.40%)</title><rect x="85.9281%" y="997" width="0.3992%" height="15" fill="rgb(248,195,53)" fg:x="861" fg:w="4"/><text x="86.1781%" y="1007.50"></text></g><g><title>itoa::Buffer::format (1 samples, 0.10%)</title><rect x="86.2275%" y="981" width="0.0998%" height="15" fill="rgb(226,201,16)" fg:x="864" fg:w="1"/><text x="86.4775%" y="991.50"></text></g><g><title>itoa::&lt;impl itoa::private::Sealed for u64&gt;::write (1 samples, 0.10%)</title><rect x="86.2275%" y="965" width="0.0998%" height="15" fill="rgb(205,98,0)" fg:x="864" fg:w="1"/><text x="86.4775%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="86.2275%" y="949" width="0.0998%" height="15" fill="rgb(214,191,48)" fg:x="864" fg:w="1"/><text x="86.4775%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.10%)</title><rect x="86.4271%" y="949" width="0.0998%" height="15" fill="rgb(237,112,39)" fg:x="866" fg:w="1"/><text x="86.6771%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.10%)</title><rect x="86.4271%" y="933" width="0.0998%" height="15" fill="rgb(247,203,27)" fg:x="866" fg:w="1"/><text x="86.6771%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.10%)</title><rect x="86.4271%" y="917" width="0.0998%" height="15" fill="rgb(235,124,28)" fg:x="866" fg:w="1"/><text x="86.6771%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="86.4271%" y="901" width="0.0998%" height="15" fill="rgb(208,207,46)" fg:x="866" fg:w="1"/><text x="86.6771%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (1 samples, 0.10%)</title><rect x="86.4271%" y="885" width="0.0998%" height="15" fill="rgb(234,176,4)" fg:x="866" fg:w="1"/><text x="86.6771%" y="895.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="86.5269%" y="869" width="0.0998%" height="15" fill="rgb(230,133,28)" fg:x="867" fg:w="1"/><text x="86.7769%" y="879.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="86.6267%" y="869" width="0.0998%" height="15" fill="rgb(211,137,40)" fg:x="868" fg:w="1"/><text x="86.8767%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (6 samples, 0.60%)</title><rect x="86.4271%" y="981" width="0.5988%" height="15" fill="rgb(254,35,13)" fg:x="866" fg:w="6"/><text x="86.6771%" y="991.50"></text></g><g><title>http::extensions::Extensions::insert::{{closure}} (6 samples, 0.60%)</title><rect x="86.4271%" y="965" width="0.5988%" height="15" fill="rgb(225,49,51)" fg:x="866" fg:w="6"/><text x="86.6771%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.50%)</title><rect x="86.5269%" y="949" width="0.4990%" height="15" fill="rgb(251,10,15)" fg:x="867" fg:w="5"/><text x="86.7769%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.50%)</title><rect x="86.5269%" y="933" width="0.4990%" height="15" fill="rgb(228,207,15)" fg:x="867" fg:w="5"/><text x="86.7769%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.50%)</title><rect x="86.5269%" y="917" width="0.4990%" height="15" fill="rgb(241,99,19)" fg:x="867" fg:w="5"/><text x="86.7769%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.50%)</title><rect x="86.5269%" y="901" width="0.4990%" height="15" fill="rgb(207,104,49)" fg:x="867" fg:w="5"/><text x="86.7769%" y="911.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.50%)</title><rect x="86.5269%" y="885" width="0.4990%" height="15" fill="rgb(234,99,18)" fg:x="867" fg:w="5"/><text x="86.7769%" y="895.50"></text></g><g><title>malloc (3 samples, 0.30%)</title><rect x="86.7265%" y="869" width="0.2994%" height="15" fill="rgb(213,191,49)" fg:x="869" fg:w="3"/><text x="86.9765%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.10%)</title><rect x="87.0259%" y="949" width="0.0998%" height="15" fill="rgb(210,226,19)" fg:x="872" fg:w="1"/><text x="87.2759%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="87.0259%" y="933" width="0.0998%" height="15" fill="rgb(229,97,18)" fg:x="872" fg:w="1"/><text x="87.2759%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="87.0259%" y="917" width="0.0998%" height="15" fill="rgb(211,167,15)" fg:x="872" fg:w="1"/><text x="87.2759%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.10%)</title><rect x="87.0259%" y="901" width="0.0998%" height="15" fill="rgb(210,169,34)" fg:x="872" fg:w="1"/><text x="87.2759%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.10%)</title><rect x="87.0259%" y="885" width="0.0998%" height="15" fill="rgb(241,121,31)" fg:x="872" fg:w="1"/><text x="87.2759%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.10%)</title><rect x="87.1257%" y="837" width="0.0998%" height="15" fill="rgb(232,40,11)" fg:x="873" fg:w="1"/><text x="87.3757%" y="847.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.10%)</title><rect x="87.1257%" y="821" width="0.0998%" height="15" fill="rgb(205,86,26)" fg:x="873" fg:w="1"/><text x="87.3757%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="87.1257%" y="805" width="0.0998%" height="15" fill="rgb(231,126,28)" fg:x="873" fg:w="1"/><text x="87.3757%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="87.1257%" y="789" width="0.0998%" height="15" fill="rgb(219,221,18)" fg:x="873" fg:w="1"/><text x="87.3757%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="87.1257%" y="773" width="0.0998%" height="15" fill="rgb(211,40,0)" fg:x="873" fg:w="1"/><text x="87.3757%" y="783.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="87.1257%" y="757" width="0.0998%" height="15" fill="rgb(239,85,43)" fg:x="873" fg:w="1"/><text x="87.3757%" y="767.50"></text></g><g><title>&lt;axum::routing::route::RouteFuture&lt;B,E&gt; as core::future::future::Future&gt;::poll (98 samples, 9.78%)</title><rect x="77.5449%" y="1013" width="9.7804%" height="15" fill="rgb(231,55,21)" fg:x="777" fg:w="98"/><text x="77.7949%" y="1023.50">&lt;axum::routing..</text></g><g><title>http::extensions::Extensions::insert (10 samples, 1.00%)</title><rect x="86.3273%" y="997" width="0.9980%" height="15" fill="rgb(225,184,43)" fg:x="865" fg:w="10"/><text x="86.5773%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.30%)</title><rect x="87.0259%" y="981" width="0.2994%" height="15" fill="rgb(251,158,41)" fg:x="872" fg:w="3"/><text x="87.2759%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.30%)</title><rect x="87.0259%" y="965" width="0.2994%" height="15" fill="rgb(234,159,37)" fg:x="872" fg:w="3"/><text x="87.2759%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.20%)</title><rect x="87.1257%" y="949" width="0.1996%" height="15" fill="rgb(216,204,22)" fg:x="873" fg:w="2"/><text x="87.3757%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.20%)</title><rect x="87.1257%" y="933" width="0.1996%" height="15" fill="rgb(214,17,3)" fg:x="873" fg:w="2"/><text x="87.3757%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.20%)</title><rect x="87.1257%" y="917" width="0.1996%" height="15" fill="rgb(212,111,17)" fg:x="873" fg:w="2"/><text x="87.3757%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.20%)</title><rect x="87.1257%" y="901" width="0.1996%" height="15" fill="rgb(221,157,24)" fg:x="873" fg:w="2"/><text x="87.3757%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.20%)</title><rect x="87.1257%" y="885" width="0.1996%" height="15" fill="rgb(252,16,13)" fg:x="873" fg:w="2"/><text x="87.3757%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.20%)</title><rect x="87.1257%" y="869" width="0.1996%" height="15" fill="rgb(221,62,2)" fg:x="873" fg:w="2"/><text x="87.3757%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.20%)</title><rect x="87.1257%" y="853" width="0.1996%" height="15" fill="rgb(247,87,22)" fg:x="873" fg:w="2"/><text x="87.3757%" y="863.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (1 samples, 0.10%)</title><rect x="87.2255%" y="837" width="0.0998%" height="15" fill="rgb(215,73,9)" fg:x="874" fg:w="1"/><text x="87.4755%" y="847.50"></text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (101 samples, 10.08%)</title><rect x="77.5449%" y="1029" width="10.0798%" height="15" fill="rgb(207,175,33)" fg:x="777" fg:w="101"/><text x="77.7949%" y="1039.50">&lt;hyper::proto::..</text></g><g><title>core::pin::Pin&lt;P&gt;::set (3 samples, 0.30%)</title><rect x="87.3253%" y="1013" width="0.2994%" height="15" fill="rgb(243,129,54)" fg:x="875" fg:w="3"/><text x="87.5753%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::route::RouteFuture&lt;hyper::body::body::Body,core::convert::Infallible&gt;&gt;&gt; (2 samples, 0.20%)</title><rect x="87.4251%" y="997" width="0.1996%" height="15" fill="rgb(227,119,45)" fg:x="876" fg:w="2"/><text x="87.6751%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;axum::routing::route::RouteFuture&lt;hyper::body::body::Body,core::convert::Infallible&gt;&gt; (1 samples, 0.10%)</title><rect x="87.5250%" y="981" width="0.0998%" height="15" fill="rgb(205,109,36)" fg:x="877" fg:w="1"/><text x="87.7750%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bytes::bytes::Bytes&gt;&gt; (1 samples, 0.10%)</title><rect x="87.5250%" y="965" width="0.0998%" height="15" fill="rgb(205,6,39)" fg:x="877" fg:w="1"/><text x="87.7750%" y="975.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="87.6248%" y="1029" width="0.0998%" height="15" fill="rgb(221,32,16)" fg:x="878" fg:w="1"/><text x="87.8748%" y="1039.50"></text></g><g><title>free (1 samples, 0.10%)</title><rect x="87.7246%" y="1029" width="0.0998%" height="15" fill="rgb(228,144,50)" fg:x="879" fg:w="1"/><text x="87.9746%" y="1039.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_buffer_body (1 samples, 0.10%)</title><rect x="87.8244%" y="1029" width="0.0998%" height="15" fill="rgb(229,201,53)" fg:x="880" fg:w="1"/><text x="88.0744%" y="1039.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (1 samples, 0.10%)</title><rect x="87.8244%" y="1013" width="0.0998%" height="15" fill="rgb(249,153,27)" fg:x="880" fg:w="1"/><text x="88.0744%" y="1023.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::can_buffer (1 samples, 0.10%)</title><rect x="87.8244%" y="997" width="0.0998%" height="15" fill="rgb(227,106,25)" fg:x="880" fg:w="1"/><text x="88.0744%" y="1007.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="87.8244%" y="981" width="0.0998%" height="15" fill="rgb(230,65,29)" fg:x="880" fg:w="1"/><text x="88.0744%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="87.8244%" y="965" width="0.0998%" height="15" fill="rgb(221,57,46)" fg:x="880" fg:w="1"/><text x="88.0744%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.10%)</title><rect x="87.8244%" y="949" width="0.0998%" height="15" fill="rgb(229,161,17)" fg:x="880" fg:w="1"/><text x="88.0744%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.10%)</title><rect x="87.8244%" y="933" width="0.0998%" height="15" fill="rgb(222,213,11)" fg:x="880" fg:w="1"/><text x="88.0744%" y="943.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining::{{closure}} (1 samples, 0.10%)</title><rect x="87.8244%" y="917" width="0.0998%" height="15" fill="rgb(235,35,13)" fg:x="880" fg:w="1"/><text x="88.0744%" y="927.50"></text></g><g><title>&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.10%)</title><rect x="87.8244%" y="901" width="0.0998%" height="15" fill="rgb(233,158,34)" fg:x="880" fg:w="1"/><text x="88.0744%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::can_write_head (1 samples, 0.10%)</title><rect x="87.9242%" y="1029" width="0.0998%" height="15" fill="rgb(215,151,48)" fg:x="881" fg:w="1"/><text x="88.1742%" y="1039.50"></text></g><g><title>hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_headers_buf (1 samples, 0.10%)</title><rect x="87.9242%" y="1013" width="0.0998%" height="15" fill="rgb(229,84,14)" fg:x="881" fg:w="1"/><text x="88.1742%" y="1023.50"></text></g><g><title>bytes::buf::buf_impl::Buf::has_remaining (1 samples, 0.10%)</title><rect x="87.9242%" y="997" width="0.0998%" height="15" fill="rgb(229,68,14)" fg:x="881" fg:w="1"/><text x="88.1742%" y="1007.50"></text></g><g><title>&lt;hyper::common::buf::BufList&lt;T&gt; as bytes::buf::buf_impl::Buf&gt;::remaining (1 samples, 0.10%)</title><rect x="87.9242%" y="981" width="0.0998%" height="15" fill="rgb(243,106,26)" fg:x="881" fg:w="1"/><text x="88.1742%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.10%)</title><rect x="87.9242%" y="965" width="0.0998%" height="15" fill="rgb(206,45,38)" fg:x="881" fg:w="1"/><text x="88.1742%" y="975.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.10%)</title><rect x="87.9242%" y="949" width="0.0998%" height="15" fill="rgb(226,6,15)" fg:x="881" fg:w="1"/><text x="88.1742%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="87.9242%" y="933" width="0.0998%" height="15" fill="rgb(232,22,54)" fg:x="881" fg:w="1"/><text x="88.1742%" y="943.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.10%)</title><rect x="87.9242%" y="917" width="0.0998%" height="15" fill="rgb(229,222,32)" fg:x="881" fg:w="1"/><text x="88.1742%" y="927.50"></text></g><g><title>alloc::collections::vec_deque::ring_slices::RingSlices::ring_slices (1 samples, 0.10%)</title><rect x="87.9242%" y="901" width="0.0998%" height="15" fill="rgb(228,62,29)" fg:x="881" fg:w="1"/><text x="88.1742%" y="911.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_body_and_end (2 samples, 0.20%)</title><rect x="88.0240%" y="1029" width="0.1996%" height="15" fill="rgb(251,103,34)" fg:x="882" fg:w="2"/><text x="88.2740%" y="1039.50"></text></g><g><title>hyper::proto::h1::encode::Encoder::encode_and_end (2 samples, 0.20%)</title><rect x="88.0240%" y="1013" width="0.1996%" height="15" fill="rgb(233,12,30)" fg:x="882" fg:w="2"/><text x="88.2740%" y="1023.50"></text></g><g><title>hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (2 samples, 0.20%)</title><rect x="88.0240%" y="997" width="0.1996%" height="15" fill="rgb(238,52,0)" fg:x="882" fg:w="2"/><text x="88.2740%" y="1007.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 0.10%)</title><rect x="88.1238%" y="981" width="0.0998%" height="15" fill="rgb(223,98,5)" fg:x="883" fg:w="1"/><text x="88.3738%" y="991.50"></text></g><g><title>hyper::proto::h1::conn::State::wants_keep_alive (2 samples, 0.20%)</title><rect x="88.3234%" y="997" width="0.1996%" height="15" fill="rgb(228,75,37)" fg:x="885" fg:w="2"/><text x="88.5734%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.60%)</title><rect x="89.0220%" y="965" width="0.5988%" height="15" fill="rgb(205,115,49)" fg:x="892" fg:w="6"/><text x="89.2720%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="89.6208%" y="869" width="0.1996%" height="15" fill="rgb(250,154,43)" fg:x="898" fg:w="2"/><text x="89.8708%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.20%)</title><rect x="89.6208%" y="853" width="0.1996%" height="15" fill="rgb(226,43,29)" fg:x="898" fg:w="2"/><text x="89.8708%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.10%)</title><rect x="89.7206%" y="837" width="0.0998%" height="15" fill="rgb(249,228,39)" fg:x="899" fg:w="1"/><text x="89.9706%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.10%)</title><rect x="89.7206%" y="821" width="0.0998%" height="15" fill="rgb(216,79,43)" fg:x="899" fg:w="1"/><text x="89.9706%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt; (1 samples, 0.10%)</title><rect x="89.7206%" y="805" width="0.0998%" height="15" fill="rgb(228,95,12)" fg:x="899" fg:w="1"/><text x="89.9706%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;&gt; (1 samples, 0.10%)</title><rect x="89.7206%" y="789" width="0.0998%" height="15" fill="rgb(249,221,15)" fg:x="899" fg:w="1"/><text x="89.9706%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&amp;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::task::core::Header&gt;&gt;&gt; (1 samples, 0.10%)</title><rect x="89.7206%" y="773" width="0.0998%" height="15" fill="rgb(233,34,13)" fg:x="899" fg:w="1"/><text x="89.9706%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::extensions::Extensions&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="965" width="0.3992%" height="15" fill="rgb(214,103,39)" fg:x="898" fg:w="4"/><text x="89.8708%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt;&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="949" width="0.3992%" height="15" fill="rgb(251,126,39)" fg:x="898" fg:w="4"/><text x="89.8708%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt;&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="933" width="0.3992%" height="15" fill="rgb(214,216,36)" fg:x="898" fg:w="4"/><text x="89.8708%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="917" width="0.3992%" height="15" fill="rgb(220,221,8)" fg:x="898" fg:w="4"/><text x="89.8708%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;,core::hash::BuildHasherDefault&lt;http::extensions::IdHasher&gt;&gt;&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="901" width="0.3992%" height="15" fill="rgb(240,216,3)" fg:x="898" fg:w="4"/><text x="89.8708%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Sync+core::marker::Send&gt;)&gt;&gt; (4 samples, 0.40%)</title><rect x="89.6208%" y="885" width="0.3992%" height="15" fill="rgb(232,218,17)" fg:x="898" fg:w="4"/><text x="89.8708%" y="895.50"></text></g><g><title>free (2 samples, 0.20%)</title><rect x="89.8204%" y="869" width="0.1996%" height="15" fill="rgb(229,163,45)" fg:x="900" fg:w="2"/><text x="90.0704%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="89.9202%" y="853" width="0.0998%" height="15" fill="rgb(231,110,42)" fg:x="901" fg:w="1"/><text x="90.1702%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (3 samples, 0.30%)</title><rect x="90.0200%" y="965" width="0.2994%" height="15" fill="rgb(208,170,48)" fg:x="902" fg:w="3"/><text x="90.2700%" y="975.50"></text></g><g><title>http::extensions::Extensions::get (1 samples, 0.10%)</title><rect x="90.3194%" y="965" width="0.0998%" height="15" fill="rgb(239,116,25)" fg:x="905" fg:w="1"/><text x="90.5694%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.10%)</title><rect x="90.3194%" y="949" width="0.0998%" height="15" fill="rgb(219,200,50)" fg:x="905" fg:w="1"/><text x="90.5694%" y="959.50"></text></g><g><title>http::extensions::Extensions::get::{{closure}} (1 samples, 0.10%)</title><rect x="90.3194%" y="933" width="0.0998%" height="15" fill="rgb(245,200,0)" fg:x="905" fg:w="1"/><text x="90.5694%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.10%)</title><rect x="90.3194%" y="917" width="0.0998%" height="15" fill="rgb(245,119,33)" fg:x="905" fg:w="1"/><text x="90.5694%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.10%)</title><rect x="90.3194%" y="901" width="0.0998%" height="15" fill="rgb(231,125,12)" fg:x="905" fg:w="1"/><text x="90.5694%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.10%)</title><rect x="90.3194%" y="885" width="0.0998%" height="15" fill="rgb(216,96,41)" fg:x="905" fg:w="1"/><text x="90.5694%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.10%)</title><rect x="90.3194%" y="869" width="0.0998%" height="15" fill="rgb(248,43,45)" fg:x="905" fg:w="1"/><text x="90.5694%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.10%)</title><rect x="90.3194%" y="853" width="0.0998%" height="15" fill="rgb(217,222,7)" fg:x="905" fg:w="1"/><text x="90.5694%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.10%)</title><rect x="90.3194%" y="837" width="0.0998%" height="15" fill="rgb(233,28,6)" fg:x="905" fg:w="1"/><text x="90.5694%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.10%)</title><rect x="90.3194%" y="821" width="0.0998%" height="15" fill="rgb(231,218,15)" fg:x="905" fg:w="1"/><text x="90.5694%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.10%)</title><rect x="90.3194%" y="805" width="0.0998%" height="15" fill="rgb(226,171,48)" fg:x="905" fg:w="1"/><text x="90.5694%" y="815.50"></text></g><g><title>&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.00%)</title><rect x="90.7186%" y="933" width="0.9980%" height="15" fill="rgb(235,201,9)" fg:x="909" fg:w="10"/><text x="90.9686%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;http::header::name::HeaderName&gt;&gt; (1 samples, 0.10%)</title><rect x="91.7166%" y="933" width="0.0998%" height="15" fill="rgb(217,80,15)" fg:x="919" fg:w="1"/><text x="91.9666%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;http::header::map::Drain&lt;http::header::value::HeaderValue&gt;&gt; (3 samples, 0.30%)</title><rect x="91.8164%" y="933" width="0.2994%" height="15" fill="rgb(219,152,8)" fg:x="920" fg:w="3"/><text x="92.0664%" y="943.50"></text></g><g><title>&lt;http::header::map::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.30%)</title><rect x="91.8164%" y="917" width="0.2994%" height="15" fill="rgb(243,107,38)" fg:x="920" fg:w="3"/><text x="92.0664%" y="927.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="91.9162%" y="901" width="0.1996%" height="15" fill="rgb(231,17,5)" fg:x="921" fg:w="2"/><text x="92.1662%" y="911.50"></text></g><g><title>&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.20%)</title><rect x="91.9162%" y="885" width="0.1996%" height="15" fill="rgb(209,25,54)" fg:x="921" fg:w="2"/><text x="92.1662%" y="895.50"></text></g><g><title>hyper::proto::h1::role::Server::encode_headers_with_lower_case (19 samples, 1.90%)</title><rect x="90.4192%" y="965" width="1.8962%" height="15" fill="rgb(219,0,2)" fg:x="906" fg:w="19"/><text x="90.6692%" y="975.50">h..</text></g><g><title>hyper::proto::h1::role::Server::encode_headers (19 samples, 1.90%)</title><rect x="90.4192%" y="949" width="1.8962%" height="15" fill="rgb(246,9,5)" fg:x="906" fg:w="19"/><text x="90.6692%" y="959.50">h..</text></g><g><title>core::ptr::drop_in_place&lt;http::header::value::HeaderValue&gt; (2 samples, 0.20%)</title><rect x="92.1158%" y="933" width="0.1996%" height="15" fill="rgb(226,159,4)" fg:x="923" fg:w="2"/><text x="92.3658%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.20%)</title><rect x="92.1158%" y="917" width="0.1996%" height="15" fill="rgb(219,175,34)" fg:x="923" fg:w="2"/><text x="92.3658%" y="927.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.20%)</title><rect x="92.1158%" y="901" width="0.1996%" height="15" fill="rgb(236,10,46)" fg:x="923" fg:w="2"/><text x="92.3658%" y="911.50"></text></g><g><title>free (2 samples, 0.20%)</title><rect x="92.1158%" y="885" width="0.1996%" height="15" fill="rgb(240,211,16)" fg:x="923" fg:w="2"/><text x="92.3658%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.10%)</title><rect x="92.2156%" y="869" width="0.0998%" height="15" fill="rgb(205,3,43)" fg:x="924" fg:w="1"/><text x="92.4656%" y="879.50"></text></g><g><title>&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (40 samples, 3.99%)</title><rect x="88.7226%" y="981" width="3.9920%" height="15" fill="rgb(245,7,22)" fg:x="889" fg:w="40"/><text x="88.9726%" y="991.50">&lt;hyp..</text></g><g><title>hyper::proto::h1::role::extend (4 samples, 0.40%)</title><rect x="92.3154%" y="965" width="0.3992%" height="15" fill="rgb(239,132,32)" fg:x="925" fg:w="4"/><text x="92.5654%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.40%)</title><rect x="92.3154%" y="949" width="0.3992%" height="15" fill="rgb(228,202,34)" fg:x="925" fg:w="4"/><text x="92.5654%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.40%)</title><rect x="92.3154%" y="933" width="0.3992%" height="15" fill="rgb(254,200,22)" fg:x="925" fg:w="4"/><text x="92.5654%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.40%)</title><rect x="92.3154%" y="917" width="0.3992%" height="15" fill="rgb(219,10,39)" fg:x="925" fg:w="4"/><text x="92.5654%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.30%)</title><rect x="92.4152%" y="901" width="0.2994%" height="15" fill="rgb(226,210,39)" fg:x="926" fg:w="3"/><text x="92.6652%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.10%)</title><rect x="92.7146%" y="981" width="0.0998%" height="15" fill="rgb(208,219,16)" fg:x="929" fg:w="1"/><text x="92.9646%" y="991.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="92.7146%" y="965" width="0.0998%" height="15" fill="rgb(216,158,51)" fg:x="929" fg:w="1"/><text x="92.9646%" y="975.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.10%)</title><rect x="92.7146%" y="949" width="0.0998%" height="15" fill="rgb(233,14,44)" fg:x="929" fg:w="1"/><text x="92.9646%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.10%)</title><rect x="92.8144%" y="949" width="0.0998%" height="15" fill="rgb(237,97,39)" fg:x="930" fg:w="1"/><text x="93.0644%" y="959.50"></text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (48 samples, 4.79%)</title><rect x="88.2236%" y="1013" width="4.7904%" height="15" fill="rgb(218,198,43)" fg:x="884" fg:w="48"/><text x="88.4736%" y="1023.50">hyper:..</text></g><g><title>hyper::proto::h1::role::encode_headers (45 samples, 4.49%)</title><rect x="88.5230%" y="997" width="4.4910%" height="15" fill="rgb(231,104,20)" fg:x="887" fg:w="45"/><text x="88.7730%" y="1007.50">hyper..</text></g><g><title>tracing::span::Span::enter (2 samples, 0.20%)</title><rect x="92.8144%" y="981" width="0.1996%" height="15" fill="rgb(254,36,13)" fg:x="930" fg:w="2"/><text x="93.0644%" y="991.50"></text></g><g><title>tracing::span::Span::do_enter (2 samples, 0.20%)</title><rect x="92.8144%" y="965" width="0.1996%" height="15" fill="rgb(248,14,50)" fg:x="930" fg:w="2"/><text x="93.0644%" y="975.50"></text></g><g><title>tracing_core::dispatcher::has_been_set (1 samples, 0.10%)</title><rect x="92.9142%" y="949" width="0.0998%" height="15" fill="rgb(217,107,29)" fg:x="931" fg:w="1"/><text x="93.1642%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.10%)</title><rect x="92.9142%" y="933" width="0.0998%" height="15" fill="rgb(251,169,33)" fg:x="931" fg:w="1"/><text x="93.1642%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="92.9142%" y="917" width="0.0998%" height="15" fill="rgb(217,108,32)" fg:x="931" fg:w="1"/><text x="93.1642%" y="927.50"></text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (852 samples, 85.03%)</title><rect x="8.0838%" y="1061" width="85.0299%" height="15" fill="rgb(219,66,42)" fg:x="81" fg:w="852"/><text x="8.3338%" y="1071.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (163 samples, 16.27%)</title><rect x="76.8463%" y="1045" width="16.2675%" height="15" fill="rgb(206,180,7)" fg:x="770" fg:w="163"/><text x="77.0963%" y="1055.50">hyper::proto::h1::dispatc..</text></g><g><title>hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::write_head (49 samples, 4.89%)</title><rect x="88.2236%" y="1029" width="4.8902%" height="15" fill="rgb(208,226,31)" fg:x="884" fg:w="49"/><text x="88.4736%" y="1039.50">hyper:..</text></g><g><title>hyper::proto::h1::encode::Encoder::is_eof (1 samples, 0.10%)</title><rect x="93.0140%" y="1013" width="0.0998%" height="15" fill="rgb(218,26,49)" fg:x="932" fg:w="1"/><text x="93.2640%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (860 samples, 85.83%)</title><rect x="7.5848%" y="1301" width="85.8283%" height="15" fill="rgb(233,197,48)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1311.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (860 samples, 85.83%)</title><rect x="7.5848%" y="1285" width="85.8283%" height="15" fill="rgb(252,181,51)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (860 samples, 85.83%)</title><rect x="7.5848%" y="1269" width="85.8283%" height="15" fill="rgb(253,90,19)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (860 samples, 85.83%)</title><rect x="7.5848%" y="1253" width="85.8283%" height="15" fill="rgb(215,171,30)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1263.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (860 samples, 85.83%)</title><rect x="7.5848%" y="1237" width="85.8283%" height="15" fill="rgb(214,222,9)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1247.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (860 samples, 85.83%)</title><rect x="7.5848%" y="1221" width="85.8283%" height="15" fill="rgb(223,3,22)" fg:x="76" fg:w="860"/><text x="7.8348%" y="1231.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (858 samples, 85.63%)</title><rect x="7.7844%" y="1205" width="85.6287%" height="15" fill="rgb(225,196,46)" fg:x="78" fg:w="858"/><text x="8.0344%" y="1215.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (858 samples, 85.63%)</title><rect x="7.7844%" y="1189" width="85.6287%" height="15" fill="rgb(209,110,37)" fg:x="78" fg:w="858"/><text x="8.0344%" y="1199.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (858 samples, 85.63%)</title><rect x="7.7844%" y="1173" width="85.6287%" height="15" fill="rgb(249,89,12)" fg:x="78" fg:w="858"/><text x="8.0344%" y="1183.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (858 samples, 85.63%)</title><rect x="7.7844%" y="1157" width="85.6287%" height="15" fill="rgb(226,27,33)" fg:x="78" fg:w="858"/><text x="8.0344%" y="1167.50">&lt;hyper::server::server::new_svc::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (857 samples, 85.53%)</title><rect x="7.8842%" y="1141" width="85.5289%" height="15" fill="rgb(213,82,22)" fg:x="79" fg:w="857"/><text x="8.1342%" y="1151.50">&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll (857 samples, 85.53%)</title><rect x="7.8842%" y="1125" width="85.5289%" height="15" fill="rgb(248,140,0)" fg:x="79" fg:w="857"/><text x="8.1342%" y="1135.50">&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (857 samples, 85.53%)</title><rect x="7.8842%" y="1109" width="85.5289%" height="15" fill="rgb(228,106,3)" fg:x="79" fg:w="857"/><text x="8.1342%" y="1119.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (857 samples, 85.53%)</title><rect x="7.8842%" y="1093" width="85.5289%" height="15" fill="rgb(209,23,37)" fg:x="79" fg:w="857"/><text x="8.1342%" y="1103.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (856 samples, 85.43%)</title><rect x="7.9840%" y="1077" width="85.4291%" height="15" fill="rgb(241,93,50)" fg:x="80" fg:w="856"/><text x="8.2340%" y="1087.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.30%)</title><rect x="93.1138%" y="1061" width="0.2994%" height="15" fill="rgb(253,46,43)" fg:x="933" fg:w="3"/><text x="93.3638%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.30%)</title><rect x="93.1138%" y="1045" width="0.2994%" height="15" fill="rgb(226,206,43)" fg:x="933" fg:w="3"/><text x="93.3638%" y="1055.50"></text></g><g><title>hyper::common::date::update::{{closure}} (3 samples, 0.30%)</title><rect x="93.1138%" y="1029" width="0.2994%" height="15" fill="rgb(217,54,7)" fg:x="933" fg:w="3"/><text x="93.3638%" y="1039.50"></text></g><g><title>hyper::common::date::CachedDate::check (3 samples, 0.30%)</title><rect x="93.1138%" y="1013" width="0.2994%" height="15" fill="rgb(223,5,52)" fg:x="933" fg:w="3"/><text x="93.3638%" y="1023.50"></text></g><g><title>std::time::SystemTime::now (2 samples, 0.20%)</title><rect x="93.2136%" y="997" width="0.1996%" height="15" fill="rgb(206,52,46)" fg:x="934" fg:w="2"/><text x="93.4636%" y="1007.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::SystemTime&gt;::now (2 samples, 0.20%)</title><rect x="93.2136%" y="981" width="0.1996%" height="15" fill="rgb(253,136,11)" fg:x="934" fg:w="2"/><text x="93.4636%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.20%)</title><rect x="93.2136%" y="965" width="0.1996%" height="15" fill="rgb(208,106,33)" fg:x="934" fg:w="2"/><text x="93.4636%" y="975.50"></text></g><g><title>__clock_gettime (2 samples, 0.20%)</title><rect x="93.2136%" y="949" width="0.1996%" height="15" fill="rgb(206,54,4)" fg:x="934" fg:w="2"/><text x="93.4636%" y="959.50"></text></g><g><title>[[vdso]] (2 samples, 0.20%)</title><rect x="93.2136%" y="933" width="0.1996%" height="15" fill="rgb(213,3,15)" fg:x="934" fg:w="2"/><text x="93.4636%" y="943.50"></text></g><g><title>[[vdso]] (1 samples, 0.10%)</title><rect x="93.3134%" y="917" width="0.0998%" height="15" fill="rgb(252,211,39)" fg:x="935" fg:w="1"/><text x="93.5634%" y="927.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.30%)</title><rect x="93.4132%" y="1301" width="0.2994%" height="15" fill="rgb(223,6,36)" fg:x="936" fg:w="3"/><text x="93.6632%" y="1311.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (2 samples, 0.20%)</title><rect x="93.5130%" y="1285" width="0.1996%" height="15" fill="rgb(252,169,45)" fg:x="937" fg:w="2"/><text x="93.7630%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (866 samples, 86.43%)</title><rect x="7.5848%" y="1333" width="86.4271%" height="15" fill="rgb(212,48,26)" fg:x="76" fg:w="866"/><text x="7.8348%" y="1343.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (866 samples, 86.43%)</title><rect x="7.5848%" y="1317" width="86.4271%" height="15" fill="rgb(251,102,48)" fg:x="76" fg:w="866"/><text x="7.8348%" y="1327.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (3 samples, 0.30%)</title><rect x="93.7126%" y="1301" width="0.2994%" height="15" fill="rgb(243,208,16)" fg:x="939" fg:w="3"/><text x="93.9626%" y="1311.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (3 samples, 0.30%)</title><rect x="93.7126%" y="1285" width="0.2994%" height="15" fill="rgb(219,96,24)" fg:x="939" fg:w="3"/><text x="93.9626%" y="1295.50"></text></g><g><title>tokio::runtime::task::state::State::load (2 samples, 0.20%)</title><rect x="93.8124%" y="1269" width="0.1996%" height="15" fill="rgb(219,33,29)" fg:x="940" fg:w="2"/><text x="94.0624%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.20%)</title><rect x="93.8124%" y="1253" width="0.1996%" height="15" fill="rgb(223,176,5)" fg:x="940" fg:w="2"/><text x="94.0624%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.20%)</title><rect x="93.8124%" y="1237" width="0.1996%" height="15" fill="rgb(228,140,14)" fg:x="940" fg:w="2"/><text x="94.0624%" y="1247.50"></text></g><g><title>tokio::coop::budget (872 samples, 87.03%)</title><rect x="7.0858%" y="1461" width="87.0259%" height="15" fill="rgb(217,179,31)" fg:x="71" fg:w="872"/><text x="7.3358%" y="1471.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (872 samples, 87.03%)</title><rect x="7.0858%" y="1445" width="87.0259%" height="15" fill="rgb(230,9,30)" fg:x="71" fg:w="872"/><text x="7.3358%" y="1455.50">tokio::coop::with_budget</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (871 samples, 86.93%)</title><rect x="7.1856%" y="1429" width="86.9261%" height="15" fill="rgb(230,136,20)" fg:x="72" fg:w="871"/><text x="7.4356%" y="1439.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (871 samples, 86.93%)</title><rect x="7.1856%" y="1413" width="86.9261%" height="15" fill="rgb(215,210,22)" fg:x="72" fg:w="871"/><text x="7.4356%" y="1423.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::coop::with_budget::{{closure}} (870 samples, 86.83%)</title><rect x="7.2854%" y="1397" width="86.8263%" height="15" fill="rgb(218,43,5)" fg:x="73" fg:w="870"/><text x="7.5354%" y="1407.50">tokio::coop::with_budget::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (870 samples, 86.83%)</title><rect x="7.2854%" y="1381" width="86.8263%" height="15" fill="rgb(216,11,5)" fg:x="73" fg:w="870"/><text x="7.5354%" y="1391.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (867 samples, 86.53%)</title><rect x="7.5848%" y="1365" width="86.5269%" height="15" fill="rgb(209,82,29)" fg:x="76" fg:w="867"/><text x="7.8348%" y="1375.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (867 samples, 86.53%)</title><rect x="7.5848%" y="1349" width="86.5269%" height="15" fill="rgb(244,115,12)" fg:x="76" fg:w="867"/><text x="7.8348%" y="1359.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (1 samples, 0.10%)</title><rect x="94.0120%" y="1333" width="0.0998%" height="15" fill="rgb(222,82,18)" fg:x="942" fg:w="1"/><text x="94.2620%" y="1343.50"></text></g><g><title>&lt;tokio::runtime::scheduler::multi_thread::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.10%)</title><rect x="94.1118%" y="1429" width="0.0998%" height="15" fill="rgb(249,227,8)" fg:x="943" fg:w="1"/><text x="94.3618%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (1 samples, 0.10%)</title><rect x="94.1118%" y="1413" width="0.0998%" height="15" fill="rgb(253,141,45)" fg:x="943" fg:w="1"/><text x="94.3618%" y="1423.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (29 samples, 2.89%)</title><rect x="94.3114%" y="1397" width="2.8942%" height="15" fill="rgb(234,184,4)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1407.50">&lt;p..</text></g><g><title>syscall (29 samples, 2.89%)</title><rect x="94.3114%" y="1381" width="2.8942%" height="15" fill="rgb(218,194,23)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1391.50">sy..</text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 2.89%)</title><rect x="94.3114%" y="1365" width="2.8942%" height="15" fill="rgb(235,66,41)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1375.50">en..</text></g><g><title>do_syscall_64 (29 samples, 2.89%)</title><rect x="94.3114%" y="1349" width="2.8942%" height="15" fill="rgb(245,217,1)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1359.50">do..</text></g><g><title>__x64_sys_futex (29 samples, 2.89%)</title><rect x="94.3114%" y="1333" width="2.8942%" height="15" fill="rgb(229,91,1)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1343.50">__..</text></g><g><title>do_futex (29 samples, 2.89%)</title><rect x="94.3114%" y="1317" width="2.8942%" height="15" fill="rgb(207,101,30)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1327.50">do..</text></g><g><title>futex_wake (29 samples, 2.89%)</title><rect x="94.3114%" y="1301" width="2.8942%" height="15" fill="rgb(223,82,49)" fg:x="945" fg:w="29"/><text x="94.5614%" y="1311.50">fu..</text></g><g><title>wake_up_q (26 samples, 2.59%)</title><rect x="94.6108%" y="1285" width="2.5948%" height="15" fill="rgb(218,167,17)" fg:x="948" fg:w="26"/><text x="94.8608%" y="1295.50">wa..</text></g><g><title>try_to_wake_up (26 samples, 2.59%)</title><rect x="94.6108%" y="1269" width="2.5948%" height="15" fill="rgb(208,103,14)" fg:x="948" fg:w="26"/><text x="94.8608%" y="1279.50">tr..</text></g><g><title>__lock_text_start (26 samples, 2.59%)</title><rect x="94.6108%" y="1253" width="2.5948%" height="15" fill="rgb(238,20,8)" fg:x="948" fg:w="26"/><text x="94.8608%" y="1263.50">__..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (31 samples, 3.09%)</title><rect x="94.2116%" y="1429" width="3.0938%" height="15" fill="rgb(218,80,54)" fg:x="944" fg:w="31"/><text x="94.4616%" y="1439.50">par..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (31 samples, 3.09%)</title><rect x="94.2116%" y="1413" width="3.0938%" height="15" fill="rgb(240,144,17)" fg:x="944" fg:w="31"/><text x="94.4616%" y="1423.50">par..</text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.10%)</title><rect x="97.2056%" y="1397" width="0.0998%" height="15" fill="rgb(245,27,50)" fg:x="974" fg:w="1"/><text x="97.4556%" y="1407.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.10%)</title><rect x="97.2056%" y="1381" width="0.0998%" height="15" fill="rgb(251,51,7)" fg:x="974" fg:w="1"/><text x="97.4556%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (1 samples, 0.10%)</title><rect x="97.3054%" y="1429" width="0.0998%" height="15" fill="rgb(245,217,29)" fg:x="975" fg:w="1"/><text x="97.5554%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (1 samples, 0.10%)</title><rect x="97.3054%" y="1413" width="0.0998%" height="15" fill="rgb(221,176,29)" fg:x="975" fg:w="1"/><text x="97.5554%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (34 samples, 3.39%)</title><rect x="94.1118%" y="1461" width="3.3932%" height="15" fill="rgb(212,180,24)" fg:x="943" fg:w="34"/><text x="94.3618%" y="1471.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::transition_worker_from_searching (34 samples, 3.39%)</title><rect x="94.1118%" y="1445" width="3.3932%" height="15" fill="rgb(254,24,2)" fg:x="943" fg:w="34"/><text x="94.3618%" y="1455.50">tok..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Shared::notify_parked (1 samples, 0.10%)</title><rect x="97.4052%" y="1429" width="0.0998%" height="15" fill="rgb(230,100,2)" fg:x="976" fg:w="1"/><text x="97.6552%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (1 samples, 0.10%)</title><rect x="97.4052%" y="1413" width="0.0998%" height="15" fill="rgb(219,142,25)" fg:x="976" fg:w="1"/><text x="97.6552%" y="1423.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (1 samples, 0.10%)</title><rect x="97.4052%" y="1397" width="0.0998%" height="15" fill="rgb(240,73,43)" fg:x="976" fg:w="1"/><text x="97.6552%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.10%)</title><rect x="97.4052%" y="1381" width="0.0998%" height="15" fill="rgb(214,114,15)" fg:x="976" fg:w="1"/><text x="97.6552%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.10%)</title><rect x="97.4052%" y="1365" width="0.0998%" height="15" fill="rgb(207,130,4)" fg:x="976" fg:w="1"/><text x="97.6552%" y="1375.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (908 samples, 90.62%)</title><rect x="7.0858%" y="1477" width="90.6188%" height="15" fill="rgb(221,25,40)" fg:x="71" fg:w="908"/><text x="7.3358%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::task::list::OwnedTasks&lt;S&gt;::assert_owner (2 samples, 0.20%)</title><rect x="97.5050%" y="1461" width="0.1996%" height="15" fill="rgb(241,184,7)" fg:x="977" fg:w="2"/><text x="97.7550%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (2 samples, 0.20%)</title><rect x="97.7046%" y="1477" width="0.1996%" height="15" fill="rgb(235,159,4)" fg:x="979" fg:w="2"/><text x="97.9546%" y="1487.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.20%)</title><rect x="97.7046%" y="1461" width="0.1996%" height="15" fill="rgb(214,87,48)" fg:x="979" fg:w="2"/><text x="97.9546%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::{{closure}} (1 samples, 0.10%)</title><rect x="97.8044%" y="1445" width="0.0998%" height="15" fill="rgb(246,198,24)" fg:x="980" fg:w="1"/><text x="98.0544%" y="1455.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="97.8044%" y="1429" width="0.0998%" height="15" fill="rgb(209,66,40)" fg:x="980" fg:w="1"/><text x="98.0544%" y="1439.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (1 samples, 0.10%)</title><rect x="97.8044%" y="1413" width="0.0998%" height="15" fill="rgb(233,147,39)" fg:x="980" fg:w="1"/><text x="98.0544%" y="1423.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="99.3014%" y="1429" width="0.0998%" height="15" fill="rgb(231,145,52)" fg:x="995" fg:w="1"/><text x="99.5514%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (15 samples, 1.50%)</title><rect x="98.2036%" y="1461" width="1.4970%" height="15" fill="rgb(206,20,26)" fg:x="984" fg:w="15"/><text x="98.4536%" y="1471.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (10 samples, 1.00%)</title><rect x="98.7026%" y="1445" width="0.9980%" height="15" fill="rgb(238,220,4)" fg:x="989" fg:w="10"/><text x="98.9526%" y="1455.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (3 samples, 0.30%)</title><rect x="99.4012%" y="1429" width="0.2994%" height="15" fill="rgb(252,195,42)" fg:x="996" fg:w="3"/><text x="99.6512%" y="1439.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (1 samples, 0.10%)</title><rect x="99.7006%" y="1461" width="0.0998%" height="15" fill="rgb(209,10,6)" fg:x="999" fg:w="1"/><text x="99.9506%" y="1471.50"></text></g><g><title>[libc.so.6] (998 samples, 99.60%)</title><rect x="0.2994%" y="2037" width="99.6008%" height="15" fill="rgb(229,3,52)" fg:x="3" fg:w="998"/><text x="0.5494%" y="2047.50">[libc.so.6]</text></g><g><title>[libc.so.6] (998 samples, 99.60%)</title><rect x="0.2994%" y="2021" width="99.6008%" height="15" fill="rgb(253,49,37)" fg:x="3" fg:w="998"/><text x="0.5494%" y="2031.50">[libc.so.6]</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (998 samples, 99.60%)</title><rect x="0.2994%" y="2005" width="99.6008%" height="15" fill="rgb(240,103,49)" fg:x="3" fg:w="998"/><text x="0.5494%" y="2015.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (998 samples, 99.60%)</title><rect x="0.2994%" y="1989" width="99.6008%" height="15" fill="rgb(250,182,30)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1999.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (998 samples, 99.60%)</title><rect x="0.2994%" y="1973" width="99.6008%" height="15" fill="rgb(248,8,30)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1983.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1957" width="99.6008%" height="15" fill="rgb(237,120,30)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1967.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1941" width="99.6008%" height="15" fill="rgb(221,146,34)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1951.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (998 samples, 99.60%)</title><rect x="0.2994%" y="1925" width="99.6008%" height="15" fill="rgb(242,55,13)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1935.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (998 samples, 99.60%)</title><rect x="0.2994%" y="1909" width="99.6008%" height="15" fill="rgb(242,112,31)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1919.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (998 samples, 99.60%)</title><rect x="0.2994%" y="1893" width="99.6008%" height="15" fill="rgb(249,192,27)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1903.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (998 samples, 99.60%)</title><rect x="0.2994%" y="1877" width="99.6008%" height="15" fill="rgb(208,204,44)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1887.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1861" width="99.6008%" height="15" fill="rgb(208,93,54)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1871.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (998 samples, 99.60%)</title><rect x="0.2994%" y="1845" width="99.6008%" height="15" fill="rgb(242,1,31)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1855.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1829" width="99.6008%" height="15" fill="rgb(241,83,25)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1839.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (998 samples, 99.60%)</title><rect x="0.2994%" y="1813" width="99.6008%" height="15" fill="rgb(205,169,50)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1823.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (998 samples, 99.60%)</title><rect x="0.2994%" y="1797" width="99.6008%" height="15" fill="rgb(239,186,37)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1807.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (998 samples, 99.60%)</title><rect x="0.2994%" y="1781" width="99.6008%" height="15" fill="rgb(205,221,10)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1791.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (998 samples, 99.60%)</title><rect x="0.2994%" y="1765" width="99.6008%" height="15" fill="rgb(218,196,15)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1775.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (998 samples, 99.60%)</title><rect x="0.2994%" y="1749" width="99.6008%" height="15" fill="rgb(218,196,35)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1759.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (998 samples, 99.60%)</title><rect x="0.2994%" y="1733" width="99.6008%" height="15" fill="rgb(233,63,24)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1743.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (998 samples, 99.60%)</title><rect x="0.2994%" y="1717" width="99.6008%" height="15" fill="rgb(225,8,4)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1727.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (998 samples, 99.60%)</title><rect x="0.2994%" y="1701" width="99.6008%" height="15" fill="rgb(234,105,35)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1711.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (998 samples, 99.60%)</title><rect x="0.2994%" y="1685" width="99.6008%" height="15" fill="rgb(236,21,32)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1695.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (998 samples, 99.60%)</title><rect x="0.2994%" y="1669" width="99.6008%" height="15" fill="rgb(228,109,6)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1679.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (998 samples, 99.60%)</title><rect x="0.2994%" y="1653" width="99.6008%" height="15" fill="rgb(229,215,31)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1663.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1637" width="99.6008%" height="15" fill="rgb(221,52,54)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1647.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (998 samples, 99.60%)</title><rect x="0.2994%" y="1621" width="99.6008%" height="15" fill="rgb(252,129,43)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1631.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (998 samples, 99.60%)</title><rect x="0.2994%" y="1605" width="99.6008%" height="15" fill="rgb(248,183,27)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1615.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1589" width="99.6008%" height="15" fill="rgb(250,0,22)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1599.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (998 samples, 99.60%)</title><rect x="0.2994%" y="1573" width="99.6008%" height="15" fill="rgb(213,166,10)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1583.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1557" width="99.6008%" height="15" fill="rgb(207,163,36)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1567.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (998 samples, 99.60%)</title><rect x="0.2994%" y="1541" width="99.6008%" height="15" fill="rgb(208,122,22)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1551.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (998 samples, 99.60%)</title><rect x="0.2994%" y="1525" width="99.6008%" height="15" fill="rgb(207,104,49)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1535.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (998 samples, 99.60%)</title><rect x="0.2994%" y="1509" width="99.6008%" height="15" fill="rgb(248,211,50)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1519.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (998 samples, 99.60%)</title><rect x="0.2994%" y="1493" width="99.6008%" height="15" fill="rgb(217,13,45)" fg:x="3" fg:w="998"/><text x="0.5494%" y="1503.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (20 samples, 2.00%)</title><rect x="97.9042%" y="1477" width="1.9960%" height="15" fill="rgb(211,216,49)" fg:x="981" fg:w="20"/><text x="98.1542%" y="1487.50">t..</text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::pop (1 samples, 0.10%)</title><rect x="99.8004%" y="1461" width="0.0998%" height="15" fill="rgb(221,58,53)" fg:x="1000" fg:w="1"/><text x="100.0504%" y="1471.50"></text></g><g><title>tokio::runtime::task::inject::Inject&lt;T&gt;::is_empty (1 samples, 0.10%)</title><rect x="99.8004%" y="1445" width="0.0998%" height="15" fill="rgb(220,112,41)" fg:x="1000" fg:w="1"/><text x="100.0504%" y="1455.50"></text></g><g><title>all (1,002 samples, 100%)</title><rect x="0.0000%" y="2069" width="100.0000%" height="15" fill="rgb(236,38,28)" fg:x="0" fg:w="1002"/><text x="0.2500%" y="2079.50"></text></g><g><title>tokio-runtime-w (1,000 samples, 99.80%)</title><rect x="0.1996%" y="2053" width="99.8004%" height="15" fill="rgb(227,195,22)" fg:x="2" fg:w="1000"/><text x="0.4496%" y="2063.50">tokio-runtime-w</text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append (1 samples, 0.10%)</title><rect x="99.9002%" y="2037" width="0.0998%" height="15" fill="rgb(214,55,33)" fg:x="1001" fg:w="1"/><text x="100.1502%" y="2047.50"></text></g><g><title>&lt;http::header::name::HeaderName as http::header::map::into_header_name::Sealed&gt;::append (1 samples, 0.10%)</title><rect x="99.9002%" y="2021" width="0.0998%" height="15" fill="rgb(248,80,13)" fg:x="1001" fg:w="1"/><text x="100.1502%" y="2031.50"></text></g><g><title>http::header::map::HeaderMap&lt;T&gt;::append2 (1 samples, 0.10%)</title><rect x="99.9002%" y="2005" width="0.0998%" height="15" fill="rgb(238,52,6)" fg:x="1001" fg:w="1"/><text x="100.1502%" y="2015.50"></text></g><g><title>http::header::map::hash_elem_using (1 samples, 0.10%)</title><rect x="99.9002%" y="1989" width="0.0998%" height="15" fill="rgb(224,198,47)" fg:x="1001" fg:w="1"/><text x="100.1502%" y="1999.50"></text></g></svg></svg>